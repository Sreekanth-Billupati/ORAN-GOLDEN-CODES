// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ethernet_mux,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=3.200000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=0.000000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=443,HLS_SYN_LUT=161,HLS_VERSION=2019_1}" *)

module ethernet_mux (
        ap_clk,
        ap_rst_n,
        ether_mux_data_in_TDATA,
        ether_mux_data_in_TVALID,
        ether_mux_data_in_TREADY,
        ether_mux_data_in_TUSER,
        ether_mux_data_in_TKEEP,
        ether_mux_data_in_TLAST,
        sync_data_in_TDATA,
        sync_data_in_TVALID,
        sync_data_in_TREADY,
        sync_data_in_TUSER,
        sync_data_in_TKEEP,
        sync_data_in_TLAST,
        mgmt_data_in_TDATA,
        mgmt_data_in_TVALID,
        mgmt_data_in_TREADY,
        mgmt_data_in_TUSER,
        mgmt_data_in_TKEEP,
        mgmt_data_in_TLAST,
        eth_data_out_TDATA,
        eth_data_out_TVALID,
        eth_data_out_TREADY,
        eth_data_out_TUSER,
        eth_data_out_TKEEP,
        eth_data_out_TLAST,
        ptp_tag_filed_out_V,
        ptp_tag_filed_out_V_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [127:0] ether_mux_data_in_TDATA;
input   ether_mux_data_in_TVALID;
output   ether_mux_data_in_TREADY;
input  [0:0] ether_mux_data_in_TUSER;
input  [15:0] ether_mux_data_in_TKEEP;
input  [0:0] ether_mux_data_in_TLAST;
input  [127:0] sync_data_in_TDATA;
input   sync_data_in_TVALID;
output   sync_data_in_TREADY;
input  [0:0] sync_data_in_TUSER;
input  [15:0] sync_data_in_TKEEP;
input  [0:0] sync_data_in_TLAST;
input  [127:0] mgmt_data_in_TDATA;
input   mgmt_data_in_TVALID;
output   mgmt_data_in_TREADY;
input  [0:0] mgmt_data_in_TUSER;
input  [15:0] mgmt_data_in_TKEEP;
input  [0:0] mgmt_data_in_TLAST;
output  [127:0] eth_data_out_TDATA;
output   eth_data_out_TVALID;
input   eth_data_out_TREADY;
output  [0:0] eth_data_out_TUSER;
output  [15:0] eth_data_out_TKEEP;
output  [0:0] eth_data_out_TLAST;
output  [15:0] ptp_tag_filed_out_V;
output   ptp_tag_filed_out_V_ap_vld;

reg ether_mux_data_in_TREADY;
reg sync_data_in_TREADY;
reg mgmt_data_in_TREADY;
reg[127:0] eth_data_out_TDATA;
reg eth_data_out_TVALID;
reg[0:0] eth_data_out_TUSER;
reg[15:0] eth_data_out_TKEEP;
reg[0:0] eth_data_out_TLAST;
reg[15:0] ptp_tag_filed_out_V;
reg ptp_tag_filed_out_V_ap_vld;

 reg    ap_rst_n_inv;
reg    ether_mux_data_in_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire   [0:0] tmp_nbreadreq_fu_68_p6;
wire   [0:0] tmp_1_nbreadreq_fu_82_p6;
reg    sync_data_in_TDATA_blk_n;
reg    mgmt_data_in_TDATA_blk_n;
wire   [0:0] tmp_2_nbreadreq_fu_96_p6;
reg    eth_data_out_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] tmp_reg_219;
reg   [0:0] tmp_1_reg_223;
reg   [0:0] tmp_2_reg_227;
reg    ap_predicate_op9_read_state1;
reg    ap_predicate_op14_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_predicate_op48_write_state2;
reg    ap_predicate_op52_write_state2;
reg    ap_block_state2_io;
reg    ap_block_pp0_stage0_11001;
reg   [127:0] tmp_data_V_2_reg_231;
reg   [0:0] tmp_user_V_2_reg_236;
reg   [15:0] tmp_keep_V_2_reg_241;
reg   [0:0] tmp_last_V_2_reg_246;
reg   [127:0] tmp_data_V_1_reg_251;
reg   [0:0] tmp_user_V_1_reg_256;
reg   [15:0] tmp_keep_V_1_reg_261;
reg   [0:0] tmp_last_V_1_reg_266;
reg   [127:0] tmp_data_V_reg_271;
reg   [0:0] tmp_user_V_reg_276;
reg   [15:0] tmp_keep_V_reg_281;
reg   [0:0] tmp_last_V_reg_286;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_181;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_68_p6 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_reg_223 <= tmp_1_nbreadreq_fu_82_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_nbreadreq_fu_82_p6 == 1'd0) & (tmp_nbreadreq_fu_68_p6 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_2_reg_227 <= tmp_2_nbreadreq_fu_96_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_nbreadreq_fu_82_p6 == 1'd1) & (tmp_nbreadreq_fu_68_p6 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_1_reg_251 <= ether_mux_data_in_TDATA;
        tmp_keep_V_1_reg_261 <= ether_mux_data_in_TKEEP;
        tmp_last_V_1_reg_266 <= ether_mux_data_in_TLAST;
        tmp_user_V_1_reg_256 <= ether_mux_data_in_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_nbreadreq_fu_96_p6 == 1'd1) & (tmp_1_nbreadreq_fu_82_p6 == 1'd0) & (tmp_nbreadreq_fu_68_p6 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_2_reg_231 <= mgmt_data_in_TDATA;
        tmp_keep_V_2_reg_241 <= mgmt_data_in_TKEEP;
        tmp_last_V_2_reg_246 <= mgmt_data_in_TLAST;
        tmp_user_V_2_reg_236 <= mgmt_data_in_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_68_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_reg_271 <= sync_data_in_TDATA;
        tmp_keep_V_reg_281 <= sync_data_in_TKEEP;
        tmp_last_V_reg_286 <= sync_data_in_TLAST;
        tmp_user_V_reg_276 <= sync_data_in_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_219 <= tmp_nbreadreq_fu_68_p6;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_condition_181)) begin
        if ((tmp_reg_219 == 1'd1)) begin
            eth_data_out_TDATA = tmp_data_V_reg_271;
        end else if ((ap_predicate_op52_write_state2 == 1'b1)) begin
            eth_data_out_TDATA = tmp_data_V_1_reg_251;
        end else if ((ap_predicate_op48_write_state2 == 1'b1)) begin
            eth_data_out_TDATA = tmp_data_V_2_reg_231;
        end else begin
            eth_data_out_TDATA = 'bx;
        end
    end else begin
        eth_data_out_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_227 == 1'd1) & (tmp_1_reg_223 == 1'd0) & (tmp_reg_219 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_1_reg_223 == 1'd1) & (tmp_reg_219 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_reg_219 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        eth_data_out_TDATA_blk_n = eth_data_out_TREADY;
    end else begin
        eth_data_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_181)) begin
        if ((tmp_reg_219 == 1'd1)) begin
            eth_data_out_TKEEP = tmp_keep_V_reg_281;
        end else if ((ap_predicate_op52_write_state2 == 1'b1)) begin
            eth_data_out_TKEEP = tmp_keep_V_1_reg_261;
        end else if ((ap_predicate_op48_write_state2 == 1'b1)) begin
            eth_data_out_TKEEP = tmp_keep_V_2_reg_241;
        end else begin
            eth_data_out_TKEEP = 'bx;
        end
    end else begin
        eth_data_out_TKEEP = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_181)) begin
        if ((tmp_reg_219 == 1'd1)) begin
            eth_data_out_TLAST = tmp_last_V_reg_286;
        end else if ((ap_predicate_op52_write_state2 == 1'b1)) begin
            eth_data_out_TLAST = tmp_last_V_1_reg_266;
        end else if ((ap_predicate_op48_write_state2 == 1'b1)) begin
            eth_data_out_TLAST = tmp_last_V_2_reg_246;
        end else begin
            eth_data_out_TLAST = 'bx;
        end
    end else begin
        eth_data_out_TLAST = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_181)) begin
        if ((tmp_reg_219 == 1'd1)) begin
            eth_data_out_TUSER = tmp_user_V_reg_276;
        end else if ((ap_predicate_op52_write_state2 == 1'b1)) begin
            eth_data_out_TUSER = tmp_user_V_1_reg_256;
        end else if ((ap_predicate_op48_write_state2 == 1'b1)) begin
            eth_data_out_TUSER = tmp_user_V_2_reg_236;
        end else begin
            eth_data_out_TUSER = 'bx;
        end
    end else begin
        eth_data_out_TUSER = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_reg_219 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op52_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op48_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        eth_data_out_TVALID = 1'b1;
    end else begin
        eth_data_out_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_nbreadreq_fu_82_p6 == 1'd1) & (tmp_nbreadreq_fu_68_p6 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ether_mux_data_in_TDATA_blk_n = ether_mux_data_in_TVALID;
    end else begin
        ether_mux_data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op14_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ether_mux_data_in_TREADY = 1'b1;
    end else begin
        ether_mux_data_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_nbreadreq_fu_96_p6 == 1'd1) & (tmp_1_nbreadreq_fu_82_p6 == 1'd0) & (tmp_nbreadreq_fu_68_p6 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mgmt_data_in_TDATA_blk_n = mgmt_data_in_TVALID;
    end else begin
        mgmt_data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op9_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mgmt_data_in_TREADY = 1'b1;
    end else begin
        mgmt_data_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_219 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        ptp_tag_filed_out_V = 16'd5;
    end else if ((((tmp_2_reg_227 == 1'd1) & (tmp_1_reg_223 == 1'd0) & (tmp_reg_219 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((tmp_1_reg_223 == 1'd1) & (tmp_reg_219 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)))) begin
        ptp_tag_filed_out_V = 16'd0;
    end else begin
        ptp_tag_filed_out_V = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_227 == 1'd1) & (tmp_1_reg_223 == 1'd0) & (tmp_reg_219 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_1_reg_223 == 1'd1) & (tmp_reg_219 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_reg_219 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ptp_tag_filed_out_V_ap_vld = 1'b1;
    end else begin
        ptp_tag_filed_out_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_68_p6 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sync_data_in_TDATA_blk_n = sync_data_in_TVALID;
    end else begin
        sync_data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_68_p6 == 1'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sync_data_in_TREADY = 1'b1;
    end else begin
        sync_data_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op14_read_state1 == 1'b1) & (ether_mux_data_in_TVALID == 1'b0)) | ((ap_predicate_op9_read_state1 == 1'b1) & (mgmt_data_in_TVALID == 1'b0)) | ((tmp_nbreadreq_fu_68_p6 == 1'd1) & (sync_data_in_TVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state2_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == 1'b1) & (((ap_predicate_op14_read_state1 == 1'b1) & (ether_mux_data_in_TVALID == 1'b0)) | ((ap_predicate_op9_read_state1 == 1'b1) & (mgmt_data_in_TVALID == 1'b0)) | ((tmp_nbreadreq_fu_68_p6 == 1'd1) & (sync_data_in_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state2_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == 1'b1) & (((ap_predicate_op14_read_state1 == 1'b1) & (ether_mux_data_in_TVALID == 1'b0)) | ((ap_predicate_op9_read_state1 == 1'b1) & (mgmt_data_in_TVALID == 1'b0)) | ((tmp_nbreadreq_fu_68_p6 == 1'd1) & (sync_data_in_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (((ap_predicate_op14_read_state1 == 1'b1) & (ether_mux_data_in_TVALID == 1'b0)) | ((ap_predicate_op9_read_state1 == 1'b1) & (mgmt_data_in_TVALID == 1'b0)) | ((tmp_nbreadreq_fu_68_p6 == 1'd1) & (sync_data_in_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state2_io = (((tmp_reg_219 == 1'd1) & (eth_data_out_TREADY == 1'b0)) | ((ap_predicate_op52_write_state2 == 1'b1) & (eth_data_out_TREADY == 1'b0)) | ((ap_predicate_op48_write_state2 == 1'b1) & (eth_data_out_TREADY == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_181 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op14_read_state1 = ((tmp_1_nbreadreq_fu_82_p6 == 1'd1) & (tmp_nbreadreq_fu_68_p6 == 1'd0));
end

always @ (*) begin
    ap_predicate_op48_write_state2 = ((tmp_2_reg_227 == 1'd1) & (tmp_1_reg_223 == 1'd0) & (tmp_reg_219 == 1'd0));
end

always @ (*) begin
    ap_predicate_op52_write_state2 = ((tmp_1_reg_223 == 1'd1) & (tmp_reg_219 == 1'd0));
end

always @ (*) begin
    ap_predicate_op9_read_state1 = ((tmp_2_nbreadreq_fu_96_p6 == 1'd1) & (tmp_1_nbreadreq_fu_82_p6 == 1'd0) & (tmp_nbreadreq_fu_68_p6 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign tmp_1_nbreadreq_fu_82_p6 = ether_mux_data_in_TVALID;

assign tmp_2_nbreadreq_fu_96_p6 = mgmt_data_in_TVALID;

assign tmp_nbreadreq_fu_68_p6 = sync_data_in_TVALID;

endmodule //ethernet_mux
