

================================================================
== Vivado HLS Report for 'L1_Data_Gen'
================================================================
* Date:           Wed Apr  7 10:55:16 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        L1_Data_Gen
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     2.202|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.20>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%data_src_state_load = load i2* @data_src_state, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:49]   --->   Operation 4 'load' 'data_src_state_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%seq_count_V_load = load i1* @seq_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:54]   --->   Operation 5 'load' 'seq_count_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%sec_count_V = load i4* @section_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:81]   --->   Operation 6 'load' 'sec_count_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%numExt_V_load = load i4* @numExt_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:114]   --->   Operation 7 'load' 'numExt_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.67ns)   --->   "store i1 true, i1* @seq_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:172]   --->   Operation 8 'store' <Predicate = (data_src_state_load == 0 & !seq_count_V_load)> <Delay = 0.67>
ST_1 : Operation 9 [1/1] (0.71ns)   --->   "store i2 0, i2* @data_src_state, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:179]   --->   Operation 9 'store' <Predicate = (data_src_state_load == 0 & !seq_count_V_load)> <Delay = 0.71>
ST_1 : Operation 10 [1/1] (0.67ns)   --->   "store i5 0, i5* @ext_ind_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:180]   --->   Operation 10 'store' <Predicate = (data_src_state_load == 0 & !seq_count_V_load)> <Delay = 0.67>
ST_1 : Operation 11 [1/1] (0.65ns)   --->   "br label %13"   --->   Operation 11 'br' <Predicate = (data_src_state_load == 0 & !seq_count_V_load)> <Delay = 0.65>
ST_1 : Operation 12 [1/1] (0.67ns)   --->   "store i1 false, i1* @seq_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:163]   --->   Operation 12 'store' <Predicate = (data_src_state_load == 0 & seq_count_V_load)> <Delay = 0.67>
ST_1 : Operation 13 [1/1] (0.71ns)   --->   "store i2 1, i2* @data_src_state, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:170]   --->   Operation 13 'store' <Predicate = (data_src_state_load == 0 & seq_count_V_load)> <Delay = 0.71>
ST_1 : Operation 14 [1/1] (0.65ns)   --->   "br label %13" [L1_Data_Gen/L1_Data_Gen.cpp:171]   --->   Operation 14 'br' <Predicate = (data_src_state_load == 0 & seq_count_V_load)> <Delay = 0.65>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%t_V = load i5* @ext_ind_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:112]   --->   Operation 15 'load' 't_V' <Predicate = (data_src_state_load == 3)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%lhs_V = zext i4 %numExt_V_load to i5" [L1_Data_Gen/L1_Data_Gen.cpp:114]   --->   Operation 16 'zext' 'lhs_V' <Predicate = (data_src_state_load == 3)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_Val2_s = load i4* @temp_ind_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:114]   --->   Operation 17 'load' 'p_Val2_s' <Predicate = (data_src_state_load == 3)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%rhs_V = zext i4 %p_Val2_s to i5" [L1_Data_Gen/L1_Data_Gen.cpp:114]   --->   Operation 18 'zext' 'rhs_V' <Predicate = (data_src_state_load == 3)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.79ns)   --->   "%ret_V = sub i5 %lhs_V, %rhs_V" [L1_Data_Gen/L1_Data_Gen.cpp:114]   --->   Operation 19 'sub' 'ret_V' <Predicate = (data_src_state_load == 3)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_1 = call i4 @_ssdm_op_PartSelect.i4.i5.i32.i32(i5 %ret_V, i32 1, i32 4)" [L1_Data_Gen/L1_Data_Gen.cpp:114]   --->   Operation 20 'partselect' 'tmp_1' <Predicate = (data_src_state_load == 3)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.72ns)   --->   "%icmp_ln895 = icmp sgt i4 %tmp_1, 0" [L1_Data_Gen/L1_Data_Gen.cpp:114]   --->   Operation 21 'icmp' 'icmp_ln895' <Predicate = (data_src_state_load == 3)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "br i1 %icmp_ln895, label %5, label %"aesl_mux_load.30[9 x i16]P.i5.i64.exit388"" [L1_Data_Gen/L1_Data_Gen.cpp:114]   --->   Operation 22 'br' <Predicate = (data_src_state_load == 3)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.67ns)   --->   "store i1 false, i1* @seq_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:136]   --->   Operation 23 'store' <Predicate = (data_src_state_load == 3 & !icmp_ln895)> <Delay = 0.67>
ST_1 : Operation 24 [1/1] (0.78ns)   --->   "%UnifiedRetVal_i = call i12 @_ssdm_op_Mux.ap_auto.32i12.i5(i12 -1519, i12 -1263, i12 -1262, i12 -1007, i12 -1006, i12 -1005, i12 -751, i12 -750, i12 -749, i12 -748, i12 -495, i12 -494, i12 -493, i12 -492, i12 -491, i12 273, i12 529, i12 530, i12 785, i12 786, i12 787, i12 1041, i12 1042, i12 1043, i12 1044, i12 1297, i12 1298, i12 1299, i12 1300, i12 1301, i12 1301, i12 1301, i5 %t_V)" [L1_Data_Gen/L1_Data_Gen.cpp:112]   --->   Operation 24 'mux' 'UnifiedRetVal_i' <Predicate = (data_src_state_load == 3 & !icmp_ln895)> <Delay = 0.78> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln738 = zext i12 %UnifiedRetVal_i to i15" [L1_Data_Gen/L1_Data_Gen.cpp:140]   --->   Operation 25 'zext' 'zext_ln738' <Predicate = (data_src_state_load == 3 & !icmp_ln895)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.78ns)   --->   "%add_ln700 = add i5 %t_V, 1" [L1_Data_Gen/L1_Data_Gen.cpp:140]   --->   Operation 26 'add' 'add_ln700' <Predicate = (data_src_state_load == 3 & !icmp_ln895)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.67ns)   --->   "store i5 %add_ln700, i5* @ext_ind_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:140]   --->   Operation 27 'store' <Predicate = (data_src_state_load == 3 & !icmp_ln895)> <Delay = 0.67>
ST_1 : Operation 28 [1/1] (0.65ns)   --->   "store i4 0, i4* @temp_ind_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:141]   --->   Operation 28 'store' <Predicate = (data_src_state_load == 3 & !icmp_ln895)> <Delay = 0.65>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%p_Result_3 = call i54 @_ssdm_op_BitConcatenate.i54.i19.i15.i20(i19 -125184, i15 %zext_ln738, i20 0)" [L1_Data_Gen/L1_Data_Gen.cpp:142]   --->   Operation 29 'bitconcatenate' 'p_Result_3' <Predicate = (data_src_state_load == 3 & !icmp_ln895)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.72ns)   --->   "%icmp_ln879 = icmp eq i4 %sec_count_V, -7" [L1_Data_Gen/L1_Data_Gen.cpp:144]   --->   Operation 30 'icmp' 'icmp_ln879' <Predicate = (data_src_state_load == 3 & !icmp_ln895)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879, label %7, label %8" [L1_Data_Gen/L1_Data_Gen.cpp:144]   --->   Operation 31 'br' <Predicate = (data_src_state_load == 3 & !icmp_ln895)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.79ns)   --->   "%add_ln700_3 = add i4 %sec_count_V, 1" [L1_Data_Gen/L1_Data_Gen.cpp:151]   --->   Operation 32 'add' 'add_ln700_3' <Predicate = (data_src_state_load == 3 & !icmp_ln895 & !icmp_ln879)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.65ns)   --->   "store i4 %add_ln700_3, i4* @section_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:151]   --->   Operation 33 'store' <Predicate = (data_src_state_load == 3 & !icmp_ln895 & !icmp_ln879)> <Delay = 0.65>
ST_1 : Operation 34 [1/1] (0.67ns)   --->   "br label %9"   --->   Operation 34 'br' <Predicate = (data_src_state_load == 3 & !icmp_ln895 & !icmp_ln879)> <Delay = 0.67>
ST_1 : Operation 35 [1/1] (0.65ns)   --->   "store i4 0, i4* @section_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:145]   --->   Operation 35 'store' <Predicate = (data_src_state_load == 3 & !icmp_ln895 & icmp_ln879)> <Delay = 0.65>
ST_1 : Operation 36 [1/1] (0.67ns)   --->   "br label %9" [L1_Data_Gen/L1_Data_Gen.cpp:150]   --->   Operation 36 'br' <Predicate = (data_src_state_load == 3 & !icmp_ln895 & icmp_ln879)> <Delay = 0.67>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln681 = trunc i4 %p_Val2_s to i1" [L1_Data_Gen/L1_Data_Gen.cpp:115]   --->   Operation 37 'trunc' 'trunc_ln681' <Predicate = (data_src_state_load == 3 & icmp_ln895)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "br i1 %trunc_ln681, label %"aesl_mux_load.30[9 x i16]P.i5.i64.exit132", label %"aesl_mux_load.30[9 x i16]P.i5.i64.exit196"" [L1_Data_Gen/L1_Data_Gen.cpp:115]   --->   Operation 38 'br' <Predicate = (data_src_state_load == 3 & icmp_ln895)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.67ns)   --->   "store i1 true, i1* @seq_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:123]   --->   Operation 39 'store' <Predicate = (data_src_state_load == 3 & icmp_ln895 & !trunc_ln681)> <Delay = 0.67>
ST_1 : Operation 40 [1/1] (0.78ns)   --->   "%UnifiedRetVal_i2 = call i1 @_ssdm_op_Mux.ap_auto.32i1.i5(i1 true, i1 true, i1 false, i1 true, i1 true, i1 false, i1 true, i1 true, i1 true, i1 false, i1 true, i1 true, i1 true, i1 true, i1 false, i1 true, i1 true, i1 false, i1 true, i1 true, i1 true, i1 false, i1 true, i1 true, i1 false, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i5 %t_V)" [L1_Data_Gen/L1_Data_Gen.cpp:125]   --->   Operation 40 'mux' 'UnifiedRetVal_i2' <Predicate = (data_src_state_load == 3 & icmp_ln895 & !trunc_ln681)> <Delay = 0.78> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.78ns)   --->   "%UnifiedRetVal_i3 = call i5 @_ssdm_op_Mux.ap_auto.32i5.i5(i5 8, i5 4, i5 4, i5 4, i5 4, i5 4, i5 5, i5 5, i5 5, i5 5, i5 -16, i5 -16, i5 -16, i5 -16, i5 -16, i5 8, i5 4, i5 4, i5 4, i5 4, i5 4, i5 5, i5 5, i5 5, i5 5, i5 -16, i5 -16, i5 -16, i5 -16, i5 -16, i5 -16, i5 -16, i5 %t_V)" [L1_Data_Gen/L1_Data_Gen.cpp:112]   --->   Operation 41 'mux' 'UnifiedRetVal_i3' <Predicate = (data_src_state_load == 3 & icmp_ln895 & !trunc_ln681)> <Delay = 0.78> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%UnifiedRetVal_i323_c = zext i5 %UnifiedRetVal_i3 to i8" [L1_Data_Gen/L1_Data_Gen.cpp:112]   --->   Operation 42 'zext' 'UnifiedRetVal_i323_c' <Predicate = (data_src_state_load == 3 & icmp_ln895 & !trunc_ln681)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%p_Result_2 = call i54 @_ssdm_op_BitConcatenate.i54.i11.i1.i18.i8.i16(i11 -490, i1 %UnifiedRetVal_i2, i18 320, i8 %UnifiedRetVal_i323_c, i16 0)" [L1_Data_Gen/L1_Data_Gen.cpp:131]   --->   Operation 43 'bitconcatenate' 'p_Result_2' <Predicate = (data_src_state_load == 3 & icmp_ln895 & !trunc_ln681)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.65ns)   --->   "br label %6"   --->   Operation 44 'br' <Predicate = (data_src_state_load == 3 & icmp_ln895 & !trunc_ln681)> <Delay = 0.65>
ST_1 : Operation 45 [1/1] (0.67ns)   --->   "store i1 false, i1* @seq_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:116]   --->   Operation 45 'store' <Predicate = (data_src_state_load == 3 & icmp_ln895 & trunc_ln681)> <Delay = 0.67>
ST_1 : Operation 46 [1/1] (0.78ns)   --->   "%UnifiedRetVal_i1 = call i12 @_ssdm_op_Mux.ap_auto.32i12.i5(i12 -1519, i12 -1263, i12 -1262, i12 -1007, i12 -1006, i12 -1005, i12 -751, i12 -750, i12 -749, i12 -748, i12 -495, i12 -494, i12 -493, i12 -492, i12 -491, i12 273, i12 529, i12 530, i12 785, i12 786, i12 787, i12 1041, i12 1042, i12 1043, i12 1044, i12 1297, i12 1298, i12 1299, i12 1300, i12 1301, i12 1301, i12 1301, i5 %t_V)" [L1_Data_Gen/L1_Data_Gen.cpp:112]   --->   Operation 46 'mux' 'UnifiedRetVal_i1' <Predicate = (data_src_state_load == 3 & icmp_ln895 & trunc_ln681)> <Delay = 0.78> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln391 = zext i12 %UnifiedRetVal_i1 to i15" [L1_Data_Gen/L1_Data_Gen.cpp:120]   --->   Operation 47 'zext' 'zext_ln391' <Predicate = (data_src_state_load == 3 & icmp_ln895 & trunc_ln681)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%p_Result_1 = call i54 @_ssdm_op_BitConcatenate.i54.i19.i15.i20(i19 -125184, i15 %zext_ln391, i20 0)" [L1_Data_Gen/L1_Data_Gen.cpp:120]   --->   Operation 48 'bitconcatenate' 'p_Result_1' <Predicate = (data_src_state_load == 3 & icmp_ln895 & trunc_ln681)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.78ns)   --->   "%add_ln700_1 = add i5 %t_V, 1" [L1_Data_Gen/L1_Data_Gen.cpp:121]   --->   Operation 49 'add' 'add_ln700_1' <Predicate = (data_src_state_load == 3 & icmp_ln895 & trunc_ln681)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.67ns)   --->   "store i5 %add_ln700_1, i5* @ext_ind_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:121]   --->   Operation 50 'store' <Predicate = (data_src_state_load == 3 & icmp_ln895 & trunc_ln681)> <Delay = 0.67>
ST_1 : Operation 51 [1/1] (0.65ns)   --->   "br label %6" [L1_Data_Gen/L1_Data_Gen.cpp:122]   --->   Operation 51 'br' <Predicate = (data_src_state_load == 3 & icmp_ln895 & trunc_ln681)> <Delay = 0.65>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%p_02605_0_2 = phi i54 [ %p_Result_2, %"aesl_mux_load.30[9 x i16]P.i5.i64.exit196" ], [ %p_Result_1, %"aesl_mux_load.30[9 x i16]P.i5.i64.exit132" ]"   --->   Operation 52 'phi' 'p_02605_0_2' <Predicate = (data_src_state_load == 3 & icmp_ln895)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.79ns)   --->   "%add_ln700_4 = add i4 %p_Val2_s, 1" [L1_Data_Gen/L1_Data_Gen.cpp:133]   --->   Operation 53 'add' 'add_ln700_4' <Predicate = (data_src_state_load == 3 & icmp_ln895)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.65ns)   --->   "store i4 %add_ln700_4, i4* @temp_ind_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:133]   --->   Operation 54 'store' <Predicate = (data_src_state_load == 3 & icmp_ln895)> <Delay = 0.65>
ST_1 : Operation 55 [1/1] (0.67ns)   --->   "br label %9" [L1_Data_Gen/L1_Data_Gen.cpp:135]   --->   Operation 55 'br' <Predicate = (data_src_state_load == 3 & icmp_ln895)> <Delay = 0.67>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%storemerge2892 = phi i2 [ -1, %6 ], [ 0, %7 ], [ 1, %8 ]"   --->   Operation 56 'phi' 'storemerge2892' <Predicate = (data_src_state_load == 3)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.71ns)   --->   "store i2 %storemerge2892, i2* @data_src_state, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:134]   --->   Operation 57 'store' <Predicate = (data_src_state_load == 3)> <Delay = 0.71>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln544 = zext i4 %sec_count_V to i64" [L1_Data_Gen/L1_Data_Gen.cpp:82]   --->   Operation 58 'zext' 'zext_ln544' <Predicate = (data_src_state_load == 2)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%numBeam_addr = getelementptr [10 x i3]* @numBeam, i64 0, i64 %zext_ln544" [L1_Data_Gen/L1_Data_Gen.cpp:82]   --->   Operation 59 'getelementptr' 'numBeam_addr' <Predicate = (data_src_state_load == 2)> <Delay = 0.00>
ST_1 : Operation 60 [2/2] (1.23ns)   --->   "%numBeam_load = load i3* %numBeam_addr, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:82]   --->   Operation 60 'load' 'numBeam_load' <Predicate = (data_src_state_load == 2)> <Delay = 1.23> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 10> <ROM>
ST_1 : Operation 61 [1/1] (0.67ns)   --->   "store i1 true, i1* @seq_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:94]   --->   Operation 61 'store' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.67>
ST_1 : Operation 62 [1/1] (0.72ns)   --->   "%icmp_ln31 = icmp eq i4 %sec_count_V, 0" [aesl_mux_load.10[10 x i16]P.i4.i64:31->L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 62 'icmp' 'icmp_ln31' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.72ns)   --->   "%icmp_ln31_1 = icmp eq i4 %sec_count_V, 1" [aesl_mux_load.10[10 x i16]P.i4.i64:31->L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 63 'icmp' 'icmp_ln31_1' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.72ns)   --->   "%icmp_ln31_2 = icmp eq i4 %sec_count_V, 2" [aesl_mux_load.10[10 x i16]P.i4.i64:31->L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 64 'icmp' 'icmp_ln31_2' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.72ns)   --->   "%icmp_ln31_3 = icmp eq i4 %sec_count_V, 3" [aesl_mux_load.10[10 x i16]P.i4.i64:31->L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 65 'icmp' 'icmp_ln31_3' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.72ns)   --->   "%icmp_ln31_4 = icmp eq i4 %sec_count_V, 4" [aesl_mux_load.10[10 x i16]P.i4.i64:31->L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 66 'icmp' 'icmp_ln31_4' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.72ns)   --->   "%icmp_ln31_5 = icmp eq i4 %sec_count_V, 5" [aesl_mux_load.10[10 x i16]P.i4.i64:31->L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 67 'icmp' 'icmp_ln31_5' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.72ns)   --->   "%icmp_ln31_6 = icmp eq i4 %sec_count_V, 6" [aesl_mux_load.10[10 x i16]P.i4.i64:31->L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 68 'icmp' 'icmp_ln31_6' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.72ns)   --->   "%icmp_ln31_7 = icmp eq i4 %sec_count_V, 7" [aesl_mux_load.10[10 x i16]P.i4.i64:31->L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 69 'icmp' 'icmp_ln31_7' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.72ns)   --->   "%icmp_ln31_8 = icmp eq i4 %sec_count_V, -8" [aesl_mux_load.10[10 x i16]P.i4.i64:31->L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 70 'icmp' 'icmp_ln31_8' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_7)   --->   "%select_ln215 = select i1 %icmp_ln31_8, i9 -207, i9 -208" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 71 'select' 'select_ln215' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.28ns)   --->   "%or_ln215 = or i1 %icmp_ln31_8, %icmp_ln31_7" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 72 'or' 'or_ln215' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_7)   --->   "%select_ln215_1 = select i1 %icmp_ln31_6, i9 -215, i9 -216" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 73 'select' 'select_ln215_1' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node or_ln215_4)   --->   "%or_ln215_1 = or i1 %icmp_ln31_6, %icmp_ln31_5" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 74 'or' 'or_ln215_1' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_6)   --->   "%select_ln215_2 = select i1 %icmp_ln31_4, i9 -217, i9 -218" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 75 'select' 'select_ln215_2' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.28ns)   --->   "%or_ln215_2 = or i1 %icmp_ln31_4, %icmp_ln31_3" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 76 'or' 'or_ln215_2' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_6)   --->   "%select_ln215_3 = select i1 %icmp_ln31_2, i9 -219, i9 -220" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 77 'select' 'select_ln215_3' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node or_ln215_6)   --->   "%or_ln215_3 = or i1 %icmp_ln31_2, %icmp_ln31_1" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 78 'or' 'or_ln215_3' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_8)   --->   "%select_ln215_4 = select i1 %icmp_ln31, i9 -221, i9 -206" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 79 'select' 'select_ln215_4' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_7)   --->   "%select_ln215_5 = select i1 %or_ln215, i9 %select_ln215, i9 %select_ln215_1" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 80 'select' 'select_ln215_5' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln215_4 = or i1 %or_ln215, %or_ln215_1" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 81 'or' 'or_ln215_4' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 82 [1/1] (0.39ns) (out node of the LUT)   --->   "%select_ln215_6 = select i1 %or_ln215_2, i9 %select_ln215_2, i9 %select_ln215_3" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 82 'select' 'select_ln215_6' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node or_ln215_6)   --->   "%or_ln215_5 = or i1 %or_ln215_2, %or_ln215_3" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 83 'or' 'or_ln215_5' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.39ns) (out node of the LUT)   --->   "%select_ln215_7 = select i1 %or_ln215_4, i9 %select_ln215_5, i9 %select_ln215_6" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 84 'select' 'select_ln215_7' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln215_6 = or i1 %or_ln215_4, %or_ln215_5" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 85 'or' 'or_ln215_6' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.39ns) (out node of the LUT)   --->   "%select_ln215_8 = select i1 %or_ln215_6, i9 %select_ln215_7, i9 %select_ln215_4" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 86 'select' 'select_ln215_8' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln215 = zext i9 %select_ln215_8 to i12" [L1_Data_Gen/L1_Data_Gen.cpp:96]   --->   Operation 87 'zext' 'zext_ln215' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_16)   --->   "%select_ln215_9 = select i1 %icmp_ln31_8, i8 -100, i8 -112" [L1_Data_Gen/L1_Data_Gen.cpp:99]   --->   Operation 88 'select' 'select_ln215_9' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_16)   --->   "%select_ln215_10 = select i1 %icmp_ln31_6, i8 -120, i8 -128" [L1_Data_Gen/L1_Data_Gen.cpp:99]   --->   Operation 89 'select' 'select_ln215_10' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_15)   --->   "%select_ln215_11 = select i1 %icmp_ln31_4, i6 -16, i6 28" [L1_Data_Gen/L1_Data_Gen.cpp:99]   --->   Operation 90 'select' 'select_ln215_11' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_15)   --->   "%select_ln215_12 = select i1 %icmp_ln31_2, i6 16, i6 8" [L1_Data_Gen/L1_Data_Gen.cpp:99]   --->   Operation 91 'select' 'select_ln215_12' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_17)   --->   "%select_ln215_13 = select i1 %icmp_ln31, i8 0, i8 -80" [L1_Data_Gen/L1_Data_Gen.cpp:99]   --->   Operation 92 'select' 'select_ln215_13' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_16)   --->   "%select_ln215_14 = select i1 %or_ln215, i8 %select_ln215_9, i8 %select_ln215_10" [L1_Data_Gen/L1_Data_Gen.cpp:99]   --->   Operation 93 'select' 'select_ln215_14' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.38ns) (out node of the LUT)   --->   "%select_ln215_15 = select i1 %or_ln215_2, i6 %select_ln215_11, i6 %select_ln215_12" [L1_Data_Gen/L1_Data_Gen.cpp:99]   --->   Operation 94 'select' 'select_ln215_15' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.38> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_16)   --->   "%zext_ln215_1 = zext i6 %select_ln215_15 to i8" [L1_Data_Gen/L1_Data_Gen.cpp:99]   --->   Operation 95 'zext' 'zext_ln215_1' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.39ns) (out node of the LUT)   --->   "%select_ln215_16 = select i1 %or_ln215_4, i8 %select_ln215_14, i8 %zext_ln215_1" [L1_Data_Gen/L1_Data_Gen.cpp:99]   --->   Operation 96 'select' 'select_ln215_16' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 97 [1/1] (0.39ns) (out node of the LUT)   --->   "%select_ln215_17 = select i1 %or_ln215_6, i8 %select_ln215_16, i8 %select_ln215_13" [L1_Data_Gen/L1_Data_Gen.cpp:99]   --->   Operation 97 'select' 'select_ln215_17' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_24)   --->   "%select_ln215_18 = select i1 %icmp_ln31_8, i5 -12, i5 12" [L1_Data_Gen/L1_Data_Gen.cpp:100]   --->   Operation 98 'select' 'select_ln215_18' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_24)   --->   "%select_ln215_19 = select i1 %icmp_ln31_4, i7 -48, i7 20" [L1_Data_Gen/L1_Data_Gen.cpp:100]   --->   Operation 99 'select' 'select_ln215_19' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_24)   --->   "%select_ln215_20 = select i1 %icmp_ln31_2, i7 12, i7 8" [L1_Data_Gen/L1_Data_Gen.cpp:100]   --->   Operation 100 'select' 'select_ln215_20' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_25)   --->   "%select_ln215_21 = select i1 %icmp_ln31, i7 8, i7 -48" [L1_Data_Gen/L1_Data_Gen.cpp:100]   --->   Operation 101 'select' 'select_ln215_21' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_24)   --->   "%select_ln215_22 = select i1 %or_ln215, i5 %select_ln215_18, i5 8" [L1_Data_Gen/L1_Data_Gen.cpp:100]   --->   Operation 102 'select' 'select_ln215_22' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_24)   --->   "%zext_ln215_2 = zext i5 %select_ln215_22 to i7" [L1_Data_Gen/L1_Data_Gen.cpp:100]   --->   Operation 103 'zext' 'zext_ln215_2' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_24)   --->   "%select_ln215_23 = select i1 %or_ln215_2, i7 %select_ln215_19, i7 %select_ln215_20" [L1_Data_Gen/L1_Data_Gen.cpp:100]   --->   Operation 104 'select' 'select_ln215_23' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 105 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln215_24 = select i1 %or_ln215_4, i7 %zext_ln215_2, i7 %select_ln215_23" [L1_Data_Gen/L1_Data_Gen.cpp:100]   --->   Operation 105 'select' 'select_ln215_24' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 106 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln215_25 = select i1 %or_ln215_6, i7 %select_ln215_24, i7 %select_ln215_21" [L1_Data_Gen/L1_Data_Gen.cpp:100]   --->   Operation 106 'select' 'select_ln215_25' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.36> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln215_3 = zext i7 %select_ln215_25 to i8" [L1_Data_Gen/L1_Data_Gen.cpp:100]   --->   Operation 107 'zext' 'zext_ln215_3' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "%p_Result_s = call i54 @_ssdm_op_BitConcatenate.i54.i11.i12.i2.i8.i8.i13(i11 -1022, i12 %zext_ln215, i2 0, i8 %select_ln215_17, i8 %zext_ln215_3, i13 -2)" [L1_Data_Gen/L1_Data_Gen.cpp:102]   --->   Operation 108 'bitconcatenate' 'p_Result_s' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.65ns)   --->   "br label %4"   --->   Operation 109 'br' <Predicate = (data_src_state_load == 2 & !seq_count_V_load)> <Delay = 0.65>
ST_1 : Operation 110 [1/1] (0.67ns)   --->   "store i1 false, i1* @seq_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:85]   --->   Operation 110 'store' <Predicate = (data_src_state_load == 2 & seq_count_V_load)> <Delay = 0.67>
ST_1 : Operation 111 [1/1] (0.65ns)   --->   "br label %4" [L1_Data_Gen/L1_Data_Gen.cpp:93]   --->   Operation 111 'br' <Predicate = (data_src_state_load == 2 & seq_count_V_load)> <Delay = 0.65>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%storemerge2893 = phi i2 [ -1, %2 ], [ -2, %3 ]"   --->   Operation 112 'phi' 'storemerge2893' <Predicate = (data_src_state_load == 2)> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.71ns)   --->   "store i2 %storemerge2893, i2* @data_src_state, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:92]   --->   Operation 113 'store' <Predicate = (data_src_state_load == 2)> <Delay = 0.71>
ST_1 : Operation 114 [1/1] (0.28ns)   --->   "%xor_ln54 = xor i1 %seq_count_V_load, true" [L1_Data_Gen/L1_Data_Gen.cpp:54]   --->   Operation 114 'xor' 'xor_ln54' <Predicate = (data_src_state_load == 1)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 115 [1/1] (0.17ns)   --->   "%select_ln54_1 = select i1 %seq_count_V_load, i2 -2, i2 1" [L1_Data_Gen/L1_Data_Gen.cpp:54]   --->   Operation 115 'select' 'select_ln54_1' <Predicate = (data_src_state_load == 1)> <Delay = 0.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 116 [1/1] (0.67ns)   --->   "store i1 %xor_ln54, i1* @seq_count_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:55]   --->   Operation 116 'store' <Predicate = (data_src_state_load == 1)> <Delay = 0.67>
ST_1 : Operation 117 [1/1] (0.71ns)   --->   "store i2 %select_ln54_1, i2* @data_src_state, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:59]   --->   Operation 117 'store' <Predicate = (data_src_state_load == 1)> <Delay = 0.71>

State 2 <SV = 1> <Delay = 1.23>
ST_2 : Operation 118 [1/1] (0.00ns)   --->   "br i1 %seq_count_V_load, label %11, label %12" [L1_Data_Gen/L1_Data_Gen.cpp:162]   --->   Operation 118 'br' <Predicate = (data_src_state_load == 0)> <Delay = 0.00>
ST_2 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_payload_V_1 = phi i52 [ -2246300913041328, %11 ], [ 5498900643920, %12 ]"   --->   Operation 119 'phi' 'tmp_payload_V_1' <Predicate = (data_src_state_load == 0)> <Delay = 0.00>
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln162 = zext i52 %tmp_payload_V_1 to i54" [L1_Data_Gen/L1_Data_Gen.cpp:185]   --->   Operation 120 'zext' 'zext_ln162' <Predicate = (data_src_state_load == 0)> <Delay = 0.00>
ST_2 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_3 = call i64 @_ssdm_op_BitConcatenate.i64.i10.i54(i10 416, i54 %zext_ln162)" [L1_Data_Gen/L1_Data_Gen.cpp:185]   --->   Operation 121 'bitconcatenate' 'tmp_3' <Predicate = (data_src_state_load == 0)> <Delay = 0.00>
ST_2 : Operation 122 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp_3)" [L1_Data_Gen/L1_Data_Gen.cpp:185]   --->   Operation 122 'write' <Predicate = (data_src_state_load == 0)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%tmp_payload_V_2 = phi i54 [ %p_02605_0_2, %6 ], [ %p_Result_3, %7 ], [ %p_Result_3, %8 ]"   --->   Operation 123 'phi' 'tmp_payload_V_2' <Predicate = (data_src_state_load == 3)> <Delay = 0.00>
ST_2 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_2 = call i64 @_ssdm_op_BitConcatenate.i64.i10.i54(i10 416, i54 %tmp_payload_V_2)" [L1_Data_Gen/L1_Data_Gen.cpp:156]   --->   Operation 124 'bitconcatenate' 'tmp_2' <Predicate = (data_src_state_load == 3)> <Delay = 0.00>
ST_2 : Operation 125 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp_2)" [L1_Data_Gen/L1_Data_Gen.cpp:156]   --->   Operation 125 'write' <Predicate = (data_src_state_load == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 126 [1/2] (1.23ns)   --->   "%numBeam_load = load i3* %numBeam_addr, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:82]   --->   Operation 126 'load' 'numBeam_load' <Predicate = (data_src_state_load == 2)> <Delay = 1.23> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 10> <ROM>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%shl_ln = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %numBeam_load, i1 false)" [L1_Data_Gen/L1_Data_Gen.cpp:82]   --->   Operation 127 'bitconcatenate' 'shl_ln' <Predicate = (data_src_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 128 [1/1] (0.00ns)   --->   "store i4 %shl_ln, i4* @numExt_V, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:82]   --->   Operation 128 'store' <Predicate = (data_src_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 129 [1/1] (0.00ns)   --->   "br i1 %seq_count_V_load, label %2, label %3" [L1_Data_Gen/L1_Data_Gen.cpp:84]   --->   Operation 129 'br' <Predicate = (data_src_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_payload_V = phi i54 [ -8973080042405888, %2 ], [ %p_Result_s, %3 ]"   --->   Operation 130 'phi' 'tmp_payload_V' <Predicate = (data_src_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 131 [1/1] (0.00ns)   --->   "%tmp_1_2 = call i64 @_ssdm_op_BitConcatenate.i64.i10.i54(i10 416, i54 %tmp_payload_V)" [L1_Data_Gen/L1_Data_Gen.cpp:106]   --->   Operation 131 'bitconcatenate' 'tmp_1_2' <Predicate = (data_src_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 132 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp_1_2)" [L1_Data_Gen/L1_Data_Gen.cpp:106]   --->   Operation 132 'write' <Predicate = (data_src_state_load == 2)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 133 [1/1] (0.40ns)   --->   "%select_ln54 = select i1 %seq_count_V_load, i54 4529987906437120, i54 4525600657375552" [L1_Data_Gen/L1_Data_Gen.cpp:54]   --->   Operation 133 'select' 'select_ln54' <Predicate = (data_src_state_load == 1)> <Delay = 0.40> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 134 [1/1] (0.00ns)   --->   "%tmp = call i64 @_ssdm_op_BitConcatenate.i64.i10.i54(i10 416, i54 %select_ln54)" [L1_Data_Gen/L1_Data_Gen.cpp:75]   --->   Operation 134 'bitconcatenate' 'tmp' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_2 : Operation 135 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp)" [L1_Data_Gen/L1_Data_Gen.cpp:75]   --->   Operation 135 'write' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 3 <SV = 2> <Delay = 0.76>
ST_3 : Operation 136 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %L1_data_out_V), !map !86"   --->   Operation 136 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 137 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %l1datagen_stateout_V), !map !93"   --->   Operation 137 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 138 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %CDATA_COUNTER_V), !map !97"   --->   Operation 138 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 139 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @L1_Data_Gen_str) nounwind"   --->   Operation 139 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 140 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [L1_Data_Gen/L1_Data_Gen.cpp:5]   --->   Operation 140 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 141 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %L1_data_out_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [L1_Data_Gen/L1_Data_Gen.cpp:7]   --->   Operation 141 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 142 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [L1_Data_Gen/L1_Data_Gen.cpp:8]   --->   Operation 142 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 143 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i2* @data_src_state, i32 1, [1 x i8]* @p_str) nounwind" [L1_Data_Gen/L1_Data_Gen.cpp:12]   --->   Operation 143 'specreset' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 144 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i1* @seq_count_V, i32 1, [1 x i8]* @p_str) nounwind" [L1_Data_Gen/L1_Data_Gen.cpp:44]   --->   Operation 144 'specreset' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 145 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %l1datagen_stateout_V, [8 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [L1_Data_Gen/L1_Data_Gen.cpp:45]   --->   Operation 145 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 146 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %CDATA_COUNTER_V, [8 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [L1_Data_Gen/L1_Data_Gen.cpp:46]   --->   Operation 146 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln301 = zext i2 %data_src_state_load to i8" [L1_Data_Gen/L1_Data_Gen.cpp:49]   --->   Operation 147 'zext' 'zext_ln301' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 148 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i8P(i8* %l1datagen_stateout_V, i8 %zext_ln301)" [L1_Data_Gen/L1_Data_Gen.cpp:49]   --->   Operation 148 'write' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 149 [1/1] (0.72ns)   --->   "switch i2 %data_src_state_load, label %._crit_edge3133 [
    i2 1, label %0
    i2 -2, label %1
    i2 -1, label %"aesl_mux_load.30[9 x i16]P.i5.i64.exit"
    i2 0, label %10
  ]" [L1_Data_Gen/L1_Data_Gen.cpp:50]   --->   Operation 149 'switch' <Predicate = true> <Delay = 0.72>
ST_3 : Operation 150 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp_3)" [L1_Data_Gen/L1_Data_Gen.cpp:185]   --->   Operation 150 'write' <Predicate = (data_src_state_load == 0)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 151 [1/1] (0.00ns)   --->   "br label %._crit_edge3133" [L1_Data_Gen/L1_Data_Gen.cpp:186]   --->   Operation 151 'br' <Predicate = (data_src_state_load == 0)> <Delay = 0.00>
ST_3 : Operation 152 [1/1] (0.00ns)   --->   "%t_V_1 = load i8* @cplane_data_counter_s, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:147]   --->   Operation 152 'load' 't_V_1' <Predicate = (data_src_state_load == 3 & !icmp_ln895 & icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 153 [1/1] (0.76ns)   --->   "%add_ln700_2 = add i8 %t_V_1, 1" [L1_Data_Gen/L1_Data_Gen.cpp:147]   --->   Operation 153 'add' 'add_ln700_2' <Predicate = (data_src_state_load == 3 & !icmp_ln895 & icmp_ln879)> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 154 [1/1] (0.00ns)   --->   "store i8 %add_ln700_2, i8* @cplane_data_counter_s, align 1" [L1_Data_Gen/L1_Data_Gen.cpp:147]   --->   Operation 154 'store' <Predicate = (data_src_state_load == 3 & !icmp_ln895 & icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 155 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i8P(i8* %CDATA_COUNTER_V, i8 %add_ln700_2)" [L1_Data_Gen/L1_Data_Gen.cpp:148]   --->   Operation 155 'write' <Predicate = (data_src_state_load == 3 & !icmp_ln895 & icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 156 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp_2)" [L1_Data_Gen/L1_Data_Gen.cpp:156]   --->   Operation 156 'write' <Predicate = (data_src_state_load == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 157 [1/1] (0.00ns)   --->   "br label %._crit_edge3133" [L1_Data_Gen/L1_Data_Gen.cpp:157]   --->   Operation 157 'br' <Predicate = (data_src_state_load == 3)> <Delay = 0.00>
ST_3 : Operation 158 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp_1_2)" [L1_Data_Gen/L1_Data_Gen.cpp:106]   --->   Operation 158 'write' <Predicate = (data_src_state_load == 2)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 159 [1/1] (0.00ns)   --->   "br label %._crit_edge3133" [L1_Data_Gen/L1_Data_Gen.cpp:107]   --->   Operation 159 'br' <Predicate = (data_src_state_load == 2)> <Delay = 0.00>
ST_3 : Operation 160 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp)" [L1_Data_Gen/L1_Data_Gen.cpp:75]   --->   Operation 160 'write' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 161 [1/1] (0.00ns)   --->   "br label %._crit_edge3133" [L1_Data_Gen/L1_Data_Gen.cpp:76]   --->   Operation 161 'br' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_3 : Operation 162 [1/1] (0.00ns)   --->   "ret void" [L1_Data_Gen/L1_Data_Gen.cpp:191]   --->   Operation 162 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.2ns
The critical path consists of the following:
	'load' operation ('t.V', L1_Data_Gen/L1_Data_Gen.cpp:81) on static variable 'section_count_V' [27]  (0 ns)
	'icmp' operation ('icmp_ln31_3', aesl_mux_load.10[10 x i16]P.i4.i64:31->L1_Data_Gen/L1_Data_Gen.cpp:96) [119]  (0.721 ns)
	'or' operation ('or_ln215_2', L1_Data_Gen/L1_Data_Gen.cpp:96) [130]  (0.287 ns)
	'select' operation ('select_ln215_6', L1_Data_Gen/L1_Data_Gen.cpp:96) [136]  (0.398 ns)
	'select' operation ('select_ln215_7', L1_Data_Gen/L1_Data_Gen.cpp:96) [138]  (0.398 ns)
	'select' operation ('select_ln215_8', L1_Data_Gen/L1_Data_Gen.cpp:96) [140]  (0.398 ns)

 <State 2>: 1.24ns
The critical path consists of the following:
	'load' operation ('numBeam_load', L1_Data_Gen/L1_Data_Gen.cpp:82) on array 'numBeam' [110]  (1.24 ns)

 <State 3>: 0.765ns
The critical path consists of the following:
	'load' operation ('t.V', L1_Data_Gen/L1_Data_Gen.cpp:147) on static variable 'cplane_data_counter_s' [72]  (0 ns)
	'add' operation ('add_ln700_2', L1_Data_Gen/L1_Data_Gen.cpp:147) [73]  (0.765 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
