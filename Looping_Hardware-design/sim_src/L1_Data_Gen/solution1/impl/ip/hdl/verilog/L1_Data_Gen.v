// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="L1_Data_Gen,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.202000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=334,HLS_SYN_LUT=1169,HLS_VERSION=2019_1}" *)

module L1_Data_Gen (
        ap_clk,
        ap_rst_n,
        L1_data_out_V_TDATA,
        L1_data_out_V_TVALID,
        L1_data_out_V_TREADY,
        l1datagen_stateout_V,
        CDATA_COUNTER_V
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
output  [63:0] L1_data_out_V_TDATA;
output   L1_data_out_V_TVALID;
input   L1_data_out_V_TREADY;
output  [7:0] l1datagen_stateout_V;
output  [7:0] CDATA_COUNTER_V;

 reg    ap_rst_n_inv;
reg   [63:0] L1_data_out_V_1_data_in;
reg   [63:0] L1_data_out_V_1_data_out;
reg    L1_data_out_V_1_vld_in;
wire    L1_data_out_V_1_vld_out;
wire    L1_data_out_V_1_ack_in;
wire    L1_data_out_V_1_ack_out;
reg   [63:0] L1_data_out_V_1_payload_A;
reg   [63:0] L1_data_out_V_1_payload_B;
reg    L1_data_out_V_1_sel_rd;
reg    L1_data_out_V_1_sel_wr;
wire    L1_data_out_V_1_sel;
wire    L1_data_out_V_1_load_A;
wire    L1_data_out_V_1_load_B;
reg   [1:0] L1_data_out_V_1_state;
wire    L1_data_out_V_1_state_cmp_full;
reg   [1:0] data_src_state;
reg   [0:0] seq_count_V;
reg   [3:0] section_count_V;
reg   [3:0] numExt_V;
wire   [3:0] numBeam_address0;
reg    numBeam_ce0;
wire   [2:0] numBeam_q0;
reg   [4:0] ext_ind_V;
reg   [3:0] temp_ind_V;
reg   [7:0] cplane_data_counter_s;
reg    L1_data_out_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [1:0] data_src_state_load_reg_1224;
reg    ap_enable_reg_pp0_iter2;
reg   [1:0] data_src_state_load_reg_1224_pp0_iter1_reg;
wire   [1:0] data_src_state_load_load_fu_455_p1;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] seq_count_V_load_load_fu_459_p1;
reg   [0:0] seq_count_V_load_reg_1229;
wire   [0:0] icmp_ln895_fu_523_p2;
reg   [0:0] icmp_ln895_reg_1234;
reg   [0:0] icmp_ln895_reg_1234_pp0_iter1_reg;
wire   [53:0] p_Result_3_fu_539_p4;
wire   [0:0] icmp_ln879_fu_549_p2;
reg   [0:0] icmp_ln879_reg_1244;
reg   [0:0] icmp_ln879_reg_1244_pp0_iter1_reg;
wire   [53:0] p_Result_s_fu_1094_p7;
wire   [63:0] tmp_3_fu_1146_p3;
wire   [63:0] tmp_2_fu_1155_p3;
wire   [63:0] tmp_1_2_fu_1178_p3;
wire   [63:0] tmp_fu_1194_p3;
reg    ap_block_pp0_stage0_subdone;
reg   [53:0] ap_phi_mux_p_02605_0_2_phi_fu_295_p4;
wire   [53:0] p_Result_2_fu_721_p6;
wire   [53:0] ap_phi_reg_pp0_iter0_p_02605_0_2_reg_292;
wire   [0:0] trunc_ln681_fu_573_p1;
wire   [53:0] p_Result_1_fu_740_p4;
reg   [1:0] ap_phi_mux_storemerge2892_phi_fu_305_p6;
wire   [1:0] ap_phi_reg_pp0_iter0_storemerge2892_reg_302;
reg   [1:0] ap_phi_mux_storemerge2893_phi_fu_319_p4;
wire   [1:0] ap_phi_reg_pp0_iter0_storemerge2893_reg_316;
wire   [51:0] ap_phi_reg_pp0_iter0_tmp_payload_V_1_reg_327;
reg   [51:0] ap_phi_reg_pp0_iter1_tmp_payload_V_1_reg_327;
wire   [53:0] ap_phi_reg_pp0_iter0_tmp_payload_V_2_reg_340;
reg   [53:0] ap_phi_reg_pp0_iter1_tmp_payload_V_2_reg_340;
wire   [53:0] ap_phi_reg_pp0_iter0_tmp_payload_V_reg_352;
reg   [53:0] ap_phi_reg_pp0_iter1_tmp_payload_V_reg_352;
wire   [63:0] zext_ln544_fu_769_p1;
wire   [1:0] select_ln54_1_fu_1122_p3;
wire   [0:0] xor_ln54_fu_1116_p2;
wire   [3:0] add_ln700_3_fu_555_p2;
wire   [3:0] shl_ln_fu_1164_p3;
reg   [3:0] ap_sig_allocacmp_numExt_V_load;
wire   [4:0] grp_fu_444_p2;
wire   [3:0] add_ln700_4_fu_751_p2;
wire   [7:0] add_ln700_2_fu_1211_p2;
reg    ap_block_pp0_stage0_01001;
wire   [4:0] lhs_V_fu_495_p1;
wire   [4:0] rhs_V_fu_503_p1;
wire   [4:0] ret_V_fu_507_p2;
wire   [3:0] tmp_1_fu_513_p4;
wire   [11:0] grp_fu_375_p34;
wire   [14:0] zext_ln738_fu_529_p1;
wire   [4:0] UnifiedRetVal_i3_fu_647_p34;
wire   [0:0] UnifiedRetVal_i2_fu_577_p34;
wire   [7:0] UnifiedRetVal_i323_c_fu_717_p1;
wire   [14:0] zext_ln391_fu_736_p1;
wire   [0:0] icmp_ln31_8_fu_822_p2;
wire   [0:0] icmp_ln31_7_fu_816_p2;
wire   [0:0] icmp_ln31_6_fu_810_p2;
wire   [0:0] icmp_ln31_5_fu_804_p2;
wire   [0:0] icmp_ln31_4_fu_798_p2;
wire   [0:0] icmp_ln31_3_fu_792_p2;
wire   [0:0] icmp_ln31_2_fu_786_p2;
wire   [0:0] icmp_ln31_1_fu_780_p2;
wire   [0:0] icmp_ln31_fu_774_p2;
wire   [0:0] or_ln215_fu_836_p2;
wire   [8:0] select_ln215_fu_828_p3;
wire   [8:0] select_ln215_1_fu_842_p3;
wire   [0:0] or_ln215_1_fu_850_p2;
wire   [0:0] or_ln215_2_fu_864_p2;
wire   [8:0] select_ln215_2_fu_856_p3;
wire   [8:0] select_ln215_3_fu_870_p3;
wire   [0:0] or_ln215_3_fu_878_p2;
wire   [0:0] or_ln215_4_fu_900_p2;
wire   [8:0] select_ln215_5_fu_892_p3;
wire   [8:0] select_ln215_6_fu_906_p3;
wire   [0:0] or_ln215_5_fu_914_p2;
wire   [0:0] or_ln215_6_fu_928_p2;
wire   [8:0] select_ln215_7_fu_920_p3;
wire   [8:0] select_ln215_4_fu_884_p3;
wire   [8:0] select_ln215_8_fu_934_p3;
wire   [7:0] select_ln215_9_fu_946_p3;
wire   [7:0] select_ln215_10_fu_954_p3;
wire   [5:0] select_ln215_11_fu_962_p3;
wire   [5:0] select_ln215_12_fu_970_p3;
wire   [5:0] select_ln215_15_fu_994_p3;
wire   [7:0] select_ln215_14_fu_986_p3;
wire   [7:0] zext_ln215_1_fu_1002_p1;
wire   [7:0] select_ln215_16_fu_1006_p3;
wire   [7:0] select_ln215_13_fu_978_p3;
wire   [4:0] select_ln215_18_fu_1022_p3;
wire   [4:0] select_ln215_22_fu_1054_p3;
wire   [6:0] select_ln215_19_fu_1030_p3;
wire   [6:0] select_ln215_20_fu_1038_p3;
wire   [6:0] zext_ln215_2_fu_1062_p1;
wire   [6:0] select_ln215_23_fu_1066_p3;
wire   [6:0] select_ln215_24_fu_1074_p3;
wire   [6:0] select_ln215_21_fu_1046_p3;
wire   [6:0] select_ln215_25_fu_1082_p3;
wire   [11:0] zext_ln215_fu_942_p1;
wire   [7:0] select_ln215_17_fu_1014_p3;
wire   [7:0] zext_ln215_3_fu_1090_p1;
wire   [53:0] zext_ln162_fu_1142_p1;
wire   [53:0] select_ln54_fu_1187_p3;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_329;
reg    ap_condition_256;
reg    ap_condition_311;
reg    ap_condition_285;
reg    ap_condition_231;
reg    ap_condition_292;
reg    ap_condition_286;

// power-on initialization
initial begin
#0 L1_data_out_V_1_sel_rd = 1'b0;
#0 L1_data_out_V_1_sel_wr = 1'b0;
#0 L1_data_out_V_1_state = 2'd0;
#0 data_src_state = 2'd0;
#0 seq_count_V = 1'd0;
#0 section_count_V = 4'd0;
#0 numExt_V = 4'd0;
#0 ext_ind_V = 5'd0;
#0 temp_ind_V = 4'd0;
#0 cplane_data_counter_s = 8'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

L1_Data_Gen_numBeam #(
    .DataWidth( 3 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
numBeam_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(numBeam_address0),
    .ce0(numBeam_ce0),
    .q0(numBeam_q0)
);

L1_Data_Gen_mux_325_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 12 ),
    .din11_WIDTH( 12 ),
    .din12_WIDTH( 12 ),
    .din13_WIDTH( 12 ),
    .din14_WIDTH( 12 ),
    .din15_WIDTH( 12 ),
    .din16_WIDTH( 12 ),
    .din17_WIDTH( 12 ),
    .din18_WIDTH( 12 ),
    .din19_WIDTH( 12 ),
    .din20_WIDTH( 12 ),
    .din21_WIDTH( 12 ),
    .din22_WIDTH( 12 ),
    .din23_WIDTH( 12 ),
    .din24_WIDTH( 12 ),
    .din25_WIDTH( 12 ),
    .din26_WIDTH( 12 ),
    .din27_WIDTH( 12 ),
    .din28_WIDTH( 12 ),
    .din29_WIDTH( 12 ),
    .din30_WIDTH( 12 ),
    .din31_WIDTH( 12 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 12 ))
L1_Data_Gen_mux_325_12_1_1_U1(
    .din0(12'd2577),
    .din1(12'd2833),
    .din2(12'd2834),
    .din3(12'd3089),
    .din4(12'd3090),
    .din5(12'd3091),
    .din6(12'd3345),
    .din7(12'd3346),
    .din8(12'd3347),
    .din9(12'd3348),
    .din10(12'd3601),
    .din11(12'd3602),
    .din12(12'd3603),
    .din13(12'd3604),
    .din14(12'd3605),
    .din15(12'd273),
    .din16(12'd529),
    .din17(12'd530),
    .din18(12'd785),
    .din19(12'd786),
    .din20(12'd787),
    .din21(12'd1041),
    .din22(12'd1042),
    .din23(12'd1043),
    .din24(12'd1044),
    .din25(12'd1297),
    .din26(12'd1298),
    .din27(12'd1299),
    .din28(12'd1300),
    .din29(12'd1301),
    .din30(12'd1301),
    .din31(12'd1301),
    .din32(ext_ind_V),
    .dout(grp_fu_375_p34)
);

L1_Data_Gen_mux_325_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 1 ),
    .din17_WIDTH( 1 ),
    .din18_WIDTH( 1 ),
    .din19_WIDTH( 1 ),
    .din20_WIDTH( 1 ),
    .din21_WIDTH( 1 ),
    .din22_WIDTH( 1 ),
    .din23_WIDTH( 1 ),
    .din24_WIDTH( 1 ),
    .din25_WIDTH( 1 ),
    .din26_WIDTH( 1 ),
    .din27_WIDTH( 1 ),
    .din28_WIDTH( 1 ),
    .din29_WIDTH( 1 ),
    .din30_WIDTH( 1 ),
    .din31_WIDTH( 1 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
L1_Data_Gen_mux_325_1_1_1_U2(
    .din0(1'd1),
    .din1(1'd1),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd0),
    .din6(1'd1),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd1),
    .din16(1'd1),
    .din17(1'd0),
    .din18(1'd1),
    .din19(1'd1),
    .din20(1'd1),
    .din21(1'd0),
    .din22(1'd1),
    .din23(1'd1),
    .din24(1'd0),
    .din25(1'd1),
    .din26(1'd1),
    .din27(1'd1),
    .din28(1'd1),
    .din29(1'd0),
    .din30(1'd0),
    .din31(1'd0),
    .din32(ext_ind_V),
    .dout(UnifiedRetVal_i2_fu_577_p34)
);

L1_Data_Gen_mux_325_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .din3_WIDTH( 5 ),
    .din4_WIDTH( 5 ),
    .din5_WIDTH( 5 ),
    .din6_WIDTH( 5 ),
    .din7_WIDTH( 5 ),
    .din8_WIDTH( 5 ),
    .din9_WIDTH( 5 ),
    .din10_WIDTH( 5 ),
    .din11_WIDTH( 5 ),
    .din12_WIDTH( 5 ),
    .din13_WIDTH( 5 ),
    .din14_WIDTH( 5 ),
    .din15_WIDTH( 5 ),
    .din16_WIDTH( 5 ),
    .din17_WIDTH( 5 ),
    .din18_WIDTH( 5 ),
    .din19_WIDTH( 5 ),
    .din20_WIDTH( 5 ),
    .din21_WIDTH( 5 ),
    .din22_WIDTH( 5 ),
    .din23_WIDTH( 5 ),
    .din24_WIDTH( 5 ),
    .din25_WIDTH( 5 ),
    .din26_WIDTH( 5 ),
    .din27_WIDTH( 5 ),
    .din28_WIDTH( 5 ),
    .din29_WIDTH( 5 ),
    .din30_WIDTH( 5 ),
    .din31_WIDTH( 5 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
L1_Data_Gen_mux_325_5_1_1_U3(
    .din0(5'd8),
    .din1(5'd4),
    .din2(5'd4),
    .din3(5'd4),
    .din4(5'd4),
    .din5(5'd4),
    .din6(5'd5),
    .din7(5'd5),
    .din8(5'd5),
    .din9(5'd5),
    .din10(5'd16),
    .din11(5'd16),
    .din12(5'd16),
    .din13(5'd16),
    .din14(5'd16),
    .din15(5'd8),
    .din16(5'd4),
    .din17(5'd4),
    .din18(5'd4),
    .din19(5'd4),
    .din20(5'd4),
    .din21(5'd5),
    .din22(5'd5),
    .din23(5'd5),
    .din24(5'd5),
    .din25(5'd16),
    .din26(5'd16),
    .din27(5'd16),
    .din28(5'd16),
    .din29(5'd16),
    .din30(5'd16),
    .din31(5'd16),
    .din32(ext_ind_V),
    .dout(UnifiedRetVal_i3_fu_647_p34)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        L1_data_out_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == L1_data_out_V_1_ack_out) & (1'b1 == L1_data_out_V_1_vld_out))) begin
            L1_data_out_V_1_sel_rd <= ~L1_data_out_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        L1_data_out_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == L1_data_out_V_1_ack_in) & (1'b1 == L1_data_out_V_1_vld_in))) begin
            L1_data_out_V_1_sel_wr <= ~L1_data_out_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        L1_data_out_V_1_state <= 2'd0;
    end else begin
        if ((((1'b0 == L1_data_out_V_1_vld_in) & (2'd2 == L1_data_out_V_1_state)) | ((1'b0 == L1_data_out_V_1_vld_in) & (2'd3 == L1_data_out_V_1_state) & (1'b1 == L1_data_out_V_1_ack_out)))) begin
            L1_data_out_V_1_state <= 2'd2;
        end else if ((((1'b0 == L1_data_out_V_TREADY) & (2'd1 == L1_data_out_V_1_state)) | ((1'b0 == L1_data_out_V_TREADY) & (2'd3 == L1_data_out_V_1_state) & (1'b1 == L1_data_out_V_1_vld_in)))) begin
            L1_data_out_V_1_state <= 2'd1;
        end else if (((~((1'b0 == L1_data_out_V_1_vld_in) & (1'b1 == L1_data_out_V_1_ack_out)) & ~((1'b0 == L1_data_out_V_TREADY) & (1'b1 == L1_data_out_V_1_vld_in)) & (2'd3 == L1_data_out_V_1_state)) | ((2'd1 == L1_data_out_V_1_state) & (1'b1 == L1_data_out_V_1_ack_out)) | ((2'd2 == L1_data_out_V_1_state) & (1'b1 == L1_data_out_V_1_vld_in)))) begin
            L1_data_out_V_1_state <= 2'd3;
        end else begin
            L1_data_out_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_src_state <= 2'd0;
    end else begin
        if ((1'b1 == ap_condition_231)) begin
            if ((data_src_state_load_load_fu_455_p1 == 2'd1)) begin
                data_src_state <= select_ln54_1_fu_1122_p3;
            end else if ((data_src_state_load_load_fu_455_p1 == 2'd2)) begin
                data_src_state <= ap_phi_mux_storemerge2893_phi_fu_319_p4;
            end else if ((data_src_state_load_load_fu_455_p1 == 2'd3)) begin
                data_src_state <= ap_phi_mux_storemerge2892_phi_fu_305_p6;
            end else if (((data_src_state_load_load_fu_455_p1 == 2'd0) & (seq_count_V_load_load_fu_459_p1 == 1'd1))) begin
                data_src_state <= 2'd1;
            end else if (((data_src_state_load_load_fu_455_p1 == 2'd0) & (seq_count_V_load_load_fu_459_p1 == 1'd0))) begin
                data_src_state <= 2'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        seq_count_V <= 1'd0;
    end else begin
        if (((data_src_state_load_load_fu_455_p1 == 2'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            seq_count_V <= xor_ln54_fu_1116_p2;
        end else if ((((data_src_state_load_load_fu_455_p1 == 2'd0) & (seq_count_V_load_load_fu_459_p1 == 1'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((data_src_state_load_load_fu_455_p1 == 2'd2) & (seq_count_V_load_load_fu_459_p1 == 1'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((data_src_state_load_load_fu_455_p1 == 2'd3) & (trunc_ln681_fu_573_p1 == 1'd1) & (icmp_ln895_fu_523_p2 == 1'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((data_src_state_load_load_fu_455_p1 == 2'd3) & (icmp_ln895_fu_523_p2 == 1'd0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            seq_count_V <= 1'd0;
        end else if ((((data_src_state_load_load_fu_455_p1 == 2'd0) & (seq_count_V_load_load_fu_459_p1 == 1'd0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((data_src_state_load_load_fu_455_p1 == 2'd2) & (seq_count_V_load_load_fu_459_p1 == 1'd0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((data_src_state_load_load_fu_455_p1 == 2'd3) & (icmp_ln895_fu_523_p2 == 1'd1) & (trunc_ln681_fu_573_p1 == 1'd0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            seq_count_V <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_231)) begin
        if (((data_src_state_load_load_fu_455_p1 == 2'd0) & (seq_count_V_load_load_fu_459_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_payload_V_1_reg_327 <= 52'd5498900643920;
        end else if (((data_src_state_load_load_fu_455_p1 == 2'd0) & (seq_count_V_load_load_fu_459_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_payload_V_1_reg_327 <= 52'd2257298714329168;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_payload_V_1_reg_327 <= ap_phi_reg_pp0_iter0_tmp_payload_V_1_reg_327;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((data_src_state_load_load_fu_455_p1 == 2'd3) & (icmp_ln895_fu_523_p2 == 1'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_payload_V_2_reg_340 <= ap_phi_mux_p_02605_0_2_phi_fu_295_p4;
    end else if ((((data_src_state_load_load_fu_455_p1 == 2'd3) & (icmp_ln879_fu_549_p2 == 1'd0) & (icmp_ln895_fu_523_p2 == 1'd0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((data_src_state_load_load_fu_455_p1 == 2'd3) & (icmp_ln879_fu_549_p2 == 1'd1) & (icmp_ln895_fu_523_p2 == 1'd0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter1_tmp_payload_V_2_reg_340 <= p_Result_3_fu_539_p4;
    end else if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_payload_V_2_reg_340 <= ap_phi_reg_pp0_iter0_tmp_payload_V_2_reg_340;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_231)) begin
        if (((data_src_state_load_load_fu_455_p1 == 2'd2) & (seq_count_V_load_load_fu_459_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_payload_V_reg_352 <= p_Result_s_fu_1094_p7;
        end else if (((data_src_state_load_load_fu_455_p1 == 2'd2) & (seq_count_V_load_load_fu_459_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_payload_V_reg_352 <= 54'd9041318467076096;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_payload_V_reg_352 <= ap_phi_reg_pp0_iter0_tmp_payload_V_reg_352;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((data_src_state_load_load_fu_455_p1 == 2'd3) & (trunc_ln681_fu_573_p1 == 1'd1) & (icmp_ln895_fu_523_p2 == 1'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((data_src_state_load_load_fu_455_p1 == 2'd3) & (icmp_ln895_fu_523_p2 == 1'd0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ext_ind_V <= grp_fu_444_p2;
    end else if (((data_src_state_load_load_fu_455_p1 == 2'd0) & (seq_count_V_load_load_fu_459_p1 == 1'd0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ext_ind_V <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_292)) begin
        if ((icmp_ln879_fu_549_p2 == 1'd1)) begin
            section_count_V <= 4'd0;
        end else if ((icmp_ln879_fu_549_p2 == 1'd0)) begin
            section_count_V <= add_ln700_3_fu_555_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_286)) begin
        if ((icmp_ln895_fu_523_p2 == 1'd1)) begin
            temp_ind_V <= add_ln700_4_fu_751_p2;
        end else if ((icmp_ln895_fu_523_p2 == 1'd0)) begin
            temp_ind_V <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == L1_data_out_V_1_load_A)) begin
        L1_data_out_V_1_payload_A <= L1_data_out_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == L1_data_out_V_1_load_B)) begin
        L1_data_out_V_1_payload_B <= L1_data_out_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((data_src_state_load_reg_1224_pp0_iter1_reg == 2'd3) & (icmp_ln879_reg_1244_pp0_iter1_reg == 1'd1) & (icmp_ln895_reg_1234_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cplane_data_counter_s <= add_ln700_2_fu_1211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_src_state_load_reg_1224 <= data_src_state;
        data_src_state_load_reg_1224_pp0_iter1_reg <= data_src_state_load_reg_1224;
        icmp_ln879_reg_1244_pp0_iter1_reg <= icmp_ln879_reg_1244;
        icmp_ln895_reg_1234_pp0_iter1_reg <= icmp_ln895_reg_1234;
        seq_count_V_load_reg_1229 <= seq_count_V;
    end
end

always @ (posedge ap_clk) begin
    if (((data_src_state_load_load_fu_455_p1 == 2'd3) & (icmp_ln895_fu_523_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln879_reg_1244 <= icmp_ln879_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((data_src_state_load_load_fu_455_p1 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln895_reg_1234 <= icmp_ln895_fu_523_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((data_src_state_load_reg_1224 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        numExt_V[3 : 1] <= shl_ln_fu_1164_p3[3 : 1];
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_329)) begin
        if ((data_src_state_load_reg_1224 == 2'd1)) begin
            L1_data_out_V_1_data_in = tmp_fu_1194_p3;
        end else if ((data_src_state_load_reg_1224 == 2'd2)) begin
            L1_data_out_V_1_data_in = tmp_1_2_fu_1178_p3;
        end else if ((data_src_state_load_reg_1224 == 2'd3)) begin
            L1_data_out_V_1_data_in = tmp_2_fu_1155_p3;
        end else if ((data_src_state_load_reg_1224 == 2'd0)) begin
            L1_data_out_V_1_data_in = tmp_3_fu_1146_p3;
        end else begin
            L1_data_out_V_1_data_in = 'bx;
        end
    end else begin
        L1_data_out_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == L1_data_out_V_1_sel)) begin
        L1_data_out_V_1_data_out = L1_data_out_V_1_payload_B;
    end else begin
        L1_data_out_V_1_data_out = L1_data_out_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((data_src_state_load_reg_1224 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((data_src_state_load_reg_1224 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((data_src_state_load_reg_1224 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((data_src_state_load_reg_1224 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        L1_data_out_V_1_vld_in = 1'b1;
    end else begin
        L1_data_out_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((data_src_state_load_reg_1224_pp0_iter1_reg == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_1224_pp0_iter1_reg == 2'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_1224_pp0_iter1_reg == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_1224_pp0_iter1_reg == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_1224 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_1224 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_1224 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_1224 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        L1_data_out_V_TDATA_blk_n = L1_data_out_V_1_state[1'd1];
    end else begin
        L1_data_out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_256)) begin
        if ((trunc_ln681_fu_573_p1 == 1'd1)) begin
            ap_phi_mux_p_02605_0_2_phi_fu_295_p4 = p_Result_1_fu_740_p4;
        end else if ((trunc_ln681_fu_573_p1 == 1'd0)) begin
            ap_phi_mux_p_02605_0_2_phi_fu_295_p4 = p_Result_2_fu_721_p6;
        end else begin
            ap_phi_mux_p_02605_0_2_phi_fu_295_p4 = ap_phi_reg_pp0_iter0_p_02605_0_2_reg_292;
        end
    end else begin
        ap_phi_mux_p_02605_0_2_phi_fu_295_p4 = ap_phi_reg_pp0_iter0_p_02605_0_2_reg_292;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_311)) begin
        if ((icmp_ln895_fu_523_p2 == 1'd1)) begin
            ap_phi_mux_storemerge2892_phi_fu_305_p6 = 2'd3;
        end else if (((icmp_ln879_fu_549_p2 == 1'd0) & (icmp_ln895_fu_523_p2 == 1'd0))) begin
            ap_phi_mux_storemerge2892_phi_fu_305_p6 = 2'd1;
        end else if (((icmp_ln879_fu_549_p2 == 1'd1) & (icmp_ln895_fu_523_p2 == 1'd0))) begin
            ap_phi_mux_storemerge2892_phi_fu_305_p6 = 2'd0;
        end else begin
            ap_phi_mux_storemerge2892_phi_fu_305_p6 = ap_phi_reg_pp0_iter0_storemerge2892_reg_302;
        end
    end else begin
        ap_phi_mux_storemerge2892_phi_fu_305_p6 = ap_phi_reg_pp0_iter0_storemerge2892_reg_302;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_285)) begin
        if ((seq_count_V_load_load_fu_459_p1 == 1'd0)) begin
            ap_phi_mux_storemerge2893_phi_fu_319_p4 = 2'd2;
        end else if ((seq_count_V_load_load_fu_459_p1 == 1'd1)) begin
            ap_phi_mux_storemerge2893_phi_fu_319_p4 = 2'd3;
        end else begin
            ap_phi_mux_storemerge2893_phi_fu_319_p4 = ap_phi_reg_pp0_iter0_storemerge2893_reg_316;
        end
    end else begin
        ap_phi_mux_storemerge2893_phi_fu_319_p4 = ap_phi_reg_pp0_iter0_storemerge2893_reg_316;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((data_src_state_load_reg_1224 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_numExt_V_load = shl_ln_fu_1164_p3;
    end else begin
        ap_sig_allocacmp_numExt_V_load = numExt_V;
    end
end

always @ (*) begin
    if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        numBeam_ce0 = 1'b1;
    end else begin
        numBeam_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign CDATA_COUNTER_V = (cplane_data_counter_s + 8'd1);

assign L1_data_out_V_1_ack_in = L1_data_out_V_1_state[1'd1];

assign L1_data_out_V_1_ack_out = L1_data_out_V_TREADY;

assign L1_data_out_V_1_load_A = (~L1_data_out_V_1_sel_wr & L1_data_out_V_1_state_cmp_full);

assign L1_data_out_V_1_load_B = (L1_data_out_V_1_state_cmp_full & L1_data_out_V_1_sel_wr);

assign L1_data_out_V_1_sel = L1_data_out_V_1_sel_rd;

assign L1_data_out_V_1_state_cmp_full = ((L1_data_out_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign L1_data_out_V_1_vld_out = L1_data_out_V_1_state[1'd0];

assign L1_data_out_V_TDATA = L1_data_out_V_1_data_out;

assign L1_data_out_V_TVALID = L1_data_out_V_1_state[1'd0];

assign UnifiedRetVal_i323_c_fu_717_p1 = UnifiedRetVal_i3_fu_647_p34;

assign add_ln700_2_fu_1211_p2 = (cplane_data_counter_s + 8'd1);

assign add_ln700_3_fu_555_p2 = (section_count_V + 4'd1);

assign add_ln700_4_fu_751_p2 = (temp_ind_V + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((2'd1 == L1_data_out_V_1_state) | ((1'b0 == L1_data_out_V_TREADY) & (2'd3 == L1_data_out_V_1_state))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (2'd1 == L1_data_out_V_1_state) | ((1'b0 == L1_data_out_V_TREADY) & (2'd3 == L1_data_out_V_1_state)))) | ((1'b1 == ap_block_state2_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (2'd1 == L1_data_out_V_1_state) | ((1'b0 == L1_data_out_V_TREADY) & (2'd3 == L1_data_out_V_1_state)))) | ((1'b1 == ap_block_state2_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = (((data_src_state_load_reg_1224 == 2'd0) & (1'b0 == L1_data_out_V_1_ack_in)) | ((data_src_state_load_reg_1224 == 2'd3) & (1'b0 == L1_data_out_V_1_ack_in)) | ((data_src_state_load_reg_1224 == 2'd2) & (1'b0 == L1_data_out_V_1_ack_in)) | ((data_src_state_load_reg_1224 == 2'd1) & (1'b0 == L1_data_out_V_1_ack_in)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((data_src_state_load_reg_1224_pp0_iter1_reg == 2'd0) & (1'b0 == L1_data_out_V_1_ack_in)) | ((data_src_state_load_reg_1224_pp0_iter1_reg == 2'd3) & (1'b0 == L1_data_out_V_1_ack_in)) | ((data_src_state_load_reg_1224_pp0_iter1_reg == 2'd2) & (1'b0 == L1_data_out_V_1_ack_in)) | ((data_src_state_load_reg_1224_pp0_iter1_reg == 2'd1) & (1'b0 == L1_data_out_V_1_ack_in)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((2'd1 == L1_data_out_V_1_state) | ((1'b0 == L1_data_out_V_TREADY) & (2'd3 == L1_data_out_V_1_state)));
end

always @ (*) begin
    ap_condition_231 = ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_256 = ((data_src_state_load_load_fu_455_p1 == 2'd3) & (icmp_ln895_fu_523_p2 == 1'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_285 = ((data_src_state_load_load_fu_455_p1 == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_286 = ((data_src_state_load_load_fu_455_p1 == 2'd3) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_292 = ((data_src_state_load_load_fu_455_p1 == 2'd3) & (icmp_ln895_fu_523_p2 == 1'd0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_311 = ((data_src_state_load_load_fu_455_p1 == 2'd3) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_329 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_02605_0_2_reg_292 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge2892_reg_302 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge2893_reg_316 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_payload_V_1_reg_327 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_payload_V_2_reg_340 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_payload_V_reg_352 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign data_src_state_load_load_fu_455_p1 = data_src_state;

assign grp_fu_444_p2 = (ext_ind_V + 5'd1);

assign icmp_ln31_1_fu_780_p2 = ((section_count_V == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln31_2_fu_786_p2 = ((section_count_V == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln31_3_fu_792_p2 = ((section_count_V == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln31_4_fu_798_p2 = ((section_count_V == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln31_5_fu_804_p2 = ((section_count_V == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln31_6_fu_810_p2 = ((section_count_V == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln31_7_fu_816_p2 = ((section_count_V == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln31_8_fu_822_p2 = ((section_count_V == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_774_p2 = ((section_count_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_549_p2 = ((section_count_V == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_523_p2 = (($signed(tmp_1_fu_513_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign l1datagen_stateout_V = data_src_state_load_reg_1224_pp0_iter1_reg;

assign lhs_V_fu_495_p1 = ap_sig_allocacmp_numExt_V_load;

assign numBeam_address0 = zext_ln544_fu_769_p1;

assign or_ln215_1_fu_850_p2 = (icmp_ln31_6_fu_810_p2 | icmp_ln31_5_fu_804_p2);

assign or_ln215_2_fu_864_p2 = (icmp_ln31_4_fu_798_p2 | icmp_ln31_3_fu_792_p2);

assign or_ln215_3_fu_878_p2 = (icmp_ln31_2_fu_786_p2 | icmp_ln31_1_fu_780_p2);

assign or_ln215_4_fu_900_p2 = (or_ln215_fu_836_p2 | or_ln215_1_fu_850_p2);

assign or_ln215_5_fu_914_p2 = (or_ln215_3_fu_878_p2 | or_ln215_2_fu_864_p2);

assign or_ln215_6_fu_928_p2 = (or_ln215_5_fu_914_p2 | or_ln215_4_fu_900_p2);

assign or_ln215_fu_836_p2 = (icmp_ln31_8_fu_822_p2 | icmp_ln31_7_fu_816_p2);

assign p_Result_1_fu_740_p4 = {{{{19'd399104}, {zext_ln391_fu_736_p1}}}, {20'd0}};

assign p_Result_2_fu_721_p6 = {{{{{{{{11'd1558}, {UnifiedRetVal_i2_fu_577_p34}}}, {18'd320}}}, {UnifiedRetVal_i323_c_fu_717_p1}}}, {16'd0}};

assign p_Result_3_fu_539_p4 = {{{{19'd399104}, {zext_ln738_fu_529_p1}}}, {20'd0}};

assign p_Result_s_fu_1094_p7 = {{{{{{{{{{11'd1026}, {zext_ln215_fu_942_p1}}}, {2'd0}}}, {select_ln215_17_fu_1014_p3}}}, {zext_ln215_3_fu_1090_p1}}}, {13'd8190}};

assign ret_V_fu_507_p2 = (lhs_V_fu_495_p1 - rhs_V_fu_503_p1);

assign rhs_V_fu_503_p1 = temp_ind_V;

assign select_ln215_10_fu_954_p3 = ((icmp_ln31_6_fu_810_p2[0:0] === 1'b1) ? 8'd136 : 8'd128);

assign select_ln215_11_fu_962_p3 = ((icmp_ln31_4_fu_798_p2[0:0] === 1'b1) ? 6'd48 : 6'd28);

assign select_ln215_12_fu_970_p3 = ((icmp_ln31_2_fu_786_p2[0:0] === 1'b1) ? 6'd16 : 6'd8);

assign select_ln215_13_fu_978_p3 = ((icmp_ln31_fu_774_p2[0:0] === 1'b1) ? 8'd0 : 8'd176);

assign select_ln215_14_fu_986_p3 = ((or_ln215_fu_836_p2[0:0] === 1'b1) ? select_ln215_9_fu_946_p3 : select_ln215_10_fu_954_p3);

assign select_ln215_15_fu_994_p3 = ((or_ln215_2_fu_864_p2[0:0] === 1'b1) ? select_ln215_11_fu_962_p3 : select_ln215_12_fu_970_p3);

assign select_ln215_16_fu_1006_p3 = ((or_ln215_4_fu_900_p2[0:0] === 1'b1) ? select_ln215_14_fu_986_p3 : zext_ln215_1_fu_1002_p1);

assign select_ln215_17_fu_1014_p3 = ((or_ln215_6_fu_928_p2[0:0] === 1'b1) ? select_ln215_16_fu_1006_p3 : select_ln215_13_fu_978_p3);

assign select_ln215_18_fu_1022_p3 = ((icmp_ln31_8_fu_822_p2[0:0] === 1'b1) ? 5'd20 : 5'd12);

assign select_ln215_19_fu_1030_p3 = ((icmp_ln31_4_fu_798_p2[0:0] === 1'b1) ? 7'd80 : 7'd20);

assign select_ln215_1_fu_842_p3 = ((icmp_ln31_6_fu_810_p2[0:0] === 1'b1) ? 9'd297 : 9'd296);

assign select_ln215_20_fu_1038_p3 = ((icmp_ln31_2_fu_786_p2[0:0] === 1'b1) ? 7'd12 : 7'd8);

assign select_ln215_21_fu_1046_p3 = ((icmp_ln31_fu_774_p2[0:0] === 1'b1) ? 7'd8 : 7'd80);

assign select_ln215_22_fu_1054_p3 = ((or_ln215_fu_836_p2[0:0] === 1'b1) ? select_ln215_18_fu_1022_p3 : 5'd8);

assign select_ln215_23_fu_1066_p3 = ((or_ln215_2_fu_864_p2[0:0] === 1'b1) ? select_ln215_19_fu_1030_p3 : select_ln215_20_fu_1038_p3);

assign select_ln215_24_fu_1074_p3 = ((or_ln215_4_fu_900_p2[0:0] === 1'b1) ? zext_ln215_2_fu_1062_p1 : select_ln215_23_fu_1066_p3);

assign select_ln215_25_fu_1082_p3 = ((or_ln215_6_fu_928_p2[0:0] === 1'b1) ? select_ln215_24_fu_1074_p3 : select_ln215_21_fu_1046_p3);

assign select_ln215_2_fu_856_p3 = ((icmp_ln31_4_fu_798_p2[0:0] === 1'b1) ? 9'd295 : 9'd294);

assign select_ln215_3_fu_870_p3 = ((icmp_ln31_2_fu_786_p2[0:0] === 1'b1) ? 9'd293 : 9'd292);

assign select_ln215_4_fu_884_p3 = ((icmp_ln31_fu_774_p2[0:0] === 1'b1) ? 9'd291 : 9'd306);

assign select_ln215_5_fu_892_p3 = ((or_ln215_fu_836_p2[0:0] === 1'b1) ? select_ln215_fu_828_p3 : select_ln215_1_fu_842_p3);

assign select_ln215_6_fu_906_p3 = ((or_ln215_2_fu_864_p2[0:0] === 1'b1) ? select_ln215_2_fu_856_p3 : select_ln215_3_fu_870_p3);

assign select_ln215_7_fu_920_p3 = ((or_ln215_4_fu_900_p2[0:0] === 1'b1) ? select_ln215_5_fu_892_p3 : select_ln215_6_fu_906_p3);

assign select_ln215_8_fu_934_p3 = ((or_ln215_6_fu_928_p2[0:0] === 1'b1) ? select_ln215_7_fu_920_p3 : select_ln215_4_fu_884_p3);

assign select_ln215_9_fu_946_p3 = ((icmp_ln31_8_fu_822_p2[0:0] === 1'b1) ? 8'd156 : 8'd144);

assign select_ln215_fu_828_p3 = ((icmp_ln31_8_fu_822_p2[0:0] === 1'b1) ? 9'd305 : 9'd304);

assign select_ln54_1_fu_1122_p3 = ((seq_count_V[0:0] === 1'b1) ? 2'd2 : 2'd1);

assign select_ln54_fu_1187_p3 = ((seq_count_V_load_reg_1229[0:0] === 1'b1) ? 54'd4529987906437120 : 54'd4525600657375552);

assign seq_count_V_load_load_fu_459_p1 = seq_count_V;

assign shl_ln_fu_1164_p3 = {{numBeam_q0}, {1'd0}};

assign tmp_1_2_fu_1178_p3 = {{10'd416}, {ap_phi_reg_pp0_iter1_tmp_payload_V_reg_352}};

assign tmp_1_fu_513_p4 = {{ret_V_fu_507_p2[4:1]}};

assign tmp_2_fu_1155_p3 = {{10'd416}, {ap_phi_reg_pp0_iter1_tmp_payload_V_2_reg_340}};

assign tmp_3_fu_1146_p3 = {{10'd416}, {zext_ln162_fu_1142_p1}};

assign tmp_fu_1194_p3 = {{10'd416}, {select_ln54_fu_1187_p3}};

assign trunc_ln681_fu_573_p1 = temp_ind_V[0:0];

assign xor_ln54_fu_1116_p2 = (seq_count_V ^ 1'd1);

assign zext_ln162_fu_1142_p1 = ap_phi_reg_pp0_iter1_tmp_payload_V_1_reg_327;

assign zext_ln215_1_fu_1002_p1 = select_ln215_15_fu_994_p3;

assign zext_ln215_2_fu_1062_p1 = select_ln215_22_fu_1054_p3;

assign zext_ln215_3_fu_1090_p1 = select_ln215_25_fu_1082_p3;

assign zext_ln215_fu_942_p1 = select_ln215_8_fu_934_p3;

assign zext_ln391_fu_736_p1 = grp_fu_375_p34;

assign zext_ln544_fu_769_p1 = section_count_V;

assign zext_ln738_fu_529_p1 = grp_fu_375_p34;

always @ (posedge ap_clk) begin
    numExt_V[0] <= 1'b0;
end

endmodule //L1_Data_Gen
