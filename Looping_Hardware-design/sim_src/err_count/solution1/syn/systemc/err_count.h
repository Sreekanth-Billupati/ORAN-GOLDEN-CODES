// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _err_count_HH_
#define _err_count_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "err_count_expOutput_V.h"

namespace ap_rtl {

struct err_count : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<128> > observed_output_TDATA;
    sc_in< sc_logic > observed_output_TVALID;
    sc_out< sc_logic > observed_output_TREADY;
    sc_in< sc_lv<16> > observed_output_TKEEP;
    sc_in< sc_lv<7> > observed_output_TUSER;
    sc_in< sc_lv<1> > observed_output_TLAST;
    sc_out< sc_lv<32> > error_count;
    sc_out< sc_lv<32> > iteration_count;


    // Module declarations
    err_count(sc_module_name name);
    SC_HAS_PROCESS(err_count);

    ~err_count();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    err_count_expOutput_V* expOutput_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<9> > expOutput_V_address0;
    sc_signal< sc_logic > expOutput_V_ce0;
    sc_signal< sc_lv<128> > expOutput_V_q0;
    sc_signal< sc_lv<32> > temp_count;
    sc_signal< sc_logic > observed_output_TDATA_blk_n;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > i_V_fu_114_p2;
    sc_signal< sc_lv<9> > i_V_reg_155;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln887_fu_108_p2;
    sc_signal< sc_lv<9> > t_V_reg_91;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > zext_ln544_fu_120_p1;
    sc_signal< sc_lv<32> > add_ln27_fu_135_p2;
    sc_signal< sc_lv<1> > icmp_ln883_fu_129_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_1E0;
    static const sc_lv<9> ap_const_lv9_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln27_fu_135_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_rst_n_inv();
    void thread_error_count();
    void thread_expOutput_V_address0();
    void thread_expOutput_V_ce0();
    void thread_i_V_fu_114_p2();
    void thread_icmp_ln883_fu_129_p2();
    void thread_icmp_ln887_fu_108_p2();
    void thread_iteration_count();
    void thread_observed_output_TDATA_blk_n();
    void thread_observed_output_TREADY();
    void thread_zext_ln544_fu_120_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
