-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity err_count is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    observed_output_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    observed_output_TVALID : IN STD_LOGIC;
    observed_output_TREADY : OUT STD_LOGIC;
    observed_output_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    observed_output_TUSER : IN STD_LOGIC_VECTOR (6 downto 0);
    observed_output_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    error_count : OUT STD_LOGIC_VECTOR (31 downto 0);
    iteration_count : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of err_count is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "err_count,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=3.200000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.540000,HLS_SYN_LAT=961,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=53,HLS_SYN_LUT=157,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal expOutput_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal expOutput_V_ce0 : STD_LOGIC;
    signal expOutput_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal temp_count : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal observed_output_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_V_fu_114_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_V_reg_155 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln887_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_reg_91 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal zext_ln544_fu_120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln27_fu_135_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln883_fu_129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);

    component err_count_expOutput_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    expOutput_V_U : component err_count_expOutput_V
    generic map (
        DataWidth => 128,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => expOutput_V_address0,
        ce0 => expOutput_V_ce0,
        q0 => expOutput_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    t_V_reg_91_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (observed_output_TVALID = ap_const_logic_1))) then 
                t_V_reg_91 <= i_V_reg_155;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                t_V_reg_91 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_155 <= i_V_fu_114_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln883_fu_129_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (observed_output_TVALID = ap_const_logic_1))) then
                temp_count <= add_ln27_fu_135_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (observed_output_TVALID, ap_CS_fsm, ap_CS_fsm_state3, ap_CS_fsm_state2, icmp_ln887_fu_108_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln887_fu_108_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (observed_output_TVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln27_fu_135_p2 <= std_logic_vector(unsigned(temp_count) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    error_count <= temp_count;
    expOutput_V_address0 <= zext_ln544_fu_120_p1(9 - 1 downto 0);

    expOutput_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            expOutput_V_ce0 <= ap_const_logic_1;
        else 
            expOutput_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    i_V_fu_114_p2 <= std_logic_vector(unsigned(t_V_reg_91) + unsigned(ap_const_lv9_1));
    icmp_ln883_fu_129_p2 <= "1" when (expOutput_V_q0 = observed_output_TDATA) else "0";
    icmp_ln887_fu_108_p2 <= "1" when (t_V_reg_91 = ap_const_lv9_1E0) else "0";
    iteration_count <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_91),32));

    observed_output_TDATA_blk_n_assign_proc : process(observed_output_TVALID, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            observed_output_TDATA_blk_n <= observed_output_TVALID;
        else 
            observed_output_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    observed_output_TREADY_assign_proc : process(observed_output_TVALID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (observed_output_TVALID = ap_const_logic_1))) then 
            observed_output_TREADY <= ap_const_logic_1;
        else 
            observed_output_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln544_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_91),64));
end behav;
