-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ecpri_mux is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    control_data_in_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    control_data_in_TVALID : IN STD_LOGIC;
    control_data_in_TREADY : OUT STD_LOGIC;
    control_data_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    control_data_in_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    control_data_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    user_data_in_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    user_data_in_TVALID : IN STD_LOGIC;
    user_data_in_TREADY : OUT STD_LOGIC;
    user_data_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    user_data_in_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    user_data_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    mux_data_out_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    mux_data_out_TVALID : OUT STD_LOGIC;
    mux_data_out_TREADY : IN STD_LOGIC;
    mux_data_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    mux_data_out_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_data_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    mux_config_in_V_V_TDATA : IN STD_LOGIC_VECTOR (95 downto 0);
    mux_config_in_V_V_TVALID : IN STD_LOGIC;
    mux_config_in_V_V_TREADY : OUT STD_LOGIC;
    ecpri_mux_state_out_V : OUT STD_LOGIC_VECTOR (1 downto 0);
    num_section_out_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    section_count_out_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    layer_count_out_V : OUT STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of ecpri_mux is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ecpri_mux,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=3.200000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.152750,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1260,HLS_SYN_LUT=586,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_iter1_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter2_fsm_state3 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_iter2_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv8_8C : STD_LOGIC_VECTOR (7 downto 0) := "10001100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_rst_n_inv : STD_LOGIC;
    signal control_data_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal control_data_in_V_data_V_0_vld_in : STD_LOGIC;
    signal control_data_in_V_data_V_0_vld_out : STD_LOGIC;
    signal control_data_in_V_data_V_0_ack_in : STD_LOGIC;
    signal control_data_in_V_data_V_0_ack_out : STD_LOGIC;
    signal control_data_in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal control_data_in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal control_data_in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal control_data_in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal control_data_in_V_data_V_0_sel : STD_LOGIC;
    signal control_data_in_V_data_V_0_load_A : STD_LOGIC;
    signal control_data_in_V_data_V_0_load_B : STD_LOGIC;
    signal control_data_in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal control_data_in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal control_data_in_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal control_data_in_V_last_V_0_vld_in : STD_LOGIC;
    signal control_data_in_V_last_V_0_vld_out : STD_LOGIC;
    signal control_data_in_V_last_V_0_ack_in : STD_LOGIC;
    signal control_data_in_V_last_V_0_ack_out : STD_LOGIC;
    signal control_data_in_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal control_data_in_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal control_data_in_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal control_data_in_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal control_data_in_V_last_V_0_sel : STD_LOGIC;
    signal control_data_in_V_last_V_0_load_A : STD_LOGIC;
    signal control_data_in_V_last_V_0_load_B : STD_LOGIC;
    signal control_data_in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal control_data_in_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal user_data_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal user_data_in_V_data_V_0_vld_in : STD_LOGIC;
    signal user_data_in_V_data_V_0_vld_out : STD_LOGIC;
    signal user_data_in_V_data_V_0_ack_in : STD_LOGIC;
    signal user_data_in_V_data_V_0_ack_out : STD_LOGIC;
    signal user_data_in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal user_data_in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal user_data_in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal user_data_in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal user_data_in_V_data_V_0_sel : STD_LOGIC;
    signal user_data_in_V_data_V_0_load_A : STD_LOGIC;
    signal user_data_in_V_data_V_0_load_B : STD_LOGIC;
    signal user_data_in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal user_data_in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal user_data_in_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal user_data_in_V_last_V_0_vld_in : STD_LOGIC;
    signal user_data_in_V_last_V_0_vld_out : STD_LOGIC;
    signal user_data_in_V_last_V_0_ack_in : STD_LOGIC;
    signal user_data_in_V_last_V_0_ack_out : STD_LOGIC;
    signal user_data_in_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal user_data_in_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal user_data_in_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal user_data_in_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal user_data_in_V_last_V_0_sel : STD_LOGIC;
    signal user_data_in_V_last_V_0_load_A : STD_LOGIC;
    signal user_data_in_V_last_V_0_load_B : STD_LOGIC;
    signal user_data_in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal user_data_in_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal mux_data_out_V_data_V_1_data_in : STD_LOGIC_VECTOR (127 downto 0);
    signal mux_data_out_V_data_V_1_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal mux_data_out_V_data_V_1_vld_in : STD_LOGIC;
    signal mux_data_out_V_data_V_1_vld_out : STD_LOGIC;
    signal mux_data_out_V_data_V_1_ack_in : STD_LOGIC;
    signal mux_data_out_V_data_V_1_ack_out : STD_LOGIC;
    signal mux_data_out_V_data_V_1_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal mux_data_out_V_data_V_1_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal mux_data_out_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal mux_data_out_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal mux_data_out_V_data_V_1_sel : STD_LOGIC;
    signal mux_data_out_V_data_V_1_load_A : STD_LOGIC;
    signal mux_data_out_V_data_V_1_load_B : STD_LOGIC;
    signal mux_data_out_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal mux_data_out_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal mux_data_out_V_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal mux_data_out_V_user_V_1_vld_in : STD_LOGIC;
    signal mux_data_out_V_user_V_1_vld_out : STD_LOGIC;
    signal mux_data_out_V_user_V_1_ack_out : STD_LOGIC;
    signal mux_data_out_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal mux_data_out_V_user_V_1_sel : STD_LOGIC;
    signal mux_data_out_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal mux_data_out_V_keep_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal mux_data_out_V_keep_V_1_vld_in : STD_LOGIC;
    signal mux_data_out_V_keep_V_1_vld_out : STD_LOGIC;
    signal mux_data_out_V_keep_V_1_ack_out : STD_LOGIC;
    signal mux_data_out_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal mux_data_out_V_keep_V_1_sel : STD_LOGIC;
    signal mux_data_out_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal mux_data_out_V_last_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal mux_data_out_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal mux_data_out_V_last_V_1_vld_in : STD_LOGIC;
    signal mux_data_out_V_last_V_1_vld_out : STD_LOGIC;
    signal mux_data_out_V_last_V_1_ack_in : STD_LOGIC;
    signal mux_data_out_V_last_V_1_ack_out : STD_LOGIC;
    signal mux_data_out_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal mux_data_out_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal mux_data_out_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal mux_data_out_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal mux_data_out_V_last_V_1_sel : STD_LOGIC;
    signal mux_data_out_V_last_V_1_load_A : STD_LOGIC;
    signal mux_data_out_V_last_V_1_load_B : STD_LOGIC;
    signal mux_data_out_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal mux_data_out_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal numSection_V : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal section_count_V : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal layer_count_V : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal ecpri_mux_state : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal mux_cnfg_V : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal tlast_counter_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal control_data_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal ap_CS_iter0_fsm_state1 : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter1_fsm_state2 : STD_LOGIC;
    signal ap_CS_iter2_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter2_fsm_state3 : STD_LOGIC;
    signal ecpri_mux_state_load_load_fu_299_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal user_data_in_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln887_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mux_data_out_TDATA_blk_n : STD_LOGIC;
    signal ecpri_mux_state_load_reg_484 : STD_LOGIC_VECTOR (1 downto 0);
    signal ecpri_mux_state_load_reg_484_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln887_reg_489 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_489_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mux_config_in_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op57_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_predicate_op94_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal numSection_V_load_reg_469 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_predicate_op14_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal numSection_V_load_reg_469_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal t_V_reg_474 : STD_LOGIC_VECTOR (11 downto 0);
    signal t_V_reg_474_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal t_V_1_reg_479 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_V_1_reg_479_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_data_V_1_reg_493 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_last_V_1_fu_327_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_reg_503 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_last_V_fu_353_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_508 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_section_count_V_flag_phi_fu_209_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_section_count_V_flag_reg_206 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_section_count_V_new_s_phi_fu_223_p6 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter0_section_count_V_new_s_reg_220 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln700_fu_357_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_storemerge255_phi_fu_236_p6 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln104_fu_404_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge255_reg_233 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_section_count_V_flag_1_phi_fu_249_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_section_count_V_flag_1_reg_246 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_section_count_V_new_1_phi_fu_270_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter0_section_count_V_new_1_reg_267 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln209_fu_431_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln700_1_fu_370_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln76_fu_453_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln700_2_fu_337_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_nbreadreq_fu_152_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_iter2_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_condition_1065 : BOOLEAN;
    signal ap_condition_941 : BOOLEAN;
    signal ap_condition_852 : BOOLEAN;
    signal ap_condition_897 : BOOLEAN;
    signal ap_condition_969 : BOOLEAN;
    signal ap_condition_950 : BOOLEAN;


begin




    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter2_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
            else
                ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
            end if;
        end if;
    end process;


    control_data_in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                control_data_in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((control_data_in_V_data_V_0_ack_out = ap_const_logic_1) and (control_data_in_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        control_data_in_V_data_V_0_sel_rd <= not(control_data_in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    control_data_in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                control_data_in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((control_data_in_V_data_V_0_ack_in = ap_const_logic_1) and (control_data_in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        control_data_in_V_data_V_0_sel_wr <= not(control_data_in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    control_data_in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                control_data_in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((control_data_in_V_data_V_0_vld_in = ap_const_logic_0) and (control_data_in_V_data_V_0_state = ap_const_lv2_2)) or ((control_data_in_V_data_V_0_vld_in = ap_const_logic_0) and (control_data_in_V_data_V_0_ack_out = ap_const_logic_1) and (control_data_in_V_data_V_0_state = ap_const_lv2_3)))) then 
                    control_data_in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((control_data_in_V_data_V_0_ack_out = ap_const_logic_0) and (control_data_in_V_data_V_0_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_ack_out = ap_const_logic_0) and (control_data_in_V_data_V_0_vld_in = ap_const_logic_1) and (control_data_in_V_data_V_0_state = ap_const_lv2_3)))) then 
                    control_data_in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((control_data_in_V_data_V_0_vld_in = ap_const_logic_0) and (control_data_in_V_data_V_0_ack_out = ap_const_logic_1))) and not(((control_data_in_V_data_V_0_ack_out = ap_const_logic_0) and (control_data_in_V_data_V_0_vld_in = ap_const_logic_1))) and (control_data_in_V_data_V_0_state = ap_const_lv2_3)) or ((control_data_in_V_data_V_0_ack_out = ap_const_logic_1) and (control_data_in_V_data_V_0_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_in = ap_const_logic_1) and (control_data_in_V_data_V_0_state = ap_const_lv2_2)))) then 
                    control_data_in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    control_data_in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    control_data_in_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                control_data_in_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((control_data_in_V_last_V_0_ack_out = ap_const_logic_1) and (control_data_in_V_last_V_0_vld_out = ap_const_logic_1))) then 
                                        control_data_in_V_last_V_0_sel_rd <= not(control_data_in_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    control_data_in_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                control_data_in_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((control_data_in_V_last_V_0_ack_in = ap_const_logic_1) and (control_data_in_V_last_V_0_vld_in = ap_const_logic_1))) then 
                                        control_data_in_V_last_V_0_sel_wr <= not(control_data_in_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    control_data_in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                control_data_in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((control_data_in_V_last_V_0_vld_in = ap_const_logic_0) and (control_data_in_V_last_V_0_state = ap_const_lv2_2)) or ((control_data_in_V_last_V_0_vld_in = ap_const_logic_0) and (control_data_in_V_last_V_0_state = ap_const_lv2_3) and (control_data_in_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    control_data_in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((control_data_in_V_last_V_0_ack_out = ap_const_logic_0) and (control_data_in_V_last_V_0_state = ap_const_lv2_1)) or ((control_data_in_V_last_V_0_ack_out = ap_const_logic_0) and (control_data_in_V_last_V_0_state = ap_const_lv2_3) and (control_data_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    control_data_in_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((control_data_in_V_last_V_0_vld_in = ap_const_logic_0) and (control_data_in_V_last_V_0_ack_out = ap_const_logic_1))) and not(((control_data_in_V_last_V_0_ack_out = ap_const_logic_0) and (control_data_in_V_last_V_0_vld_in = ap_const_logic_1))) and (control_data_in_V_last_V_0_state = ap_const_lv2_3)) or ((control_data_in_V_last_V_0_state = ap_const_lv2_1) and (control_data_in_V_last_V_0_ack_out = ap_const_logic_1)) or ((control_data_in_V_last_V_0_state = ap_const_lv2_2) and (control_data_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    control_data_in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    control_data_in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    mux_data_out_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mux_data_out_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((mux_data_out_V_data_V_1_ack_out = ap_const_logic_1) and (mux_data_out_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        mux_data_out_V_data_V_1_sel_rd <= not(mux_data_out_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    mux_data_out_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mux_data_out_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((mux_data_out_V_data_V_1_ack_in = ap_const_logic_1) and (mux_data_out_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        mux_data_out_V_data_V_1_sel_wr <= not(mux_data_out_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    mux_data_out_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mux_data_out_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((mux_data_out_V_data_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_2)) or ((mux_data_out_V_data_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3) and (mux_data_out_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    mux_data_out_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_1)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3) and (mux_data_out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    mux_data_out_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((mux_data_out_V_data_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_data_V_1_ack_out = ap_const_logic_1))) and not(((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_vld_in = ap_const_logic_1))) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)) or ((mux_data_out_V_data_V_1_state = ap_const_lv2_1) and (mux_data_out_V_data_V_1_ack_out = ap_const_logic_1)) or ((mux_data_out_V_data_V_1_state = ap_const_lv2_2) and (mux_data_out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    mux_data_out_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    mux_data_out_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    mux_data_out_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mux_data_out_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((mux_data_out_V_keep_V_1_ack_out = ap_const_logic_1) and (mux_data_out_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        mux_data_out_V_keep_V_1_sel_rd <= not(mux_data_out_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    mux_data_out_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mux_data_out_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((mux_data_out_V_keep_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_2)) or ((mux_data_out_V_keep_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3) and (mux_data_out_V_keep_V_1_ack_out = ap_const_logic_1)))) then 
                    mux_data_out_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_1)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3) and (mux_data_out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    mux_data_out_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((mux_data_out_V_keep_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_vld_in = ap_const_logic_1))) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_V_keep_V_1_state = ap_const_lv2_1) and (mux_data_out_V_keep_V_1_ack_out = ap_const_logic_1)) or ((mux_data_out_V_keep_V_1_state = ap_const_lv2_2) and (mux_data_out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    mux_data_out_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    mux_data_out_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    mux_data_out_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mux_data_out_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((mux_data_out_V_last_V_1_ack_out = ap_const_logic_1) and (mux_data_out_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        mux_data_out_V_last_V_1_sel_rd <= not(mux_data_out_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    mux_data_out_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mux_data_out_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((mux_data_out_V_last_V_1_ack_in = ap_const_logic_1) and (mux_data_out_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        mux_data_out_V_last_V_1_sel_wr <= not(mux_data_out_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    mux_data_out_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mux_data_out_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((mux_data_out_V_last_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_2)) or ((mux_data_out_V_last_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3) and (mux_data_out_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    mux_data_out_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_1)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3) and (mux_data_out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    mux_data_out_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((mux_data_out_V_last_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_last_V_1_ack_out = ap_const_logic_1))) and not(((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_vld_in = ap_const_logic_1))) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) and (mux_data_out_V_last_V_1_ack_out = ap_const_logic_1)) or ((mux_data_out_V_last_V_1_state = ap_const_lv2_2) and (mux_data_out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    mux_data_out_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    mux_data_out_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    mux_data_out_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mux_data_out_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((mux_data_out_V_user_V_1_ack_out = ap_const_logic_1) and (mux_data_out_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        mux_data_out_V_user_V_1_sel_rd <= not(mux_data_out_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    mux_data_out_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                mux_data_out_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((mux_data_out_V_user_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_2)) or ((mux_data_out_V_user_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3) and (mux_data_out_V_user_V_1_ack_out = ap_const_logic_1)))) then 
                    mux_data_out_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_1)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3) and (mux_data_out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    mux_data_out_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((mux_data_out_V_user_V_1_vld_in = ap_const_logic_0) and (mux_data_out_V_user_V_1_ack_out = ap_const_logic_1))) and not(((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_vld_in = ap_const_logic_1))) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_V_user_V_1_state = ap_const_lv2_1) and (mux_data_out_V_user_V_1_ack_out = ap_const_logic_1)) or ((mux_data_out_V_user_V_1_state = ap_const_lv2_2) and (mux_data_out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    mux_data_out_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    mux_data_out_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    user_data_in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                user_data_in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((user_data_in_V_data_V_0_ack_out = ap_const_logic_1) and (user_data_in_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        user_data_in_V_data_V_0_sel_rd <= not(user_data_in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    user_data_in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                user_data_in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((user_data_in_V_data_V_0_ack_in = ap_const_logic_1) and (user_data_in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        user_data_in_V_data_V_0_sel_wr <= not(user_data_in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    user_data_in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                user_data_in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((user_data_in_V_data_V_0_vld_in = ap_const_logic_0) and (user_data_in_V_data_V_0_state = ap_const_lv2_2)) or ((user_data_in_V_data_V_0_vld_in = ap_const_logic_0) and (user_data_in_V_data_V_0_state = ap_const_lv2_3) and (user_data_in_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    user_data_in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((user_data_in_V_data_V_0_ack_out = ap_const_logic_0) and (user_data_in_V_data_V_0_state = ap_const_lv2_1)) or ((user_data_in_V_data_V_0_ack_out = ap_const_logic_0) and (user_data_in_V_data_V_0_state = ap_const_lv2_3) and (user_data_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    user_data_in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((user_data_in_V_data_V_0_vld_in = ap_const_logic_0) and (user_data_in_V_data_V_0_ack_out = ap_const_logic_1))) and not(((user_data_in_V_data_V_0_ack_out = ap_const_logic_0) and (user_data_in_V_data_V_0_vld_in = ap_const_logic_1))) and (user_data_in_V_data_V_0_state = ap_const_lv2_3)) or ((user_data_in_V_data_V_0_state = ap_const_lv2_1) and (user_data_in_V_data_V_0_ack_out = ap_const_logic_1)) or ((user_data_in_V_data_V_0_state = ap_const_lv2_2) and (user_data_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    user_data_in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    user_data_in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    user_data_in_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                user_data_in_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((user_data_in_V_last_V_0_ack_out = ap_const_logic_1) and (user_data_in_V_last_V_0_vld_out = ap_const_logic_1))) then 
                                        user_data_in_V_last_V_0_sel_rd <= not(user_data_in_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    user_data_in_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                user_data_in_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((user_data_in_V_last_V_0_ack_in = ap_const_logic_1) and (user_data_in_V_last_V_0_vld_in = ap_const_logic_1))) then 
                                        user_data_in_V_last_V_0_sel_wr <= not(user_data_in_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    user_data_in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                user_data_in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((user_data_in_V_last_V_0_vld_in = ap_const_logic_0) and (user_data_in_V_last_V_0_state = ap_const_lv2_2)) or ((user_data_in_V_last_V_0_vld_in = ap_const_logic_0) and (user_data_in_V_last_V_0_state = ap_const_lv2_3) and (user_data_in_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    user_data_in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((user_data_in_V_last_V_0_ack_out = ap_const_logic_0) and (user_data_in_V_last_V_0_state = ap_const_lv2_1)) or ((user_data_in_V_last_V_0_ack_out = ap_const_logic_0) and (user_data_in_V_last_V_0_state = ap_const_lv2_3) and (user_data_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    user_data_in_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((user_data_in_V_last_V_0_vld_in = ap_const_logic_0) and (user_data_in_V_last_V_0_ack_out = ap_const_logic_1))) and not(((user_data_in_V_last_V_0_ack_out = ap_const_logic_0) and (user_data_in_V_last_V_0_vld_in = ap_const_logic_1))) and (user_data_in_V_last_V_0_state = ap_const_lv2_3)) or ((user_data_in_V_last_V_0_state = ap_const_lv2_1) and (user_data_in_V_last_V_0_ack_out = ap_const_logic_1)) or ((user_data_in_V_last_V_0_state = ap_const_lv2_2) and (user_data_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    user_data_in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    user_data_in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ecpri_mux_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_852)) then
                if ((ecpri_mux_state_load_load_fu_299_p1 = ap_const_lv2_0)) then 
                    ecpri_mux_state <= zext_ln76_fu_453_p1;
                elsif ((ecpri_mux_state = ap_const_lv2_1)) then 
                    ecpri_mux_state <= ap_const_lv2_2;
                elsif ((ecpri_mux_state = ap_const_lv2_2)) then 
                    ecpri_mux_state <= ap_phi_mux_storemerge255_phi_fu_236_p6;
                elsif ((ap_const_boolean_1 = ap_condition_941)) then 
                    ecpri_mux_state <= ap_const_lv2_3;
                elsif (((ecpri_mux_state = ap_const_lv2_3) and (icmp_ln887_fu_311_p2 = ap_const_lv1_0))) then 
                    ecpri_mux_state <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    layer_count_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_852)) then
                if ((ecpri_mux_state = ap_const_lv2_1)) then 
                    layer_count_V <= ap_const_lv3_0;
                elsif ((ap_const_boolean_1 = ap_condition_897)) then 
                    layer_count_V <= add_ln700_1_fu_370_p2;
                end if;
            end if; 
        end if;
    end process;

    numSection_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_852)) then
                if ((ecpri_mux_state = ap_const_lv2_1)) then 
                    numSection_V <= trunc_ln209_fu_431_p1;
                elsif ((ap_const_boolean_1 = ap_condition_897)) then 
                    numSection_V <= mux_cnfg_V(23 downto 12);
                end if;
            end if; 
        end if;
    end process;

    tlast_counter_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_852)) then
                if ((ecpri_mux_state = ap_const_lv2_1)) then 
                    tlast_counter_V <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_condition_950)) then 
                    tlast_counter_V <= add_ln700_2_fu_337_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((control_data_in_V_data_V_0_load_A = ap_const_logic_1)) then
                control_data_in_V_data_V_0_payload_A <= control_data_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((control_data_in_V_data_V_0_load_B = ap_const_logic_1)) then
                control_data_in_V_data_V_0_payload_B <= control_data_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((control_data_in_V_last_V_0_load_A = ap_const_logic_1)) then
                control_data_in_V_last_V_0_payload_A <= control_data_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((control_data_in_V_last_V_0_load_B = ap_const_logic_1)) then
                control_data_in_V_last_V_0_payload_B <= control_data_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                ecpri_mux_state_load_reg_484 <= ecpri_mux_state;
                numSection_V_load_reg_469 <= numSection_V;
                t_V_1_reg_479 <= layer_count_V;
                t_V_reg_474 <= section_count_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then
                ecpri_mux_state_load_reg_484_pp0_iter1_reg <= ecpri_mux_state_load_reg_484;
                icmp_ln887_reg_489_pp0_iter1_reg <= icmp_ln887_reg_489;
                numSection_V_load_reg_469_pp0_iter1_reg <= numSection_V_load_reg_469;
                t_V_1_reg_479_pp0_iter1_reg <= t_V_1_reg_479;
                t_V_reg_474_pp0_iter1_reg <= t_V_reg_474;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ecpri_mux_state = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                icmp_ln887_reg_489 <= icmp_ln887_fu_311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ecpri_mux_state = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                mux_cnfg_V <= mux_config_in_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((mux_data_out_V_data_V_1_load_A = ap_const_logic_1)) then
                mux_data_out_V_data_V_1_payload_A <= mux_data_out_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((mux_data_out_V_data_V_1_load_B = ap_const_logic_1)) then
                mux_data_out_V_data_V_1_payload_B <= mux_data_out_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((mux_data_out_V_last_V_1_load_A = ap_const_logic_1)) then
                mux_data_out_V_last_V_1_payload_A <= mux_data_out_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((mux_data_out_V_last_V_1_load_B = ap_const_logic_1)) then
                mux_data_out_V_last_V_1_payload_B <= mux_data_out_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_phi_mux_section_count_V_flag_1_phi_fu_249_p10 = ap_const_lv1_1))) then
                section_count_V <= ap_phi_mux_section_count_V_new_1_phi_fu_270_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ecpri_mux_state = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (icmp_ln887_fu_311_p2 = ap_const_lv1_1))) then
                tmp_data_V_1_reg_493 <= user_data_in_V_data_V_0_data_out;
                tmp_last_V_1_reg_498 <= user_data_in_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                tmp_data_V_reg_503 <= control_data_in_V_data_V_0_data_out;
                tmp_last_V_reg_508 <= control_data_in_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((user_data_in_V_data_V_0_load_A = ap_const_logic_1)) then
                user_data_in_V_data_V_0_payload_A <= user_data_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((user_data_in_V_data_V_0_load_B = ap_const_logic_1)) then
                user_data_in_V_data_V_0_payload_B <= user_data_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((user_data_in_V_last_V_0_load_A = ap_const_logic_1)) then
                user_data_in_V_last_V_0_payload_A <= user_data_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((user_data_in_V_last_V_0_load_B = ap_const_logic_1)) then
                user_data_in_V_last_V_0_payload_B <= user_data_in_TLAST;
            end if;
        end if;
    end process;

    ap_NS_iter0_fsm_assign_proc : process (control_data_in_V_data_V_0_vld_out, user_data_in_V_data_V_0_vld_out, mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, mux_config_in_V_V_TVALID, ecpri_mux_state, ap_CS_iter0_fsm, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_block_state2_io, ap_block_state3_io, ap_predicate_op14_read_state1)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            when others =>  
                ap_NS_iter0_fsm <= "X";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (control_data_in_V_data_V_0_vld_out, user_data_in_V_data_V_0_vld_out, mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, mux_config_in_V_V_TVALID, ecpri_mux_state, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_block_state2_io, ap_block_state3_io, ap_predicate_op14_read_state1)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state2 => 
                if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)))) and not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                elsif ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and ((ap_const_logic_0 = ap_CS_iter0_fsm_state1) or ((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2))))))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "XX";
        end case;
    end process;

    ap_NS_iter2_fsm_assign_proc : process (mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm, ap_CS_iter2_fsm_state3, ap_block_state2_io, ap_block_state3_io)
    begin
        case ap_CS_iter2_fsm is
            when ap_ST_iter2_fsm_state3 => 
                if ((not(((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) and (ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                elsif ((not(((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) and ((ap_const_logic_0 = ap_CS_iter1_fsm_state2) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io))))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state0;
                else
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                end if;
            when ap_ST_iter2_fsm_state0 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                else
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter2_fsm <= "XX";
        end case;
    end process;
    add_ln700_1_fu_370_p2 <= std_logic_vector(unsigned(layer_count_V) + unsigned(ap_const_lv3_1));
    add_ln700_2_fu_337_p2 <= std_logic_vector(unsigned(tlast_counter_V) + unsigned(ap_const_lv8_1));
    add_ln700_fu_357_p2 <= std_logic_vector(unsigned(section_count_V) + unsigned(ap_const_lv12_1));
    ap_CS_iter0_fsm_state1 <= ap_CS_iter0_fsm(0);
    ap_CS_iter1_fsm_state2 <= ap_CS_iter1_fsm(1);
    ap_CS_iter2_fsm_state3 <= ap_CS_iter2_fsm(1);

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(control_data_in_V_data_V_0_vld_out, user_data_in_V_data_V_0_vld_out, mux_config_in_V_V_TVALID, ecpri_mux_state, ap_predicate_op14_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)));
    end process;


    ap_block_state2_io_assign_proc : process(mux_data_out_V_data_V_1_ack_in, ecpri_mux_state_load_reg_484, ap_predicate_op57_write_state2)
    begin
                ap_block_state2_io <= (((mux_data_out_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op57_write_state2 = ap_const_boolean_1)) or ((mux_data_out_V_data_V_1_ack_in = ap_const_logic_0) and (ecpri_mux_state_load_reg_484 = ap_const_lv2_2)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(mux_data_out_V_data_V_1_ack_in, ecpri_mux_state_load_reg_484_pp0_iter1_reg, ap_predicate_op94_write_state3)
    begin
                ap_block_state3_io <= (((mux_data_out_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op94_write_state3 = ap_const_boolean_1)) or ((mux_data_out_V_data_V_1_ack_in = ap_const_logic_0) and (ecpri_mux_state_load_reg_484_pp0_iter1_reg = ap_const_lv2_2)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)));
    end process;


    ap_condition_1065_assign_proc : process(ecpri_mux_state, ap_CS_iter0_fsm_state1, tmp_last_V_fu_353_p1)
    begin
                ap_condition_1065 <= ((ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (tmp_last_V_fu_353_p1 = ap_const_lv1_1));
    end process;


    ap_condition_852_assign_proc : process(control_data_in_V_data_V_0_vld_out, user_data_in_V_data_V_0_vld_out, mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, mux_config_in_V_V_TVALID, ecpri_mux_state, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_block_state2_io, ap_block_state3_io, ap_predicate_op14_read_state1)
    begin
                ap_condition_852 <= (not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1));
    end process;


    ap_condition_897_assign_proc : process(ecpri_mux_state, tmp_last_V_fu_353_p1, icmp_ln879_fu_364_p2)
    begin
                ap_condition_897 <= ((ecpri_mux_state = ap_const_lv2_2) and (icmp_ln879_fu_364_p2 = ap_const_lv1_1) and (tmp_last_V_fu_353_p1 = ap_const_lv1_1));
    end process;


    ap_condition_941_assign_proc : process(ecpri_mux_state, icmp_ln887_fu_311_p2, tmp_last_V_1_fu_327_p1)
    begin
                ap_condition_941 <= ((ecpri_mux_state = ap_const_lv2_3) and (icmp_ln887_fu_311_p2 = ap_const_lv1_1) and (tmp_last_V_1_fu_327_p1 = ap_const_lv1_0));
    end process;


    ap_condition_950_assign_proc : process(ecpri_mux_state, icmp_ln887_fu_311_p2, tmp_last_V_1_fu_327_p1)
    begin
                ap_condition_950 <= ((ecpri_mux_state = ap_const_lv2_3) and (tmp_last_V_1_fu_327_p1 = ap_const_lv1_1) and (icmp_ln887_fu_311_p2 = ap_const_lv1_1));
    end process;


    ap_condition_969_assign_proc : process(mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3)
    begin
                ap_condition_969 <= (not(((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2));
    end process;


    ap_phi_mux_section_count_V_flag_1_phi_fu_249_p10_assign_proc : process(ecpri_mux_state, ap_CS_iter0_fsm_state1, ecpri_mux_state_load_load_fu_299_p1, ap_phi_mux_section_count_V_flag_phi_fu_209_p6, ap_phi_reg_pp0_iter0_section_count_V_flag_1_reg_246)
    begin
        if (((ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            ap_phi_mux_section_count_V_flag_1_phi_fu_249_p10 <= ap_phi_mux_section_count_V_flag_phi_fu_209_p6;
        elsif (((ecpri_mux_state = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            ap_phi_mux_section_count_V_flag_1_phi_fu_249_p10 <= ap_const_lv1_1;
        elsif ((((ecpri_mux_state_load_load_fu_299_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or ((ecpri_mux_state = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)))) then 
            ap_phi_mux_section_count_V_flag_1_phi_fu_249_p10 <= ap_const_lv1_0;
        else 
            ap_phi_mux_section_count_V_flag_1_phi_fu_249_p10 <= ap_phi_reg_pp0_iter0_section_count_V_flag_1_reg_246;
        end if; 
    end process;


    ap_phi_mux_section_count_V_flag_phi_fu_209_p6_assign_proc : process(ecpri_mux_state, ap_CS_iter0_fsm_state1, tmp_last_V_fu_353_p1, ap_phi_reg_pp0_iter0_section_count_V_flag_reg_206, icmp_ln879_fu_364_p2)
    begin
        if (((ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (tmp_last_V_fu_353_p1 = ap_const_lv1_0))) then 
            ap_phi_mux_section_count_V_flag_phi_fu_209_p6 <= ap_const_lv1_0;
        elsif ((((ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (tmp_last_V_fu_353_p1 = ap_const_lv1_1) and (icmp_ln879_fu_364_p2 = ap_const_lv1_0)) or ((ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (icmp_ln879_fu_364_p2 = ap_const_lv1_1) and (tmp_last_V_fu_353_p1 = ap_const_lv1_1)))) then 
            ap_phi_mux_section_count_V_flag_phi_fu_209_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_section_count_V_flag_phi_fu_209_p6 <= ap_phi_reg_pp0_iter0_section_count_V_flag_reg_206;
        end if; 
    end process;


    ap_phi_mux_section_count_V_new_1_phi_fu_270_p10_assign_proc : process(ecpri_mux_state, ap_CS_iter0_fsm_state1, ap_phi_mux_section_count_V_new_s_phi_fu_223_p6, ap_phi_reg_pp0_iter0_section_count_V_new_1_reg_267)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state1)) then
            if ((ecpri_mux_state = ap_const_lv2_2)) then 
                ap_phi_mux_section_count_V_new_1_phi_fu_270_p10 <= ap_phi_mux_section_count_V_new_s_phi_fu_223_p6;
            elsif ((ecpri_mux_state = ap_const_lv2_1)) then 
                ap_phi_mux_section_count_V_new_1_phi_fu_270_p10 <= ap_const_lv12_0;
            else 
                ap_phi_mux_section_count_V_new_1_phi_fu_270_p10 <= ap_phi_reg_pp0_iter0_section_count_V_new_1_reg_267;
            end if;
        else 
            ap_phi_mux_section_count_V_new_1_phi_fu_270_p10 <= ap_phi_reg_pp0_iter0_section_count_V_new_1_reg_267;
        end if; 
    end process;


    ap_phi_mux_section_count_V_new_s_phi_fu_223_p6_assign_proc : process(icmp_ln879_fu_364_p2, ap_phi_reg_pp0_iter0_section_count_V_new_s_reg_220, add_ln700_fu_357_p2, ap_condition_1065)
    begin
        if ((ap_const_boolean_1 = ap_condition_1065)) then
            if ((icmp_ln879_fu_364_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_section_count_V_new_s_phi_fu_223_p6 <= add_ln700_fu_357_p2;
            elsif ((icmp_ln879_fu_364_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_section_count_V_new_s_phi_fu_223_p6 <= ap_const_lv12_0;
            else 
                ap_phi_mux_section_count_V_new_s_phi_fu_223_p6 <= ap_phi_reg_pp0_iter0_section_count_V_new_s_reg_220;
            end if;
        else 
            ap_phi_mux_section_count_V_new_s_phi_fu_223_p6 <= ap_phi_reg_pp0_iter0_section_count_V_new_s_reg_220;
        end if; 
    end process;


    ap_phi_mux_storemerge255_phi_fu_236_p6_assign_proc : process(ecpri_mux_state, ap_CS_iter0_fsm_state1, tmp_last_V_fu_353_p1, icmp_ln879_fu_364_p2, select_ln104_fu_404_p3, ap_phi_reg_pp0_iter0_storemerge255_reg_233)
    begin
        if ((((ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (tmp_last_V_fu_353_p1 = ap_const_lv1_0)) or ((ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (tmp_last_V_fu_353_p1 = ap_const_lv1_1) and (icmp_ln879_fu_364_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_storemerge255_phi_fu_236_p6 <= ap_const_lv2_2;
        elsif (((ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (icmp_ln879_fu_364_p2 = ap_const_lv1_1) and (tmp_last_V_fu_353_p1 = ap_const_lv1_1))) then 
            ap_phi_mux_storemerge255_phi_fu_236_p6 <= select_ln104_fu_404_p3;
        else 
            ap_phi_mux_storemerge255_phi_fu_236_p6 <= ap_phi_reg_pp0_iter0_storemerge255_reg_233;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_section_count_V_flag_1_reg_246 <= "X";
    ap_phi_reg_pp0_iter0_section_count_V_flag_reg_206 <= "X";
    ap_phi_reg_pp0_iter0_section_count_V_new_1_reg_267 <= "XXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_section_count_V_new_s_reg_220 <= "XXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_storemerge255_reg_233 <= "XX";

    ap_predicate_op14_read_state1_assign_proc : process(ecpri_mux_state, icmp_ln887_fu_311_p2)
    begin
                ap_predicate_op14_read_state1 <= ((ecpri_mux_state = ap_const_lv2_3) and (icmp_ln887_fu_311_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op57_write_state2_assign_proc : process(ecpri_mux_state_load_reg_484, icmp_ln887_reg_489)
    begin
                ap_predicate_op57_write_state2 <= ((ecpri_mux_state_load_reg_484 = ap_const_lv2_3) and (icmp_ln887_reg_489 = ap_const_lv1_1));
    end process;


    ap_predicate_op94_write_state3_assign_proc : process(ecpri_mux_state_load_reg_484_pp0_iter1_reg, icmp_ln887_reg_489_pp0_iter1_reg)
    begin
                ap_predicate_op94_write_state3 <= ((ecpri_mux_state_load_reg_484_pp0_iter1_reg = ap_const_lv2_3) and (icmp_ln887_reg_489_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    control_data_in_TDATA_blk_n_assign_proc : process(control_data_in_V_data_V_0_state, ecpri_mux_state, ap_CS_iter0_fsm_state1)
    begin
        if (((ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            control_data_in_TDATA_blk_n <= control_data_in_V_data_V_0_state(0);
        else 
            control_data_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    control_data_in_TREADY <= control_data_in_V_last_V_0_state(1);
    control_data_in_V_data_V_0_ack_in <= control_data_in_V_data_V_0_state(1);

    control_data_in_V_data_V_0_ack_out_assign_proc : process(control_data_in_V_data_V_0_vld_out, user_data_in_V_data_V_0_vld_out, mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, mux_config_in_V_V_TVALID, ecpri_mux_state, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_block_state2_io, ap_block_state3_io, ap_predicate_op14_read_state1)
    begin
        if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            control_data_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            control_data_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    control_data_in_V_data_V_0_data_out_assign_proc : process(control_data_in_V_data_V_0_payload_A, control_data_in_V_data_V_0_payload_B, control_data_in_V_data_V_0_sel)
    begin
        if ((control_data_in_V_data_V_0_sel = ap_const_logic_1)) then 
            control_data_in_V_data_V_0_data_out <= control_data_in_V_data_V_0_payload_B;
        else 
            control_data_in_V_data_V_0_data_out <= control_data_in_V_data_V_0_payload_A;
        end if; 
    end process;

    control_data_in_V_data_V_0_load_A <= (not(control_data_in_V_data_V_0_sel_wr) and control_data_in_V_data_V_0_state_cmp_full);
    control_data_in_V_data_V_0_load_B <= (control_data_in_V_data_V_0_state_cmp_full and control_data_in_V_data_V_0_sel_wr);
    control_data_in_V_data_V_0_sel <= control_data_in_V_data_V_0_sel_rd;
    control_data_in_V_data_V_0_state_cmp_full <= '0' when (control_data_in_V_data_V_0_state = ap_const_lv2_1) else '1';
    control_data_in_V_data_V_0_vld_in <= control_data_in_TVALID;
    control_data_in_V_data_V_0_vld_out <= control_data_in_V_data_V_0_state(0);
    control_data_in_V_last_V_0_ack_in <= control_data_in_V_last_V_0_state(1);

    control_data_in_V_last_V_0_ack_out_assign_proc : process(control_data_in_V_data_V_0_vld_out, user_data_in_V_data_V_0_vld_out, mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, mux_config_in_V_V_TVALID, ecpri_mux_state, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_block_state2_io, ap_block_state3_io, ap_predicate_op14_read_state1)
    begin
        if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ecpri_mux_state = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            control_data_in_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            control_data_in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    control_data_in_V_last_V_0_data_out_assign_proc : process(control_data_in_V_last_V_0_payload_A, control_data_in_V_last_V_0_payload_B, control_data_in_V_last_V_0_sel)
    begin
        if ((control_data_in_V_last_V_0_sel = ap_const_logic_1)) then 
            control_data_in_V_last_V_0_data_out <= control_data_in_V_last_V_0_payload_B;
        else 
            control_data_in_V_last_V_0_data_out <= control_data_in_V_last_V_0_payload_A;
        end if; 
    end process;

    control_data_in_V_last_V_0_load_A <= (not(control_data_in_V_last_V_0_sel_wr) and control_data_in_V_last_V_0_state_cmp_full);
    control_data_in_V_last_V_0_load_B <= (control_data_in_V_last_V_0_state_cmp_full and control_data_in_V_last_V_0_sel_wr);
    control_data_in_V_last_V_0_sel <= control_data_in_V_last_V_0_sel_rd;
    control_data_in_V_last_V_0_state_cmp_full <= '0' when (control_data_in_V_last_V_0_state = ap_const_lv2_1) else '1';
    control_data_in_V_last_V_0_vld_in <= control_data_in_TVALID;
    control_data_in_V_last_V_0_vld_out <= control_data_in_V_last_V_0_state(0);
    ecpri_mux_state_load_load_fu_299_p1 <= ecpri_mux_state;
    ecpri_mux_state_out_V <= ecpri_mux_state_load_reg_484_pp0_iter1_reg;
    icmp_ln879_1_fu_398_p2 <= "1" when (layer_count_V = ap_const_lv3_0) else "0";
    icmp_ln879_fu_364_p2 <= "1" when (add_ln700_fu_357_p2 = numSection_V) else "0";
    icmp_ln887_fu_311_p2 <= "1" when (unsigned(tlast_counter_V) < unsigned(ap_const_lv8_8C)) else "0";
    layer_count_out_V <= t_V_1_reg_479_pp0_iter1_reg;

    mux_config_in_V_V_TDATA_blk_n_assign_proc : process(mux_config_in_V_V_TVALID, ecpri_mux_state, ap_CS_iter0_fsm_state1)
    begin
        if (((ecpri_mux_state = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            mux_config_in_V_V_TDATA_blk_n <= mux_config_in_V_V_TVALID;
        else 
            mux_config_in_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mux_config_in_V_V_TREADY_assign_proc : process(control_data_in_V_data_V_0_vld_out, user_data_in_V_data_V_0_vld_out, mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, mux_config_in_V_V_TVALID, ecpri_mux_state, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_block_state2_io, ap_block_state3_io, ap_predicate_op14_read_state1)
    begin
        if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ecpri_mux_state = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            mux_config_in_V_V_TREADY <= ap_const_logic_1;
        else 
            mux_config_in_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    mux_data_out_TDATA <= mux_data_out_V_data_V_1_data_out;

    mux_data_out_TDATA_blk_n_assign_proc : process(mux_data_out_V_data_V_1_state, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ecpri_mux_state_load_reg_484, ecpri_mux_state_load_reg_484_pp0_iter1_reg, icmp_ln887_reg_489, icmp_ln887_reg_489_pp0_iter1_reg)
    begin
        if ((((ecpri_mux_state_load_reg_484_pp0_iter1_reg = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_iter2_fsm_state3) and (icmp_ln887_reg_489_pp0_iter1_reg = ap_const_lv1_1)) or ((ecpri_mux_state_load_reg_484_pp0_iter1_reg = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter2_fsm_state3)) or ((ecpri_mux_state_load_reg_484 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (icmp_ln887_reg_489 = ap_const_lv1_1)) or ((ecpri_mux_state_load_reg_484 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2)))) then 
            mux_data_out_TDATA_blk_n <= mux_data_out_V_data_V_1_state(1);
        else 
            mux_data_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    mux_data_out_TKEEP <= mux_data_out_V_keep_V_1_data_out;
    mux_data_out_TLAST <= mux_data_out_V_last_V_1_data_out;
    mux_data_out_TUSER <= mux_data_out_V_user_V_1_data_out;
    mux_data_out_TVALID <= mux_data_out_V_last_V_1_state(0);
    mux_data_out_V_data_V_1_ack_in <= mux_data_out_V_data_V_1_state(1);
    mux_data_out_V_data_V_1_ack_out <= mux_data_out_TREADY;

    mux_data_out_V_data_V_1_data_in_assign_proc : process(ecpri_mux_state_load_reg_484, ap_predicate_op57_write_state2, tmp_data_V_1_reg_493, tmp_data_V_reg_503, ap_condition_969)
    begin
        if ((ap_const_boolean_1 = ap_condition_969)) then
            if ((ecpri_mux_state_load_reg_484 = ap_const_lv2_2)) then 
                mux_data_out_V_data_V_1_data_in <= tmp_data_V_reg_503;
            elsif ((ap_predicate_op57_write_state2 = ap_const_boolean_1)) then 
                mux_data_out_V_data_V_1_data_in <= tmp_data_V_1_reg_493;
            else 
                mux_data_out_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            mux_data_out_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mux_data_out_V_data_V_1_data_out_assign_proc : process(mux_data_out_V_data_V_1_payload_A, mux_data_out_V_data_V_1_payload_B, mux_data_out_V_data_V_1_sel)
    begin
        if ((mux_data_out_V_data_V_1_sel = ap_const_logic_1)) then 
            mux_data_out_V_data_V_1_data_out <= mux_data_out_V_data_V_1_payload_B;
        else 
            mux_data_out_V_data_V_1_data_out <= mux_data_out_V_data_V_1_payload_A;
        end if; 
    end process;

    mux_data_out_V_data_V_1_load_A <= (mux_data_out_V_data_V_1_state_cmp_full and not(mux_data_out_V_data_V_1_sel_wr));
    mux_data_out_V_data_V_1_load_B <= (mux_data_out_V_data_V_1_state_cmp_full and mux_data_out_V_data_V_1_sel_wr);
    mux_data_out_V_data_V_1_sel <= mux_data_out_V_data_V_1_sel_rd;
    mux_data_out_V_data_V_1_state_cmp_full <= '0' when (mux_data_out_V_data_V_1_state = ap_const_lv2_1) else '1';

    mux_data_out_V_data_V_1_vld_in_assign_proc : process(mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ecpri_mux_state_load_reg_484, ap_predicate_op57_write_state2, ap_block_state2_io, ap_block_state3_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op57_write_state2 = ap_const_boolean_1)) or (not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and (ecpri_mux_state_load_reg_484 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2)))) then 
            mux_data_out_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            mux_data_out_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    mux_data_out_V_data_V_1_vld_out <= mux_data_out_V_data_V_1_state(0);
    mux_data_out_V_keep_V_1_ack_out <= mux_data_out_TREADY;
    mux_data_out_V_keep_V_1_data_out <= ap_const_lv16_FFFF;
    mux_data_out_V_keep_V_1_sel <= mux_data_out_V_keep_V_1_sel_rd;

    mux_data_out_V_keep_V_1_vld_in_assign_proc : process(mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ecpri_mux_state_load_reg_484, ap_predicate_op57_write_state2, ap_block_state2_io, ap_block_state3_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op57_write_state2 = ap_const_boolean_1)) or (not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and (ecpri_mux_state_load_reg_484 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2)))) then 
            mux_data_out_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            mux_data_out_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    mux_data_out_V_keep_V_1_vld_out <= mux_data_out_V_keep_V_1_state(0);
    mux_data_out_V_last_V_1_ack_in <= mux_data_out_V_last_V_1_state(1);
    mux_data_out_V_last_V_1_ack_out <= mux_data_out_TREADY;

    mux_data_out_V_last_V_1_data_in_assign_proc : process(ecpri_mux_state_load_reg_484, ap_predicate_op57_write_state2, tmp_last_V_1_reg_498, tmp_last_V_reg_508, ap_condition_969)
    begin
        if ((ap_const_boolean_1 = ap_condition_969)) then
            if ((ecpri_mux_state_load_reg_484 = ap_const_lv2_2)) then 
                mux_data_out_V_last_V_1_data_in <= tmp_last_V_reg_508;
            elsif ((ap_predicate_op57_write_state2 = ap_const_boolean_1)) then 
                mux_data_out_V_last_V_1_data_in <= tmp_last_V_1_reg_498;
            else 
                mux_data_out_V_last_V_1_data_in <= "X";
            end if;
        else 
            mux_data_out_V_last_V_1_data_in <= "X";
        end if; 
    end process;


    mux_data_out_V_last_V_1_data_out_assign_proc : process(mux_data_out_V_last_V_1_payload_A, mux_data_out_V_last_V_1_payload_B, mux_data_out_V_last_V_1_sel)
    begin
        if ((mux_data_out_V_last_V_1_sel = ap_const_logic_1)) then 
            mux_data_out_V_last_V_1_data_out <= mux_data_out_V_last_V_1_payload_B;
        else 
            mux_data_out_V_last_V_1_data_out <= mux_data_out_V_last_V_1_payload_A;
        end if; 
    end process;

    mux_data_out_V_last_V_1_load_A <= (mux_data_out_V_last_V_1_state_cmp_full and not(mux_data_out_V_last_V_1_sel_wr));
    mux_data_out_V_last_V_1_load_B <= (mux_data_out_V_last_V_1_state_cmp_full and mux_data_out_V_last_V_1_sel_wr);
    mux_data_out_V_last_V_1_sel <= mux_data_out_V_last_V_1_sel_rd;
    mux_data_out_V_last_V_1_state_cmp_full <= '0' when (mux_data_out_V_last_V_1_state = ap_const_lv2_1) else '1';

    mux_data_out_V_last_V_1_vld_in_assign_proc : process(mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ecpri_mux_state_load_reg_484, ap_predicate_op57_write_state2, ap_block_state2_io, ap_block_state3_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op57_write_state2 = ap_const_boolean_1)) or (not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and (ecpri_mux_state_load_reg_484 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2)))) then 
            mux_data_out_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            mux_data_out_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    mux_data_out_V_last_V_1_vld_out <= mux_data_out_V_last_V_1_state(0);
    mux_data_out_V_user_V_1_ack_out <= mux_data_out_TREADY;
    mux_data_out_V_user_V_1_data_out <= ap_const_lv1_0;
    mux_data_out_V_user_V_1_sel <= mux_data_out_V_user_V_1_sel_rd;

    mux_data_out_V_user_V_1_vld_in_assign_proc : process(mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ecpri_mux_state_load_reg_484, ap_predicate_op57_write_state2, ap_block_state2_io, ap_block_state3_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op57_write_state2 = ap_const_boolean_1)) or (not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))))) and (ecpri_mux_state_load_reg_484 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2)))) then 
            mux_data_out_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            mux_data_out_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    mux_data_out_V_user_V_1_vld_out <= mux_data_out_V_user_V_1_state(0);
    num_section_out_V <= numSection_V_load_reg_469_pp0_iter1_reg;
    section_count_out_V <= t_V_reg_474_pp0_iter1_reg;
    select_ln104_fu_404_p3 <= 
        ap_const_lv2_3 when (icmp_ln879_1_fu_398_p2(0) = '1') else 
        ap_const_lv2_2;
    tmp_last_V_1_fu_327_p1 <= user_data_in_V_last_V_0_data_out;
    tmp_last_V_fu_353_p1 <= control_data_in_V_last_V_0_data_out;
    tmp_nbreadreq_fu_152_p3 <= (0=>(mux_config_in_V_V_TVALID), others=>'-');
    trunc_ln209_fu_431_p1 <= mux_config_in_V_V_TDATA(12 - 1 downto 0);

    user_data_in_TDATA_blk_n_assign_proc : process(user_data_in_V_data_V_0_state, ecpri_mux_state, ap_CS_iter0_fsm_state1, icmp_ln887_fu_311_p2)
    begin
        if (((ecpri_mux_state = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (icmp_ln887_fu_311_p2 = ap_const_lv1_1))) then 
            user_data_in_TDATA_blk_n <= user_data_in_V_data_V_0_state(0);
        else 
            user_data_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    user_data_in_TREADY <= user_data_in_V_last_V_0_state(1);
    user_data_in_V_data_V_0_ack_in <= user_data_in_V_data_V_0_state(1);

    user_data_in_V_data_V_0_ack_out_assign_proc : process(control_data_in_V_data_V_0_vld_out, user_data_in_V_data_V_0_vld_out, mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, mux_config_in_V_V_TVALID, ecpri_mux_state, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_block_state2_io, ap_block_state3_io, ap_predicate_op14_read_state1)
    begin
        if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_predicate_op14_read_state1 = ap_const_boolean_1))) then 
            user_data_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            user_data_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    user_data_in_V_data_V_0_data_out_assign_proc : process(user_data_in_V_data_V_0_payload_A, user_data_in_V_data_V_0_payload_B, user_data_in_V_data_V_0_sel)
    begin
        if ((user_data_in_V_data_V_0_sel = ap_const_logic_1)) then 
            user_data_in_V_data_V_0_data_out <= user_data_in_V_data_V_0_payload_B;
        else 
            user_data_in_V_data_V_0_data_out <= user_data_in_V_data_V_0_payload_A;
        end if; 
    end process;

    user_data_in_V_data_V_0_load_A <= (user_data_in_V_data_V_0_state_cmp_full and not(user_data_in_V_data_V_0_sel_wr));
    user_data_in_V_data_V_0_load_B <= (user_data_in_V_data_V_0_state_cmp_full and user_data_in_V_data_V_0_sel_wr);
    user_data_in_V_data_V_0_sel <= user_data_in_V_data_V_0_sel_rd;
    user_data_in_V_data_V_0_state_cmp_full <= '0' when (user_data_in_V_data_V_0_state = ap_const_lv2_1) else '1';
    user_data_in_V_data_V_0_vld_in <= user_data_in_TVALID;
    user_data_in_V_data_V_0_vld_out <= user_data_in_V_data_V_0_state(0);
    user_data_in_V_last_V_0_ack_in <= user_data_in_V_last_V_0_state(1);

    user_data_in_V_last_V_0_ack_out_assign_proc : process(control_data_in_V_data_V_0_vld_out, user_data_in_V_data_V_0_vld_out, mux_data_out_TREADY, mux_data_out_V_data_V_1_state, mux_data_out_V_user_V_1_state, mux_data_out_V_keep_V_1_state, mux_data_out_V_last_V_1_state, mux_config_in_V_V_TVALID, ecpri_mux_state, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, ap_block_state2_io, ap_block_state3_io, ap_predicate_op14_read_state1)
    begin
        if ((not((((user_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op14_read_state1 = ap_const_boolean_1)) or ((mux_config_in_V_V_TVALID = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_1)) or ((control_data_in_V_data_V_0_vld_out = ap_const_logic_0) and (ecpri_mux_state = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((mux_data_out_V_last_V_1_state = ap_const_lv2_1) or (mux_data_out_V_keep_V_1_state = ap_const_lv2_1) or (mux_data_out_V_user_V_1_state = ap_const_lv2_1) or (mux_data_out_V_data_V_1_state = ap_const_lv2_1) or (ap_const_boolean_1 = ap_block_state3_io) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_last_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_keep_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_user_V_1_state = ap_const_lv2_3)) or ((mux_data_out_TREADY = ap_const_logic_0) and (mux_data_out_V_data_V_1_state = ap_const_lv2_3)))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_predicate_op14_read_state1 = ap_const_boolean_1))) then 
            user_data_in_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            user_data_in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    user_data_in_V_last_V_0_data_out_assign_proc : process(user_data_in_V_last_V_0_payload_A, user_data_in_V_last_V_0_payload_B, user_data_in_V_last_V_0_sel)
    begin
        if ((user_data_in_V_last_V_0_sel = ap_const_logic_1)) then 
            user_data_in_V_last_V_0_data_out <= user_data_in_V_last_V_0_payload_B;
        else 
            user_data_in_V_last_V_0_data_out <= user_data_in_V_last_V_0_payload_A;
        end if; 
    end process;

    user_data_in_V_last_V_0_load_A <= (user_data_in_V_last_V_0_state_cmp_full and not(user_data_in_V_last_V_0_sel_wr));
    user_data_in_V_last_V_0_load_B <= (user_data_in_V_last_V_0_state_cmp_full and user_data_in_V_last_V_0_sel_wr);
    user_data_in_V_last_V_0_sel <= user_data_in_V_last_V_0_sel_rd;
    user_data_in_V_last_V_0_state_cmp_full <= '0' when (user_data_in_V_last_V_0_state = ap_const_lv2_1) else '1';
    user_data_in_V_last_V_0_vld_in <= user_data_in_TVALID;
    user_data_in_V_last_V_0_vld_out <= user_data_in_V_last_V_0_state(0);
    zext_ln76_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_nbreadreq_fu_152_p3),2));
end behav;
