// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ecpri_demux.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ecpri_demux::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ecpri_demux::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> ecpri_demux::ap_ST_iter0_fsm_state1 = "1";
const sc_lv<2> ecpri_demux::ap_ST_iter1_fsm_state2 = "10";
const sc_lv<2> ecpri_demux::ap_ST_iter2_fsm_state3 = "10";
const sc_lv<2> ecpri_demux::ap_ST_iter1_fsm_state0 = "1";
const sc_lv<2> ecpri_demux::ap_ST_iter2_fsm_state0 = "1";
const bool ecpri_demux::ap_const_boolean_1 = true;
const sc_lv<1> ecpri_demux::ap_const_lv1_0 = "0";
const sc_lv<1> ecpri_demux::ap_const_lv1_1 = "1";
const sc_lv<2> ecpri_demux::ap_const_lv2_0 = "00";
const sc_lv<2> ecpri_demux::ap_const_lv2_2 = "10";
const sc_lv<2> ecpri_demux::ap_const_lv2_3 = "11";
const sc_lv<2> ecpri_demux::ap_const_lv2_1 = "1";
const sc_lv<8> ecpri_demux::ap_const_lv8_0 = "00000000";
const sc_lv<32> ecpri_demux::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> ecpri_demux::ap_const_lv32_1 = "1";
const sc_lv<8> ecpri_demux::ap_const_lv8_2 = "10";
const sc_lv<32> ecpri_demux::ap_const_lv32_58 = "1011000";
const sc_lv<32> ecpri_demux::ap_const_lv32_5F = "1011111";
const sc_lv<8> ecpri_demux::ap_const_lv8_1 = "1";
const sc_lv<32> ecpri_demux::ap_const_lv32_78 = "1111000";
const sc_lv<32> ecpri_demux::ap_const_lv32_7F = "1111111";
const bool ecpri_demux::ap_const_boolean_0 = false;

ecpri_demux::ecpri_demux(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_CU_data_in_TDATA_blk_n);
    sensitive << ( CU_data_in_V_data_V_0_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );

    SC_METHOD(thread_CU_data_in_TREADY);
    sensitive << ( CU_data_in_V_last_V_0_state );

    SC_METHOD(thread_CU_data_in_V_data_V_0_ack_in);
    sensitive << ( CU_data_in_V_data_V_0_state );

    SC_METHOD(thread_CU_data_in_V_data_V_0_ack_out);
    sensitive << ( CU_data_in_V_data_V_0_vld_out );
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_CU_data_in_V_data_V_0_data_out);
    sensitive << ( CU_data_in_V_data_V_0_payload_A );
    sensitive << ( CU_data_in_V_data_V_0_payload_B );
    sensitive << ( CU_data_in_V_data_V_0_sel );

    SC_METHOD(thread_CU_data_in_V_data_V_0_load_A);
    sensitive << ( CU_data_in_V_data_V_0_sel_wr );
    sensitive << ( CU_data_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_CU_data_in_V_data_V_0_load_B);
    sensitive << ( CU_data_in_V_data_V_0_sel_wr );
    sensitive << ( CU_data_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_CU_data_in_V_data_V_0_sel);
    sensitive << ( CU_data_in_V_data_V_0_sel_rd );

    SC_METHOD(thread_CU_data_in_V_data_V_0_state_cmp_full);
    sensitive << ( CU_data_in_V_data_V_0_state );

    SC_METHOD(thread_CU_data_in_V_data_V_0_vld_in);
    sensitive << ( CU_data_in_TVALID );

    SC_METHOD(thread_CU_data_in_V_data_V_0_vld_out);
    sensitive << ( CU_data_in_V_data_V_0_state );

    SC_METHOD(thread_CU_data_in_V_keep_V_0_ack_in);
    sensitive << ( CU_data_in_V_keep_V_0_state );

    SC_METHOD(thread_CU_data_in_V_keep_V_0_ack_out);
    sensitive << ( CU_data_in_V_data_V_0_vld_out );
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_CU_data_in_V_keep_V_0_data_out);
    sensitive << ( CU_data_in_V_keep_V_0_payload_A );
    sensitive << ( CU_data_in_V_keep_V_0_payload_B );
    sensitive << ( CU_data_in_V_keep_V_0_sel );

    SC_METHOD(thread_CU_data_in_V_keep_V_0_load_A);
    sensitive << ( CU_data_in_V_keep_V_0_sel_wr );
    sensitive << ( CU_data_in_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_CU_data_in_V_keep_V_0_load_B);
    sensitive << ( CU_data_in_V_keep_V_0_sel_wr );
    sensitive << ( CU_data_in_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_CU_data_in_V_keep_V_0_sel);
    sensitive << ( CU_data_in_V_keep_V_0_sel_rd );

    SC_METHOD(thread_CU_data_in_V_keep_V_0_state_cmp_full);
    sensitive << ( CU_data_in_V_keep_V_0_state );

    SC_METHOD(thread_CU_data_in_V_keep_V_0_vld_in);
    sensitive << ( CU_data_in_TVALID );

    SC_METHOD(thread_CU_data_in_V_keep_V_0_vld_out);
    sensitive << ( CU_data_in_V_keep_V_0_state );

    SC_METHOD(thread_CU_data_in_V_last_V_0_ack_in);
    sensitive << ( CU_data_in_V_last_V_0_state );

    SC_METHOD(thread_CU_data_in_V_last_V_0_ack_out);
    sensitive << ( CU_data_in_V_data_V_0_vld_out );
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_CU_data_in_V_last_V_0_data_out);
    sensitive << ( CU_data_in_V_last_V_0_payload_A );
    sensitive << ( CU_data_in_V_last_V_0_payload_B );
    sensitive << ( CU_data_in_V_last_V_0_sel );

    SC_METHOD(thread_CU_data_in_V_last_V_0_load_A);
    sensitive << ( CU_data_in_V_last_V_0_sel_wr );
    sensitive << ( CU_data_in_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_CU_data_in_V_last_V_0_load_B);
    sensitive << ( CU_data_in_V_last_V_0_sel_wr );
    sensitive << ( CU_data_in_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_CU_data_in_V_last_V_0_sel);
    sensitive << ( CU_data_in_V_last_V_0_sel_rd );

    SC_METHOD(thread_CU_data_in_V_last_V_0_state_cmp_full);
    sensitive << ( CU_data_in_V_last_V_0_state );

    SC_METHOD(thread_CU_data_in_V_last_V_0_vld_in);
    sensitive << ( CU_data_in_TVALID );

    SC_METHOD(thread_CU_data_in_V_last_V_0_vld_out);
    sensitive << ( CU_data_in_V_last_V_0_state );

    SC_METHOD(thread_CU_data_in_V_user_V_0_ack_in);
    sensitive << ( CU_data_in_V_user_V_0_state );

    SC_METHOD(thread_CU_data_in_V_user_V_0_ack_out);
    sensitive << ( CU_data_in_V_data_V_0_vld_out );
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_CU_data_in_V_user_V_0_data_out);
    sensitive << ( CU_data_in_V_user_V_0_payload_A );
    sensitive << ( CU_data_in_V_user_V_0_payload_B );
    sensitive << ( CU_data_in_V_user_V_0_sel );

    SC_METHOD(thread_CU_data_in_V_user_V_0_load_A);
    sensitive << ( CU_data_in_V_user_V_0_sel_wr );
    sensitive << ( CU_data_in_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_CU_data_in_V_user_V_0_load_B);
    sensitive << ( CU_data_in_V_user_V_0_sel_wr );
    sensitive << ( CU_data_in_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_CU_data_in_V_user_V_0_sel);
    sensitive << ( CU_data_in_V_user_V_0_sel_rd );

    SC_METHOD(thread_CU_data_in_V_user_V_0_state_cmp_full);
    sensitive << ( CU_data_in_V_user_V_0_state );

    SC_METHOD(thread_CU_data_in_V_user_V_0_vld_in);
    sensitive << ( CU_data_in_TVALID );

    SC_METHOD(thread_CU_data_in_V_user_V_0_vld_out);
    sensitive << ( CU_data_in_V_user_V_0_state );

    SC_METHOD(thread_ap_CS_iter0_fsm_state1);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter1_fsm_state2);
    sensitive << ( ap_CS_iter1_fsm );

    SC_METHOD(thread_ap_CS_iter2_fsm_state3);
    sensitive << ( ap_CS_iter2_fsm );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( CU_data_in_V_data_V_0_vld_out );
    sensitive << ( state_V );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( control_data_out_V_data_V_1_ack_in );
    sensitive << ( user_data_out_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( ap_predicate_op43_write_state2 );
    sensitive << ( ap_predicate_op44_write_state2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( ap_predicate_op46_write_state2 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( control_data_out_V_data_V_1_ack_in );
    sensitive << ( user_data_out_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op76_write_state3 );
    sensitive << ( ap_predicate_op78_write_state3 );
    sensitive << ( ap_predicate_op82_write_state3 );
    sensitive << ( ap_predicate_op86_write_state3 );
    sensitive << ( ap_predicate_op88_write_state3 );
    sensitive << ( ap_predicate_op94_write_state3 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );

    SC_METHOD(thread_ap_condition_1031);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_ap_condition_931);
    sensitive << ( CU_data_in_V_data_V_0_vld_out );
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_predicate_op41_write_state2);
    sensitive << ( state_V_load_reg_268 );
    sensitive << ( first_read_load_reg_273 );
    sensitive << ( tmp_last_V_2_reg_286 );

    SC_METHOD(thread_ap_predicate_op42_write_state2);
    sensitive << ( state_V_load_reg_268 );
    sensitive << ( first_read_load_reg_273 );
    sensitive << ( tmp_last_V_2_reg_286 );

    SC_METHOD(thread_ap_predicate_op43_write_state2);
    sensitive << ( state_V_load_reg_268 );
    sensitive << ( first_read_load_reg_273 );
    sensitive << ( icmp_ln879_reg_291 );

    SC_METHOD(thread_ap_predicate_op44_write_state2);
    sensitive << ( state_V_load_reg_268 );
    sensitive << ( tmp_last_V_1_reg_300 );

    SC_METHOD(thread_ap_predicate_op45_write_state2);
    sensitive << ( state_V_load_reg_268 );
    sensitive << ( tmp_last_V_1_reg_300 );

    SC_METHOD(thread_ap_predicate_op46_write_state2);
    sensitive << ( state_V_load_reg_268 );
    sensitive << ( p_Result_s_reg_314 );

    SC_METHOD(thread_ap_predicate_op76_write_state3);
    sensitive << ( state_V_load_reg_268_pp0_iter1_reg );
    sensitive << ( first_read_load_reg_273_pp0_iter1_reg );
    sensitive << ( tmp_last_V_2_reg_286_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op78_write_state3);
    sensitive << ( state_V_load_reg_268_pp0_iter1_reg );
    sensitive << ( first_read_load_reg_273_pp0_iter1_reg );
    sensitive << ( tmp_last_V_2_reg_286_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op82_write_state3);
    sensitive << ( state_V_load_reg_268_pp0_iter1_reg );
    sensitive << ( first_read_load_reg_273_pp0_iter1_reg );
    sensitive << ( icmp_ln879_reg_291_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op86_write_state3);
    sensitive << ( state_V_load_reg_268_pp0_iter1_reg );
    sensitive << ( tmp_last_V_1_reg_300_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op88_write_state3);
    sensitive << ( state_V_load_reg_268_pp0_iter1_reg );
    sensitive << ( tmp_last_V_1_reg_300_pp0_iter1_reg );

    SC_METHOD(thread_ap_predicate_op94_write_state3);
    sensitive << ( state_V_load_reg_268_pp0_iter1_reg );
    sensitive << ( p_Result_s_reg_314_pp0_iter1_reg );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_control_data_out_TDATA);
    sensitive << ( control_data_out_V_data_V_1_data_out );

    SC_METHOD(thread_control_data_out_TDATA_blk_n);
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( state_V_load_reg_268 );
    sensitive << ( first_read_load_reg_273 );
    sensitive << ( icmp_ln879_reg_291 );
    sensitive << ( state_V_load_reg_268_pp0_iter1_reg );
    sensitive << ( first_read_load_reg_273_pp0_iter1_reg );
    sensitive << ( icmp_ln879_reg_291_pp0_iter1_reg );
    sensitive << ( tmp_last_V_2_reg_286 );
    sensitive << ( tmp_last_V_2_reg_286_pp0_iter1_reg );

    SC_METHOD(thread_control_data_out_TKEEP);
    sensitive << ( control_data_out_V_keep_V_1_data_out );

    SC_METHOD(thread_control_data_out_TLAST);
    sensitive << ( control_data_out_V_last_V_1_data_out );

    SC_METHOD(thread_control_data_out_TUSER);
    sensitive << ( control_data_out_V_user_V_1_data_out );

    SC_METHOD(thread_control_data_out_TVALID);
    sensitive << ( control_data_out_V_last_V_1_state );

    SC_METHOD(thread_control_data_out_V_data_V_1_ack_in);
    sensitive << ( control_data_out_V_data_V_1_state );

    SC_METHOD(thread_control_data_out_V_data_V_1_ack_out);
    sensitive << ( control_data_out_TREADY );

    SC_METHOD(thread_control_data_out_V_data_V_1_data_out);
    sensitive << ( control_data_out_V_data_V_1_payload_A );
    sensitive << ( control_data_out_V_data_V_1_payload_B );
    sensitive << ( control_data_out_V_data_V_1_sel );

    SC_METHOD(thread_control_data_out_V_data_V_1_load_A);
    sensitive << ( control_data_out_V_data_V_1_sel_wr );
    sensitive << ( control_data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_control_data_out_V_data_V_1_load_B);
    sensitive << ( control_data_out_V_data_V_1_sel_wr );
    sensitive << ( control_data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_control_data_out_V_data_V_1_sel);
    sensitive << ( control_data_out_V_data_V_1_sel_rd );

    SC_METHOD(thread_control_data_out_V_data_V_1_state_cmp_full);
    sensitive << ( control_data_out_V_data_V_1_state );

    SC_METHOD(thread_control_data_out_V_data_V_1_vld_in);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( ap_predicate_op43_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_control_data_out_V_data_V_1_vld_out);
    sensitive << ( control_data_out_V_data_V_1_state );

    SC_METHOD(thread_control_data_out_V_keep_V_1_ack_in);
    sensitive << ( control_data_out_V_keep_V_1_state );

    SC_METHOD(thread_control_data_out_V_keep_V_1_ack_out);
    sensitive << ( control_data_out_TREADY );

    SC_METHOD(thread_control_data_out_V_keep_V_1_data_out);
    sensitive << ( control_data_out_V_keep_V_1_payload_A );
    sensitive << ( control_data_out_V_keep_V_1_payload_B );
    sensitive << ( control_data_out_V_keep_V_1_sel );

    SC_METHOD(thread_control_data_out_V_keep_V_1_load_A);
    sensitive << ( control_data_out_V_keep_V_1_sel_wr );
    sensitive << ( control_data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_control_data_out_V_keep_V_1_load_B);
    sensitive << ( control_data_out_V_keep_V_1_sel_wr );
    sensitive << ( control_data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_control_data_out_V_keep_V_1_sel);
    sensitive << ( control_data_out_V_keep_V_1_sel_rd );

    SC_METHOD(thread_control_data_out_V_keep_V_1_state_cmp_full);
    sensitive << ( control_data_out_V_keep_V_1_state );

    SC_METHOD(thread_control_data_out_V_keep_V_1_vld_in);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( ap_predicate_op43_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_control_data_out_V_keep_V_1_vld_out);
    sensitive << ( control_data_out_V_keep_V_1_state );

    SC_METHOD(thread_control_data_out_V_last_V_1_ack_in);
    sensitive << ( control_data_out_V_last_V_1_state );

    SC_METHOD(thread_control_data_out_V_last_V_1_ack_out);
    sensitive << ( control_data_out_TREADY );

    SC_METHOD(thread_control_data_out_V_last_V_1_data_in);
    sensitive << ( tmp_last_V_2_reg_286 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( ap_predicate_op43_write_state2 );
    sensitive << ( ap_condition_1031 );

    SC_METHOD(thread_control_data_out_V_last_V_1_data_out);
    sensitive << ( control_data_out_V_last_V_1_payload_A );
    sensitive << ( control_data_out_V_last_V_1_payload_B );
    sensitive << ( control_data_out_V_last_V_1_sel );

    SC_METHOD(thread_control_data_out_V_last_V_1_load_A);
    sensitive << ( control_data_out_V_last_V_1_sel_wr );
    sensitive << ( control_data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_control_data_out_V_last_V_1_load_B);
    sensitive << ( control_data_out_V_last_V_1_sel_wr );
    sensitive << ( control_data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_control_data_out_V_last_V_1_sel);
    sensitive << ( control_data_out_V_last_V_1_sel_rd );

    SC_METHOD(thread_control_data_out_V_last_V_1_state_cmp_full);
    sensitive << ( control_data_out_V_last_V_1_state );

    SC_METHOD(thread_control_data_out_V_last_V_1_vld_in);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( ap_predicate_op43_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_control_data_out_V_last_V_1_vld_out);
    sensitive << ( control_data_out_V_last_V_1_state );

    SC_METHOD(thread_control_data_out_V_user_V_1_ack_in);
    sensitive << ( control_data_out_V_user_V_1_state );

    SC_METHOD(thread_control_data_out_V_user_V_1_ack_out);
    sensitive << ( control_data_out_TREADY );

    SC_METHOD(thread_control_data_out_V_user_V_1_data_out);
    sensitive << ( control_data_out_V_user_V_1_payload_A );
    sensitive << ( control_data_out_V_user_V_1_payload_B );
    sensitive << ( control_data_out_V_user_V_1_sel );

    SC_METHOD(thread_control_data_out_V_user_V_1_load_A);
    sensitive << ( control_data_out_V_user_V_1_sel_wr );
    sensitive << ( control_data_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_control_data_out_V_user_V_1_load_B);
    sensitive << ( control_data_out_V_user_V_1_sel_wr );
    sensitive << ( control_data_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_control_data_out_V_user_V_1_sel);
    sensitive << ( control_data_out_V_user_V_1_sel_rd );

    SC_METHOD(thread_control_data_out_V_user_V_1_state_cmp_full);
    sensitive << ( control_data_out_V_user_V_1_state );

    SC_METHOD(thread_control_data_out_V_user_V_1_vld_in);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_predicate_op41_write_state2 );
    sensitive << ( ap_predicate_op42_write_state2 );
    sensitive << ( ap_predicate_op43_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_control_data_out_V_user_V_1_vld_out);
    sensitive << ( control_data_out_V_user_V_1_state );

    SC_METHOD(thread_ecpri_demux_eth_state_out_V);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( state_V_load_reg_268_pp0_iter1_reg );

    SC_METHOD(thread_first_read_load_load_fu_210_p1);
    sensitive << ( first_read );
    sensitive << ( ap_CS_iter0_fsm_state1 );

    SC_METHOD(thread_grp_fu_160_p1);
    sensitive << ( CU_data_in_V_last_V_0_data_out );

    SC_METHOD(thread_icmp_ln879_fu_230_p2);
    sensitive << ( CU_data_in_V_data_V_0_vld_out );
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( first_read_load_load_fu_210_p1 );
    sensitive << ( section_type_V_fu_220_p4 );

    SC_METHOD(thread_msg_type_out_V);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( msg_type_V );
    sensitive << ( ap_CS_iter2_fsm_state3 );

    SC_METHOD(thread_p_Result_s_fu_236_p4);
    sensitive << ( CU_data_in_V_data_V_0_data_out );

    SC_METHOD(thread_section_type_V_fu_220_p4);
    sensitive << ( CU_data_in_V_data_V_0_data_out );

    SC_METHOD(thread_user_data_out_TDATA);
    sensitive << ( user_data_out_V_data_V_1_data_out );

    SC_METHOD(thread_user_data_out_TDATA_blk_n);
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( state_V_load_reg_268 );
    sensitive << ( state_V_load_reg_268_pp0_iter1_reg );
    sensitive << ( p_Result_s_reg_314 );
    sensitive << ( p_Result_s_reg_314_pp0_iter1_reg );
    sensitive << ( tmp_last_V_1_reg_300 );
    sensitive << ( tmp_last_V_1_reg_300_pp0_iter1_reg );

    SC_METHOD(thread_user_data_out_TKEEP);
    sensitive << ( user_data_out_V_keep_V_1_data_out );

    SC_METHOD(thread_user_data_out_TLAST);
    sensitive << ( user_data_out_V_last_V_1_data_out );

    SC_METHOD(thread_user_data_out_TUSER);
    sensitive << ( user_data_out_V_user_V_1_data_out );

    SC_METHOD(thread_user_data_out_TVALID);
    sensitive << ( user_data_out_V_last_V_1_state );

    SC_METHOD(thread_user_data_out_V_data_V_1_ack_in);
    sensitive << ( user_data_out_V_data_V_1_state );

    SC_METHOD(thread_user_data_out_V_data_V_1_ack_out);
    sensitive << ( user_data_out_TREADY );

    SC_METHOD(thread_user_data_out_V_data_V_1_data_out);
    sensitive << ( user_data_out_V_data_V_1_payload_A );
    sensitive << ( user_data_out_V_data_V_1_payload_B );
    sensitive << ( user_data_out_V_data_V_1_sel );

    SC_METHOD(thread_user_data_out_V_data_V_1_load_A);
    sensitive << ( user_data_out_V_data_V_1_sel_wr );
    sensitive << ( user_data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_user_data_out_V_data_V_1_load_B);
    sensitive << ( user_data_out_V_data_V_1_sel_wr );
    sensitive << ( user_data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_user_data_out_V_data_V_1_sel);
    sensitive << ( user_data_out_V_data_V_1_sel_rd );

    SC_METHOD(thread_user_data_out_V_data_V_1_state_cmp_full);
    sensitive << ( user_data_out_V_data_V_1_state );

    SC_METHOD(thread_user_data_out_V_data_V_1_vld_in);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_predicate_op44_write_state2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( ap_predicate_op46_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_user_data_out_V_data_V_1_vld_out);
    sensitive << ( user_data_out_V_data_V_1_state );

    SC_METHOD(thread_user_data_out_V_keep_V_1_ack_in);
    sensitive << ( user_data_out_V_keep_V_1_state );

    SC_METHOD(thread_user_data_out_V_keep_V_1_ack_out);
    sensitive << ( user_data_out_TREADY );

    SC_METHOD(thread_user_data_out_V_keep_V_1_data_out);
    sensitive << ( user_data_out_V_keep_V_1_payload_A );
    sensitive << ( user_data_out_V_keep_V_1_payload_B );
    sensitive << ( user_data_out_V_keep_V_1_sel );

    SC_METHOD(thread_user_data_out_V_keep_V_1_load_A);
    sensitive << ( user_data_out_V_keep_V_1_sel_wr );
    sensitive << ( user_data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_user_data_out_V_keep_V_1_load_B);
    sensitive << ( user_data_out_V_keep_V_1_sel_wr );
    sensitive << ( user_data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_user_data_out_V_keep_V_1_sel);
    sensitive << ( user_data_out_V_keep_V_1_sel_rd );

    SC_METHOD(thread_user_data_out_V_keep_V_1_state_cmp_full);
    sensitive << ( user_data_out_V_keep_V_1_state );

    SC_METHOD(thread_user_data_out_V_keep_V_1_vld_in);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_predicate_op44_write_state2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( ap_predicate_op46_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_user_data_out_V_keep_V_1_vld_out);
    sensitive << ( user_data_out_V_keep_V_1_state );

    SC_METHOD(thread_user_data_out_V_last_V_1_ack_in);
    sensitive << ( user_data_out_V_last_V_1_state );

    SC_METHOD(thread_user_data_out_V_last_V_1_ack_out);
    sensitive << ( user_data_out_TREADY );

    SC_METHOD(thread_user_data_out_V_last_V_1_data_in);
    sensitive << ( ap_predicate_op44_write_state2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( ap_predicate_op46_write_state2 );
    sensitive << ( tmp_last_V_reg_309 );
    sensitive << ( ap_condition_1031 );

    SC_METHOD(thread_user_data_out_V_last_V_1_data_out);
    sensitive << ( user_data_out_V_last_V_1_payload_A );
    sensitive << ( user_data_out_V_last_V_1_payload_B );
    sensitive << ( user_data_out_V_last_V_1_sel );

    SC_METHOD(thread_user_data_out_V_last_V_1_load_A);
    sensitive << ( user_data_out_V_last_V_1_sel_wr );
    sensitive << ( user_data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_user_data_out_V_last_V_1_load_B);
    sensitive << ( user_data_out_V_last_V_1_sel_wr );
    sensitive << ( user_data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_user_data_out_V_last_V_1_sel);
    sensitive << ( user_data_out_V_last_V_1_sel_rd );

    SC_METHOD(thread_user_data_out_V_last_V_1_state_cmp_full);
    sensitive << ( user_data_out_V_last_V_1_state );

    SC_METHOD(thread_user_data_out_V_last_V_1_vld_in);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_predicate_op44_write_state2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( ap_predicate_op46_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_user_data_out_V_last_V_1_vld_out);
    sensitive << ( user_data_out_V_last_V_1_state );

    SC_METHOD(thread_user_data_out_V_user_V_1_ack_in);
    sensitive << ( user_data_out_V_user_V_1_state );

    SC_METHOD(thread_user_data_out_V_user_V_1_ack_out);
    sensitive << ( user_data_out_TREADY );

    SC_METHOD(thread_user_data_out_V_user_V_1_data_in);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_predicate_op44_write_state2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( ap_predicate_op46_write_state2 );
    sensitive << ( tmp_user_V_1_reg_295 );
    sensitive << ( tmp_user_V_reg_304 );

    SC_METHOD(thread_user_data_out_V_user_V_1_data_out);
    sensitive << ( user_data_out_V_user_V_1_payload_A );
    sensitive << ( user_data_out_V_user_V_1_payload_B );
    sensitive << ( user_data_out_V_user_V_1_sel );

    SC_METHOD(thread_user_data_out_V_user_V_1_load_A);
    sensitive << ( user_data_out_V_user_V_1_sel_wr );
    sensitive << ( user_data_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_user_data_out_V_user_V_1_load_B);
    sensitive << ( user_data_out_V_user_V_1_sel_wr );
    sensitive << ( user_data_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_user_data_out_V_user_V_1_sel);
    sensitive << ( user_data_out_V_user_V_1_sel_rd );

    SC_METHOD(thread_user_data_out_V_user_V_1_state_cmp_full);
    sensitive << ( user_data_out_V_user_V_1_state );

    SC_METHOD(thread_user_data_out_V_user_V_1_vld_in);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_predicate_op44_write_state2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( ap_predicate_op46_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_user_data_out_V_user_V_1_vld_out);
    sensitive << ( user_data_out_V_user_V_1_state );

    SC_METHOD(thread_ap_NS_iter0_fsm);
    sensitive << ( CU_data_in_V_data_V_0_vld_out );
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_NS_iter1_fsm);
    sensitive << ( CU_data_in_V_data_V_0_vld_out );
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_NS_iter2_fsm);
    sensitive << ( control_data_out_TREADY );
    sensitive << ( control_data_out_V_data_V_1_state );
    sensitive << ( control_data_out_V_user_V_1_state );
    sensitive << ( control_data_out_V_keep_V_1_state );
    sensitive << ( control_data_out_V_last_V_1_state );
    sensitive << ( user_data_out_TREADY );
    sensitive << ( user_data_out_V_data_V_1_state );
    sensitive << ( user_data_out_V_user_V_1_state );
    sensitive << ( user_data_out_V_keep_V_1_state );
    sensitive << ( user_data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_CS_iter2_fsm_state3 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    CU_data_in_V_data_V_0_sel_rd = SC_LOGIC_0;
    CU_data_in_V_data_V_0_sel_wr = SC_LOGIC_0;
    CU_data_in_V_data_V_0_state = "00";
    CU_data_in_V_user_V_0_sel_rd = SC_LOGIC_0;
    CU_data_in_V_user_V_0_sel_wr = SC_LOGIC_0;
    CU_data_in_V_user_V_0_state = "00";
    CU_data_in_V_keep_V_0_sel_rd = SC_LOGIC_0;
    CU_data_in_V_keep_V_0_sel_wr = SC_LOGIC_0;
    CU_data_in_V_keep_V_0_state = "00";
    CU_data_in_V_last_V_0_sel_rd = SC_LOGIC_0;
    CU_data_in_V_last_V_0_sel_wr = SC_LOGIC_0;
    CU_data_in_V_last_V_0_state = "00";
    control_data_out_V_data_V_1_sel_rd = SC_LOGIC_0;
    control_data_out_V_data_V_1_sel_wr = SC_LOGIC_0;
    control_data_out_V_data_V_1_state = "00";
    control_data_out_V_user_V_1_sel_rd = SC_LOGIC_0;
    control_data_out_V_user_V_1_sel_wr = SC_LOGIC_0;
    control_data_out_V_user_V_1_state = "00";
    control_data_out_V_keep_V_1_sel_rd = SC_LOGIC_0;
    control_data_out_V_keep_V_1_sel_wr = SC_LOGIC_0;
    control_data_out_V_keep_V_1_state = "00";
    control_data_out_V_last_V_1_sel_rd = SC_LOGIC_0;
    control_data_out_V_last_V_1_sel_wr = SC_LOGIC_0;
    control_data_out_V_last_V_1_state = "00";
    user_data_out_V_data_V_1_sel_rd = SC_LOGIC_0;
    user_data_out_V_data_V_1_sel_wr = SC_LOGIC_0;
    user_data_out_V_data_V_1_state = "00";
    user_data_out_V_user_V_1_sel_rd = SC_LOGIC_0;
    user_data_out_V_user_V_1_sel_wr = SC_LOGIC_0;
    user_data_out_V_user_V_1_state = "00";
    user_data_out_V_keep_V_1_sel_rd = SC_LOGIC_0;
    user_data_out_V_keep_V_1_sel_wr = SC_LOGIC_0;
    user_data_out_V_keep_V_1_state = "00";
    user_data_out_V_last_V_1_sel_rd = SC_LOGIC_0;
    user_data_out_V_last_V_1_sel_wr = SC_LOGIC_0;
    user_data_out_V_last_V_1_state = "00";
    state_V = "00";
    msg_type_V = "00000000";
    first_read = "0";
    ap_CS_iter0_fsm = "1";
    ap_CS_iter1_fsm = "01";
    ap_CS_iter2_fsm = "01";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ecpri_demux_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, CU_data_in_TDATA, "(port)CU_data_in_TDATA");
    sc_trace(mVcdFile, CU_data_in_TVALID, "(port)CU_data_in_TVALID");
    sc_trace(mVcdFile, CU_data_in_TREADY, "(port)CU_data_in_TREADY");
    sc_trace(mVcdFile, CU_data_in_TUSER, "(port)CU_data_in_TUSER");
    sc_trace(mVcdFile, CU_data_in_TKEEP, "(port)CU_data_in_TKEEP");
    sc_trace(mVcdFile, CU_data_in_TLAST, "(port)CU_data_in_TLAST");
    sc_trace(mVcdFile, control_data_out_TDATA, "(port)control_data_out_TDATA");
    sc_trace(mVcdFile, control_data_out_TVALID, "(port)control_data_out_TVALID");
    sc_trace(mVcdFile, control_data_out_TREADY, "(port)control_data_out_TREADY");
    sc_trace(mVcdFile, control_data_out_TUSER, "(port)control_data_out_TUSER");
    sc_trace(mVcdFile, control_data_out_TKEEP, "(port)control_data_out_TKEEP");
    sc_trace(mVcdFile, control_data_out_TLAST, "(port)control_data_out_TLAST");
    sc_trace(mVcdFile, user_data_out_TDATA, "(port)user_data_out_TDATA");
    sc_trace(mVcdFile, user_data_out_TVALID, "(port)user_data_out_TVALID");
    sc_trace(mVcdFile, user_data_out_TREADY, "(port)user_data_out_TREADY");
    sc_trace(mVcdFile, user_data_out_TUSER, "(port)user_data_out_TUSER");
    sc_trace(mVcdFile, user_data_out_TKEEP, "(port)user_data_out_TKEEP");
    sc_trace(mVcdFile, user_data_out_TLAST, "(port)user_data_out_TLAST");
    sc_trace(mVcdFile, ecpri_demux_eth_state_out_V, "(port)ecpri_demux_eth_state_out_V");
    sc_trace(mVcdFile, msg_type_out_V, "(port)msg_type_out_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_data_out, "CU_data_in_V_data_V_0_data_out");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_vld_in, "CU_data_in_V_data_V_0_vld_in");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_vld_out, "CU_data_in_V_data_V_0_vld_out");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_ack_in, "CU_data_in_V_data_V_0_ack_in");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_ack_out, "CU_data_in_V_data_V_0_ack_out");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_payload_A, "CU_data_in_V_data_V_0_payload_A");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_payload_B, "CU_data_in_V_data_V_0_payload_B");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_sel_rd, "CU_data_in_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_sel_wr, "CU_data_in_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_sel, "CU_data_in_V_data_V_0_sel");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_load_A, "CU_data_in_V_data_V_0_load_A");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_load_B, "CU_data_in_V_data_V_0_load_B");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_state, "CU_data_in_V_data_V_0_state");
    sc_trace(mVcdFile, CU_data_in_V_data_V_0_state_cmp_full, "CU_data_in_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_data_out, "CU_data_in_V_user_V_0_data_out");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_vld_in, "CU_data_in_V_user_V_0_vld_in");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_vld_out, "CU_data_in_V_user_V_0_vld_out");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_ack_in, "CU_data_in_V_user_V_0_ack_in");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_ack_out, "CU_data_in_V_user_V_0_ack_out");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_payload_A, "CU_data_in_V_user_V_0_payload_A");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_payload_B, "CU_data_in_V_user_V_0_payload_B");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_sel_rd, "CU_data_in_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_sel_wr, "CU_data_in_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_sel, "CU_data_in_V_user_V_0_sel");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_load_A, "CU_data_in_V_user_V_0_load_A");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_load_B, "CU_data_in_V_user_V_0_load_B");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_state, "CU_data_in_V_user_V_0_state");
    sc_trace(mVcdFile, CU_data_in_V_user_V_0_state_cmp_full, "CU_data_in_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_data_out, "CU_data_in_V_keep_V_0_data_out");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_vld_in, "CU_data_in_V_keep_V_0_vld_in");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_vld_out, "CU_data_in_V_keep_V_0_vld_out");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_ack_in, "CU_data_in_V_keep_V_0_ack_in");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_ack_out, "CU_data_in_V_keep_V_0_ack_out");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_payload_A, "CU_data_in_V_keep_V_0_payload_A");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_payload_B, "CU_data_in_V_keep_V_0_payload_B");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_sel_rd, "CU_data_in_V_keep_V_0_sel_rd");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_sel_wr, "CU_data_in_V_keep_V_0_sel_wr");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_sel, "CU_data_in_V_keep_V_0_sel");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_load_A, "CU_data_in_V_keep_V_0_load_A");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_load_B, "CU_data_in_V_keep_V_0_load_B");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_state, "CU_data_in_V_keep_V_0_state");
    sc_trace(mVcdFile, CU_data_in_V_keep_V_0_state_cmp_full, "CU_data_in_V_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_data_out, "CU_data_in_V_last_V_0_data_out");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_vld_in, "CU_data_in_V_last_V_0_vld_in");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_vld_out, "CU_data_in_V_last_V_0_vld_out");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_ack_in, "CU_data_in_V_last_V_0_ack_in");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_ack_out, "CU_data_in_V_last_V_0_ack_out");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_payload_A, "CU_data_in_V_last_V_0_payload_A");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_payload_B, "CU_data_in_V_last_V_0_payload_B");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_sel_rd, "CU_data_in_V_last_V_0_sel_rd");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_sel_wr, "CU_data_in_V_last_V_0_sel_wr");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_sel, "CU_data_in_V_last_V_0_sel");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_load_A, "CU_data_in_V_last_V_0_load_A");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_load_B, "CU_data_in_V_last_V_0_load_B");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_state, "CU_data_in_V_last_V_0_state");
    sc_trace(mVcdFile, CU_data_in_V_last_V_0_state_cmp_full, "CU_data_in_V_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_data_out, "control_data_out_V_data_V_1_data_out");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_vld_in, "control_data_out_V_data_V_1_vld_in");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_vld_out, "control_data_out_V_data_V_1_vld_out");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_ack_in, "control_data_out_V_data_V_1_ack_in");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_ack_out, "control_data_out_V_data_V_1_ack_out");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_payload_A, "control_data_out_V_data_V_1_payload_A");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_payload_B, "control_data_out_V_data_V_1_payload_B");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_sel_rd, "control_data_out_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_sel_wr, "control_data_out_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_sel, "control_data_out_V_data_V_1_sel");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_load_A, "control_data_out_V_data_V_1_load_A");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_load_B, "control_data_out_V_data_V_1_load_B");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_state, "control_data_out_V_data_V_1_state");
    sc_trace(mVcdFile, control_data_out_V_data_V_1_state_cmp_full, "control_data_out_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_data_out, "control_data_out_V_user_V_1_data_out");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_vld_in, "control_data_out_V_user_V_1_vld_in");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_vld_out, "control_data_out_V_user_V_1_vld_out");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_ack_in, "control_data_out_V_user_V_1_ack_in");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_ack_out, "control_data_out_V_user_V_1_ack_out");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_payload_A, "control_data_out_V_user_V_1_payload_A");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_payload_B, "control_data_out_V_user_V_1_payload_B");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_sel_rd, "control_data_out_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_sel_wr, "control_data_out_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_sel, "control_data_out_V_user_V_1_sel");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_load_A, "control_data_out_V_user_V_1_load_A");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_load_B, "control_data_out_V_user_V_1_load_B");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_state, "control_data_out_V_user_V_1_state");
    sc_trace(mVcdFile, control_data_out_V_user_V_1_state_cmp_full, "control_data_out_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_data_out, "control_data_out_V_keep_V_1_data_out");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_vld_in, "control_data_out_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_vld_out, "control_data_out_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_ack_in, "control_data_out_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_ack_out, "control_data_out_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_payload_A, "control_data_out_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_payload_B, "control_data_out_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_sel_rd, "control_data_out_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_sel_wr, "control_data_out_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_sel, "control_data_out_V_keep_V_1_sel");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_load_A, "control_data_out_V_keep_V_1_load_A");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_load_B, "control_data_out_V_keep_V_1_load_B");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_state, "control_data_out_V_keep_V_1_state");
    sc_trace(mVcdFile, control_data_out_V_keep_V_1_state_cmp_full, "control_data_out_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_data_in, "control_data_out_V_last_V_1_data_in");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_data_out, "control_data_out_V_last_V_1_data_out");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_vld_in, "control_data_out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_vld_out, "control_data_out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_ack_in, "control_data_out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_ack_out, "control_data_out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_payload_A, "control_data_out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_payload_B, "control_data_out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_sel_rd, "control_data_out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_sel_wr, "control_data_out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_sel, "control_data_out_V_last_V_1_sel");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_load_A, "control_data_out_V_last_V_1_load_A");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_load_B, "control_data_out_V_last_V_1_load_B");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_state, "control_data_out_V_last_V_1_state");
    sc_trace(mVcdFile, control_data_out_V_last_V_1_state_cmp_full, "control_data_out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_data_out, "user_data_out_V_data_V_1_data_out");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_vld_in, "user_data_out_V_data_V_1_vld_in");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_vld_out, "user_data_out_V_data_V_1_vld_out");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_ack_in, "user_data_out_V_data_V_1_ack_in");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_ack_out, "user_data_out_V_data_V_1_ack_out");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_payload_A, "user_data_out_V_data_V_1_payload_A");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_payload_B, "user_data_out_V_data_V_1_payload_B");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_sel_rd, "user_data_out_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_sel_wr, "user_data_out_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_sel, "user_data_out_V_data_V_1_sel");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_load_A, "user_data_out_V_data_V_1_load_A");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_load_B, "user_data_out_V_data_V_1_load_B");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_state, "user_data_out_V_data_V_1_state");
    sc_trace(mVcdFile, user_data_out_V_data_V_1_state_cmp_full, "user_data_out_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_data_in, "user_data_out_V_user_V_1_data_in");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_data_out, "user_data_out_V_user_V_1_data_out");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_vld_in, "user_data_out_V_user_V_1_vld_in");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_vld_out, "user_data_out_V_user_V_1_vld_out");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_ack_in, "user_data_out_V_user_V_1_ack_in");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_ack_out, "user_data_out_V_user_V_1_ack_out");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_payload_A, "user_data_out_V_user_V_1_payload_A");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_payload_B, "user_data_out_V_user_V_1_payload_B");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_sel_rd, "user_data_out_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_sel_wr, "user_data_out_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_sel, "user_data_out_V_user_V_1_sel");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_load_A, "user_data_out_V_user_V_1_load_A");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_load_B, "user_data_out_V_user_V_1_load_B");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_state, "user_data_out_V_user_V_1_state");
    sc_trace(mVcdFile, user_data_out_V_user_V_1_state_cmp_full, "user_data_out_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_data_out, "user_data_out_V_keep_V_1_data_out");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_vld_in, "user_data_out_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_vld_out, "user_data_out_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_ack_in, "user_data_out_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_ack_out, "user_data_out_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_payload_A, "user_data_out_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_payload_B, "user_data_out_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_sel_rd, "user_data_out_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_sel_wr, "user_data_out_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_sel, "user_data_out_V_keep_V_1_sel");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_load_A, "user_data_out_V_keep_V_1_load_A");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_load_B, "user_data_out_V_keep_V_1_load_B");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_state, "user_data_out_V_keep_V_1_state");
    sc_trace(mVcdFile, user_data_out_V_keep_V_1_state_cmp_full, "user_data_out_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_data_in, "user_data_out_V_last_V_1_data_in");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_data_out, "user_data_out_V_last_V_1_data_out");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_vld_in, "user_data_out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_vld_out, "user_data_out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_ack_in, "user_data_out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_ack_out, "user_data_out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_payload_A, "user_data_out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_payload_B, "user_data_out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_sel_rd, "user_data_out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_sel_wr, "user_data_out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_sel, "user_data_out_V_last_V_1_sel");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_load_A, "user_data_out_V_last_V_1_load_A");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_load_B, "user_data_out_V_last_V_1_load_B");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_state, "user_data_out_V_last_V_1_state");
    sc_trace(mVcdFile, user_data_out_V_last_V_1_state_cmp_full, "user_data_out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, state_V, "state_V");
    sc_trace(mVcdFile, msg_type_V, "msg_type_V");
    sc_trace(mVcdFile, first_read, "first_read");
    sc_trace(mVcdFile, CU_data_in_TDATA_blk_n, "CU_data_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_iter0_fsm, "ap_CS_iter0_fsm");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state1, "ap_CS_iter0_fsm_state1");
    sc_trace(mVcdFile, ap_CS_iter1_fsm, "ap_CS_iter1_fsm");
    sc_trace(mVcdFile, ap_CS_iter1_fsm_state2, "ap_CS_iter1_fsm_state2");
    sc_trace(mVcdFile, ap_CS_iter2_fsm, "ap_CS_iter2_fsm");
    sc_trace(mVcdFile, ap_CS_iter2_fsm_state3, "ap_CS_iter2_fsm_state3");
    sc_trace(mVcdFile, control_data_out_TDATA_blk_n, "control_data_out_TDATA_blk_n");
    sc_trace(mVcdFile, state_V_load_reg_268, "state_V_load_reg_268");
    sc_trace(mVcdFile, first_read_load_reg_273, "first_read_load_reg_273");
    sc_trace(mVcdFile, icmp_ln879_reg_291, "icmp_ln879_reg_291");
    sc_trace(mVcdFile, state_V_load_reg_268_pp0_iter1_reg, "state_V_load_reg_268_pp0_iter1_reg");
    sc_trace(mVcdFile, first_read_load_reg_273_pp0_iter1_reg, "first_read_load_reg_273_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln879_reg_291_pp0_iter1_reg, "icmp_ln879_reg_291_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_last_V_2_reg_286, "tmp_last_V_2_reg_286");
    sc_trace(mVcdFile, tmp_last_V_2_reg_286_pp0_iter1_reg, "tmp_last_V_2_reg_286_pp0_iter1_reg");
    sc_trace(mVcdFile, user_data_out_TDATA_blk_n, "user_data_out_TDATA_blk_n");
    sc_trace(mVcdFile, p_Result_s_reg_314, "p_Result_s_reg_314");
    sc_trace(mVcdFile, p_Result_s_reg_314_pp0_iter1_reg, "p_Result_s_reg_314_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_last_V_1_reg_300, "tmp_last_V_1_reg_300");
    sc_trace(mVcdFile, tmp_last_V_1_reg_300_pp0_iter1_reg, "tmp_last_V_1_reg_300_pp0_iter1_reg");
    sc_trace(mVcdFile, reg_194, "reg_194");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_predicate_op41_write_state2, "ap_predicate_op41_write_state2");
    sc_trace(mVcdFile, ap_predicate_op42_write_state2, "ap_predicate_op42_write_state2");
    sc_trace(mVcdFile, ap_predicate_op43_write_state2, "ap_predicate_op43_write_state2");
    sc_trace(mVcdFile, ap_predicate_op44_write_state2, "ap_predicate_op44_write_state2");
    sc_trace(mVcdFile, ap_predicate_op45_write_state2, "ap_predicate_op45_write_state2");
    sc_trace(mVcdFile, ap_predicate_op46_write_state2, "ap_predicate_op46_write_state2");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_predicate_op76_write_state3, "ap_predicate_op76_write_state3");
    sc_trace(mVcdFile, ap_predicate_op78_write_state3, "ap_predicate_op78_write_state3");
    sc_trace(mVcdFile, ap_predicate_op82_write_state3, "ap_predicate_op82_write_state3");
    sc_trace(mVcdFile, ap_predicate_op86_write_state3, "ap_predicate_op86_write_state3");
    sc_trace(mVcdFile, ap_predicate_op88_write_state3, "ap_predicate_op88_write_state3");
    sc_trace(mVcdFile, ap_predicate_op94_write_state3, "ap_predicate_op94_write_state3");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, reg_200, "reg_200");
    sc_trace(mVcdFile, first_read_load_load_fu_210_p1, "first_read_load_load_fu_210_p1");
    sc_trace(mVcdFile, grp_fu_160_p1, "grp_fu_160_p1");
    sc_trace(mVcdFile, tmp_user_V_2_reg_281, "tmp_user_V_2_reg_281");
    sc_trace(mVcdFile, icmp_ln879_fu_230_p2, "icmp_ln879_fu_230_p2");
    sc_trace(mVcdFile, tmp_user_V_1_reg_295, "tmp_user_V_1_reg_295");
    sc_trace(mVcdFile, tmp_user_V_reg_304, "tmp_user_V_reg_304");
    sc_trace(mVcdFile, tmp_last_V_reg_309, "tmp_last_V_reg_309");
    sc_trace(mVcdFile, p_Result_s_fu_236_p4, "p_Result_s_fu_236_p4");
    sc_trace(mVcdFile, section_type_V_fu_220_p4, "section_type_V_fu_220_p4");
    sc_trace(mVcdFile, ap_NS_iter0_fsm, "ap_NS_iter0_fsm");
    sc_trace(mVcdFile, ap_NS_iter1_fsm, "ap_NS_iter1_fsm");
    sc_trace(mVcdFile, ap_NS_iter2_fsm, "ap_NS_iter2_fsm");
    sc_trace(mVcdFile, ap_condition_1031, "ap_condition_1031");
    sc_trace(mVcdFile, ap_condition_931, "ap_condition_931");
#endif

    }
    mHdltvinHandle.open("ecpri_demux.hdltvin.dat");
    mHdltvoutHandle.open("ecpri_demux.hdltvout.dat");
}

ecpri_demux::~ecpri_demux() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void ecpri_demux::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_vld_out.read()))) {
            CU_data_in_V_data_V_0_sel_rd =  (sc_logic) (~CU_data_in_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_ack_in.read()))) {
            CU_data_in_V_data_V_0_sel_wr =  (sc_logic) (~CU_data_in_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(CU_data_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(CU_data_in_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            CU_data_in_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(CU_data_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(CU_data_in_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            CU_data_in_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(CU_data_in_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(CU_data_in_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(CU_data_in_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_ack_out.read()))))) {
            CU_data_in_V_data_V_0_state = ap_const_lv2_3;
        } else {
            CU_data_in_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_vld_out.read()))) {
            CU_data_in_V_keep_V_0_sel_rd =  (sc_logic) (~CU_data_in_V_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_ack_in.read()))) {
            CU_data_in_V_keep_V_0_sel_wr =  (sc_logic) (~CU_data_in_V_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, CU_data_in_V_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, CU_data_in_V_keep_V_0_state.read())))) {
            CU_data_in_V_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, CU_data_in_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, CU_data_in_V_keep_V_0_state.read())))) {
            CU_data_in_V_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, CU_data_in_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, CU_data_in_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, CU_data_in_V_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_ack_out.read()))))) {
            CU_data_in_V_keep_V_0_state = ap_const_lv2_3;
        } else {
            CU_data_in_V_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_vld_out.read()))) {
            CU_data_in_V_last_V_0_sel_rd =  (sc_logic) (~CU_data_in_V_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_ack_in.read()))) {
            CU_data_in_V_last_V_0_sel_wr =  (sc_logic) (~CU_data_in_V_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, CU_data_in_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, CU_data_in_V_last_V_0_state.read())))) {
            CU_data_in_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, CU_data_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, CU_data_in_V_last_V_0_state.read())))) {
            CU_data_in_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, CU_data_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, CU_data_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, CU_data_in_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_ack_out.read()))))) {
            CU_data_in_V_last_V_0_state = ap_const_lv2_3;
        } else {
            CU_data_in_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_vld_out.read()))) {
            CU_data_in_V_user_V_0_sel_rd =  (sc_logic) (~CU_data_in_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_ack_in.read()))) {
            CU_data_in_V_user_V_0_sel_wr =  (sc_logic) (~CU_data_in_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        CU_data_in_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, CU_data_in_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, CU_data_in_V_user_V_0_state.read())))) {
            CU_data_in_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, CU_data_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, CU_data_in_V_user_V_0_state.read())))) {
            CU_data_in_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, CU_data_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, CU_data_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, CU_data_in_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_ack_out.read()))))) {
            CU_data_in_V_user_V_0_state = ap_const_lv2_3;
        } else {
            CU_data_in_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter0_fsm = ap_ST_iter0_fsm_state1;
    } else {
        ap_CS_iter0_fsm = ap_NS_iter0_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter1_fsm = ap_ST_iter1_fsm_state0;
    } else {
        ap_CS_iter1_fsm = ap_NS_iter1_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter2_fsm = ap_ST_iter2_fsm_state0;
    } else {
        ap_CS_iter2_fsm = ap_NS_iter2_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_vld_out.read()))) {
            control_data_out_V_data_V_1_sel_rd =  (sc_logic) (~control_data_out_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_ack_in.read()))) {
            control_data_out_V_data_V_1_sel_wr =  (sc_logic) (~control_data_out_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, control_data_out_V_data_V_1_state.read())))) {
            control_data_out_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read())))) {
            control_data_out_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, control_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_ack_out.read()))))) {
            control_data_out_V_data_V_1_state = ap_const_lv2_3;
        } else {
            control_data_out_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_vld_out.read()))) {
            control_data_out_V_keep_V_1_sel_rd =  (sc_logic) (~control_data_out_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_ack_in.read()))) {
            control_data_out_V_keep_V_1_sel_wr =  (sc_logic) (~control_data_out_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, control_data_out_V_keep_V_1_state.read())))) {
            control_data_out_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read())))) {
            control_data_out_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, control_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_ack_out.read()))))) {
            control_data_out_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            control_data_out_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_vld_out.read()))) {
            control_data_out_V_last_V_1_sel_rd =  (sc_logic) (~control_data_out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_ack_in.read()))) {
            control_data_out_V_last_V_1_sel_wr =  (sc_logic) (~control_data_out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, control_data_out_V_last_V_1_state.read())))) {
            control_data_out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read())))) {
            control_data_out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, control_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_ack_out.read()))))) {
            control_data_out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            control_data_out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_vld_out.read()))) {
            control_data_out_V_user_V_1_sel_rd =  (sc_logic) (~control_data_out_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_ack_in.read()))) {
            control_data_out_V_user_V_1_sel_wr =  (sc_logic) (~control_data_out_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        control_data_out_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, control_data_out_V_user_V_1_state.read())))) {
            control_data_out_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read())))) {
            control_data_out_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, control_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_ack_out.read()))))) {
            control_data_out_V_user_V_1_state = ap_const_lv2_3;
        } else {
            control_data_out_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_931.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read())) {
            first_read = ap_const_lv1_1;
        } else if ((esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, first_read_load_load_fu_210_p1.read()))) {
            first_read = ap_const_lv1_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        state_V = ap_const_lv2_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
             esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
             !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && 
             esl_seteq<1,8,8>(ap_const_lv8_0, p_Result_s_fu_236_p4.read()))) {
            state_V = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
                     !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && 
                     esl_seteq<1,1,1>(ap_const_lv1_1, first_read_load_load_fu_210_p1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_230_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
                     !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && 
                     esl_seteq<1,8,8>(p_Result_s_fu_236_p4.read(), ap_const_lv8_2)))) {
            state_V = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
                     !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && 
                     esl_seteq<1,1,1>(ap_const_lv1_1, first_read_load_load_fu_210_p1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_fu_230_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
                     !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && 
                     !esl_seteq<1,8,8>(ap_const_lv8_0, p_Result_s_fu_236_p4.read()) && 
                     !esl_seteq<1,8,8>(p_Result_s_fu_236_p4.read(), ap_const_lv8_2)))) {
            state_V = ap_const_lv2_3;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
                     !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && 
                     esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_160_p1.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
                     !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && 
                     esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_160_p1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, first_read_load_load_fu_210_p1.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
                     !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && 
                     esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_160_p1.read())))) {
            state_V = ap_const_lv2_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_vld_out.read()))) {
            user_data_out_V_data_V_1_sel_rd =  (sc_logic) (~user_data_out_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_ack_in.read()))) {
            user_data_out_V_data_V_1_sel_wr =  (sc_logic) (~user_data_out_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, user_data_out_V_data_V_1_state.read())))) {
            user_data_out_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read())))) {
            user_data_out_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, user_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_ack_out.read()))))) {
            user_data_out_V_data_V_1_state = ap_const_lv2_3;
        } else {
            user_data_out_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_vld_out.read()))) {
            user_data_out_V_keep_V_1_sel_rd =  (sc_logic) (~user_data_out_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_ack_in.read()))) {
            user_data_out_V_keep_V_1_sel_wr =  (sc_logic) (~user_data_out_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, user_data_out_V_keep_V_1_state.read())))) {
            user_data_out_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read())))) {
            user_data_out_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, user_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_ack_out.read()))))) {
            user_data_out_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            user_data_out_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_vld_out.read()))) {
            user_data_out_V_last_V_1_sel_rd =  (sc_logic) (~user_data_out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_ack_in.read()))) {
            user_data_out_V_last_V_1_sel_wr =  (sc_logic) (~user_data_out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, user_data_out_V_last_V_1_state.read())))) {
            user_data_out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read())))) {
            user_data_out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, user_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_ack_out.read()))))) {
            user_data_out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            user_data_out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_vld_out.read()))) {
            user_data_out_V_user_V_1_sel_rd =  (sc_logic) (~user_data_out_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_ack_in.read()))) {
            user_data_out_V_user_V_1_sel_wr =  (sc_logic) (~user_data_out_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        user_data_out_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, user_data_out_V_user_V_1_state.read())))) {
            user_data_out_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read())))) {
            user_data_out_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, user_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_ack_out.read()))))) {
            user_data_out_V_user_V_1_state = ap_const_lv2_3;
        } else {
            user_data_out_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_load_A.read())) {
        CU_data_in_V_data_V_0_payload_A = CU_data_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_load_B.read())) {
        CU_data_in_V_data_V_0_payload_B = CU_data_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_load_A.read())) {
        CU_data_in_V_keep_V_0_payload_A = CU_data_in_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_load_B.read())) {
        CU_data_in_V_keep_V_0_payload_B = CU_data_in_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_load_A.read())) {
        CU_data_in_V_last_V_0_payload_A = CU_data_in_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_load_B.read())) {
        CU_data_in_V_last_V_0_payload_B = CU_data_in_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_load_A.read())) {
        CU_data_in_V_user_V_0_payload_A = CU_data_in_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_load_B.read())) {
        CU_data_in_V_user_V_0_payload_B = CU_data_in_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_load_A.read())) {
        control_data_out_V_data_V_1_payload_A = reg_194.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_load_B.read())) {
        control_data_out_V_data_V_1_payload_B = reg_194.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_load_A.read())) {
        control_data_out_V_keep_V_1_payload_A = reg_200.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_load_B.read())) {
        control_data_out_V_keep_V_1_payload_B = reg_200.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_load_A.read())) {
        control_data_out_V_last_V_1_payload_A = control_data_out_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_load_B.read())) {
        control_data_out_V_last_V_1_payload_B = control_data_out_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_load_A.read())) {
        control_data_out_V_user_V_1_payload_A = tmp_user_V_2_reg_281.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_load_B.read())) {
        control_data_out_V_user_V_1_payload_B = tmp_user_V_2_reg_281.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        first_read_load_reg_273 = first_read.read();
        state_V_load_reg_268 = state_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        first_read_load_reg_273_pp0_iter1_reg = first_read_load_reg_273.read();
        icmp_ln879_reg_291_pp0_iter1_reg = icmp_ln879_reg_291.read();
        p_Result_s_reg_314_pp0_iter1_reg = p_Result_s_reg_314.read();
        state_V_load_reg_268_pp0_iter1_reg = state_V_load_reg_268.read();
        tmp_last_V_1_reg_300_pp0_iter1_reg = tmp_last_V_1_reg_300.read();
        tmp_last_V_2_reg_286_pp0_iter1_reg = tmp_last_V_2_reg_286.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && esl_seteq<1,1,1>(ap_const_lv1_1, first_read_load_load_fu_210_p1.read()))) {
        icmp_ln879_reg_291 = icmp_ln879_fu_230_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, state_V_load_reg_268_pp0_iter1_reg.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
        msg_type_V = p_Result_s_reg_314_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        p_Result_s_reg_314 = CU_data_in_V_data_V_0_data_out.read().range(127, 120);
        tmp_last_V_reg_309 = CU_data_in_V_last_V_0_data_out.read();
        tmp_user_V_reg_304 = CU_data_in_V_user_V_0_data_out.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        reg_194 = CU_data_in_V_data_V_0_data_out.read();
        reg_200 = CU_data_in_V_keep_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        tmp_last_V_1_reg_300 = CU_data_in_V_last_V_0_data_out.read();
        tmp_user_V_1_reg_295 = CU_data_in_V_user_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        tmp_last_V_2_reg_286 = CU_data_in_V_last_V_0_data_out.read();
        tmp_user_V_2_reg_281 = CU_data_in_V_user_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_load_A.read())) {
        user_data_out_V_data_V_1_payload_A = reg_194.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_load_B.read())) {
        user_data_out_V_data_V_1_payload_B = reg_194.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_load_A.read())) {
        user_data_out_V_keep_V_1_payload_A = reg_200.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_load_B.read())) {
        user_data_out_V_keep_V_1_payload_B = reg_200.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_load_A.read())) {
        user_data_out_V_last_V_1_payload_A = user_data_out_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_load_B.read())) {
        user_data_out_V_last_V_1_payload_B = user_data_out_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_load_A.read())) {
        user_data_out_V_user_V_1_payload_A = user_data_out_V_user_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_load_B.read())) {
        user_data_out_V_user_V_1_payload_B = user_data_out_V_user_V_1_data_in.read();
    }
}

void ecpri_demux::thread_CU_data_in_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read())))) {
        CU_data_in_TDATA_blk_n = CU_data_in_V_data_V_0_state.read()[0];
    } else {
        CU_data_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void ecpri_demux::thread_CU_data_in_TREADY() {
    CU_data_in_TREADY = CU_data_in_V_last_V_0_state.read()[1];
}

void ecpri_demux::thread_CU_data_in_V_data_V_0_ack_in() {
    CU_data_in_V_data_V_0_ack_in = CU_data_in_V_data_V_0_state.read()[1];
}

void ecpri_demux::thread_CU_data_in_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        CU_data_in_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        CU_data_in_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void ecpri_demux::thread_CU_data_in_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_data_V_0_sel.read())) {
        CU_data_in_V_data_V_0_data_out = CU_data_in_V_data_V_0_payload_B.read();
    } else {
        CU_data_in_V_data_V_0_data_out = CU_data_in_V_data_V_0_payload_A.read();
    }
}

void ecpri_demux::thread_CU_data_in_V_data_V_0_load_A() {
    CU_data_in_V_data_V_0_load_A = (CU_data_in_V_data_V_0_state_cmp_full.read() & ~CU_data_in_V_data_V_0_sel_wr.read());
}

void ecpri_demux::thread_CU_data_in_V_data_V_0_load_B() {
    CU_data_in_V_data_V_0_load_B = (CU_data_in_V_data_V_0_sel_wr.read() & CU_data_in_V_data_V_0_state_cmp_full.read());
}

void ecpri_demux::thread_CU_data_in_V_data_V_0_sel() {
    CU_data_in_V_data_V_0_sel = CU_data_in_V_data_V_0_sel_rd.read();
}

void ecpri_demux::thread_CU_data_in_V_data_V_0_state_cmp_full() {
    CU_data_in_V_data_V_0_state_cmp_full =  (sc_logic) ((!CU_data_in_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(CU_data_in_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_CU_data_in_V_data_V_0_vld_in() {
    CU_data_in_V_data_V_0_vld_in = CU_data_in_TVALID.read();
}

void ecpri_demux::thread_CU_data_in_V_data_V_0_vld_out() {
    CU_data_in_V_data_V_0_vld_out = CU_data_in_V_data_V_0_state.read()[0];
}

void ecpri_demux::thread_CU_data_in_V_keep_V_0_ack_in() {
    CU_data_in_V_keep_V_0_ack_in = CU_data_in_V_keep_V_0_state.read()[1];
}

void ecpri_demux::thread_CU_data_in_V_keep_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        CU_data_in_V_keep_V_0_ack_out = ap_const_logic_1;
    } else {
        CU_data_in_V_keep_V_0_ack_out = ap_const_logic_0;
    }
}

void ecpri_demux::thread_CU_data_in_V_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_keep_V_0_sel.read())) {
        CU_data_in_V_keep_V_0_data_out = CU_data_in_V_keep_V_0_payload_B.read();
    } else {
        CU_data_in_V_keep_V_0_data_out = CU_data_in_V_keep_V_0_payload_A.read();
    }
}

void ecpri_demux::thread_CU_data_in_V_keep_V_0_load_A() {
    CU_data_in_V_keep_V_0_load_A = (CU_data_in_V_keep_V_0_state_cmp_full.read() & ~CU_data_in_V_keep_V_0_sel_wr.read());
}

void ecpri_demux::thread_CU_data_in_V_keep_V_0_load_B() {
    CU_data_in_V_keep_V_0_load_B = (CU_data_in_V_keep_V_0_sel_wr.read() & CU_data_in_V_keep_V_0_state_cmp_full.read());
}

void ecpri_demux::thread_CU_data_in_V_keep_V_0_sel() {
    CU_data_in_V_keep_V_0_sel = CU_data_in_V_keep_V_0_sel_rd.read();
}

void ecpri_demux::thread_CU_data_in_V_keep_V_0_state_cmp_full() {
    CU_data_in_V_keep_V_0_state_cmp_full =  (sc_logic) ((!CU_data_in_V_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(CU_data_in_V_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_CU_data_in_V_keep_V_0_vld_in() {
    CU_data_in_V_keep_V_0_vld_in = CU_data_in_TVALID.read();
}

void ecpri_demux::thread_CU_data_in_V_keep_V_0_vld_out() {
    CU_data_in_V_keep_V_0_vld_out = CU_data_in_V_keep_V_0_state.read()[0];
}

void ecpri_demux::thread_CU_data_in_V_last_V_0_ack_in() {
    CU_data_in_V_last_V_0_ack_in = CU_data_in_V_last_V_0_state.read()[1];
}

void ecpri_demux::thread_CU_data_in_V_last_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        CU_data_in_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        CU_data_in_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void ecpri_demux::thread_CU_data_in_V_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_last_V_0_sel.read())) {
        CU_data_in_V_last_V_0_data_out = CU_data_in_V_last_V_0_payload_B.read();
    } else {
        CU_data_in_V_last_V_0_data_out = CU_data_in_V_last_V_0_payload_A.read();
    }
}

void ecpri_demux::thread_CU_data_in_V_last_V_0_load_A() {
    CU_data_in_V_last_V_0_load_A = (CU_data_in_V_last_V_0_state_cmp_full.read() & ~CU_data_in_V_last_V_0_sel_wr.read());
}

void ecpri_demux::thread_CU_data_in_V_last_V_0_load_B() {
    CU_data_in_V_last_V_0_load_B = (CU_data_in_V_last_V_0_sel_wr.read() & CU_data_in_V_last_V_0_state_cmp_full.read());
}

void ecpri_demux::thread_CU_data_in_V_last_V_0_sel() {
    CU_data_in_V_last_V_0_sel = CU_data_in_V_last_V_0_sel_rd.read();
}

void ecpri_demux::thread_CU_data_in_V_last_V_0_state_cmp_full() {
    CU_data_in_V_last_V_0_state_cmp_full =  (sc_logic) ((!CU_data_in_V_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(CU_data_in_V_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_CU_data_in_V_last_V_0_vld_in() {
    CU_data_in_V_last_V_0_vld_in = CU_data_in_TVALID.read();
}

void ecpri_demux::thread_CU_data_in_V_last_V_0_vld_out() {
    CU_data_in_V_last_V_0_vld_out = CU_data_in_V_last_V_0_state.read()[0];
}

void ecpri_demux::thread_CU_data_in_V_user_V_0_ack_in() {
    CU_data_in_V_user_V_0_ack_in = CU_data_in_V_user_V_0_state.read()[1];
}

void ecpri_demux::thread_CU_data_in_V_user_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
          !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        CU_data_in_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        CU_data_in_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void ecpri_demux::thread_CU_data_in_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, CU_data_in_V_user_V_0_sel.read())) {
        CU_data_in_V_user_V_0_data_out = CU_data_in_V_user_V_0_payload_B.read();
    } else {
        CU_data_in_V_user_V_0_data_out = CU_data_in_V_user_V_0_payload_A.read();
    }
}

void ecpri_demux::thread_CU_data_in_V_user_V_0_load_A() {
    CU_data_in_V_user_V_0_load_A = (CU_data_in_V_user_V_0_state_cmp_full.read() & ~CU_data_in_V_user_V_0_sel_wr.read());
}

void ecpri_demux::thread_CU_data_in_V_user_V_0_load_B() {
    CU_data_in_V_user_V_0_load_B = (CU_data_in_V_user_V_0_sel_wr.read() & CU_data_in_V_user_V_0_state_cmp_full.read());
}

void ecpri_demux::thread_CU_data_in_V_user_V_0_sel() {
    CU_data_in_V_user_V_0_sel = CU_data_in_V_user_V_0_sel_rd.read();
}

void ecpri_demux::thread_CU_data_in_V_user_V_0_state_cmp_full() {
    CU_data_in_V_user_V_0_state_cmp_full =  (sc_logic) ((!CU_data_in_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(CU_data_in_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_CU_data_in_V_user_V_0_vld_in() {
    CU_data_in_V_user_V_0_vld_in = CU_data_in_TVALID.read();
}

void ecpri_demux::thread_CU_data_in_V_user_V_0_vld_out() {
    CU_data_in_V_user_V_0_vld_out = CU_data_in_V_user_V_0_state.read()[0];
}

void ecpri_demux::thread_ap_CS_iter0_fsm_state1() {
    ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm.read()[0];
}

void ecpri_demux::thread_ap_CS_iter1_fsm_state2() {
    ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm.read()[1];
}

void ecpri_demux::thread_ap_CS_iter2_fsm_state3() {
    ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm.read()[1];
}

void ecpri_demux::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = ((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())));
}

void ecpri_demux::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op46_write_state2.read())));
}

void ecpri_demux::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ecpri_demux::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op76_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op78_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op82_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op86_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op88_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_V_data_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op94_write_state3.read())));
}

void ecpri_demux::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())));
}

void ecpri_demux::thread_ap_condition_1031() {
    ap_condition_1031 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())))));
}

void ecpri_demux::thread_ap_condition_931() {
    ap_condition_931 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))));
}

void ecpri_demux::thread_ap_predicate_op41_write_state2() {
    ap_predicate_op41_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, first_read_load_reg_273.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_286.read()));
}

void ecpri_demux::thread_ap_predicate_op42_write_state2() {
    ap_predicate_op42_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, first_read_load_reg_273.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_2_reg_286.read()));
}

void ecpri_demux::thread_ap_predicate_op43_write_state2() {
    ap_predicate_op43_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, first_read_load_reg_273.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_reg_291.read()));
}

void ecpri_demux::thread_ap_predicate_op44_write_state2() {
    ap_predicate_op44_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_1, state_V_load_reg_268.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_300.read()));
}

void ecpri_demux::thread_ap_predicate_op45_write_state2() {
    ap_predicate_op45_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_1, state_V_load_reg_268.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_1_reg_300.read()));
}

void ecpri_demux::thread_ap_predicate_op46_write_state2() {
    ap_predicate_op46_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_0, state_V_load_reg_268.read()) && esl_seteq<1,8,8>(ap_const_lv8_0, p_Result_s_reg_314.read()));
}

void ecpri_demux::thread_ap_predicate_op76_write_state3() {
    ap_predicate_op76_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, first_read_load_reg_273_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_286_pp0_iter1_reg.read()));
}

void ecpri_demux::thread_ap_predicate_op78_write_state3() {
    ap_predicate_op78_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, first_read_load_reg_273_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_2_reg_286_pp0_iter1_reg.read()));
}

void ecpri_demux::thread_ap_predicate_op82_write_state3() {
    ap_predicate_op82_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, first_read_load_reg_273_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_reg_291_pp0_iter1_reg.read()));
}

void ecpri_demux::thread_ap_predicate_op86_write_state3() {
    ap_predicate_op86_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_1, state_V_load_reg_268_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_300_pp0_iter1_reg.read()));
}

void ecpri_demux::thread_ap_predicate_op88_write_state3() {
    ap_predicate_op88_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_1, state_V_load_reg_268_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_1_reg_300_pp0_iter1_reg.read()));
}

void ecpri_demux::thread_ap_predicate_op94_write_state3() {
    ap_predicate_op94_write_state3 = (esl_seteq<1,2,2>(ap_const_lv2_0, state_V_load_reg_268_pp0_iter1_reg.read()) && esl_seteq<1,8,8>(ap_const_lv8_0, p_Result_s_reg_314_pp0_iter1_reg.read()));
}

void ecpri_demux::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void ecpri_demux::thread_control_data_out_TDATA() {
    control_data_out_TDATA = control_data_out_V_data_V_1_data_out.read();
}

void ecpri_demux::thread_control_data_out_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, first_read_load_reg_273.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_reg_291.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, first_read_load_reg_273_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_reg_291_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, first_read_load_reg_273.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_2_reg_286.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, first_read_load_reg_273_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_2_reg_286_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, first_read_load_reg_273.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_286.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_2, state_V_load_reg_268_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, first_read_load_reg_273_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_286_pp0_iter1_reg.read())))) {
        control_data_out_TDATA_blk_n = control_data_out_V_data_V_1_state.read()[1];
    } else {
        control_data_out_TDATA_blk_n = ap_const_logic_1;
    }
}

void ecpri_demux::thread_control_data_out_TKEEP() {
    control_data_out_TKEEP = control_data_out_V_keep_V_1_data_out.read();
}

void ecpri_demux::thread_control_data_out_TLAST() {
    control_data_out_TLAST = control_data_out_V_last_V_1_data_out.read();
}

void ecpri_demux::thread_control_data_out_TUSER() {
    control_data_out_TUSER = control_data_out_V_user_V_1_data_out.read();
}

void ecpri_demux::thread_control_data_out_TVALID() {
    control_data_out_TVALID = control_data_out_V_last_V_1_state.read()[0];
}

void ecpri_demux::thread_control_data_out_V_data_V_1_ack_in() {
    control_data_out_V_data_V_1_ack_in = control_data_out_V_data_V_1_state.read()[1];
}

void ecpri_demux::thread_control_data_out_V_data_V_1_ack_out() {
    control_data_out_V_data_V_1_ack_out = control_data_out_TREADY.read();
}

void ecpri_demux::thread_control_data_out_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_data_V_1_sel.read())) {
        control_data_out_V_data_V_1_data_out = control_data_out_V_data_V_1_payload_B.read();
    } else {
        control_data_out_V_data_V_1_data_out = control_data_out_V_data_V_1_payload_A.read();
    }
}

void ecpri_demux::thread_control_data_out_V_data_V_1_load_A() {
    control_data_out_V_data_V_1_load_A = (control_data_out_V_data_V_1_state_cmp_full.read() & ~control_data_out_V_data_V_1_sel_wr.read());
}

void ecpri_demux::thread_control_data_out_V_data_V_1_load_B() {
    control_data_out_V_data_V_1_load_B = (control_data_out_V_data_V_1_sel_wr.read() & control_data_out_V_data_V_1_state_cmp_full.read());
}

void ecpri_demux::thread_control_data_out_V_data_V_1_sel() {
    control_data_out_V_data_V_1_sel = control_data_out_V_data_V_1_sel_rd.read();
}

void ecpri_demux::thread_control_data_out_V_data_V_1_state_cmp_full() {
    control_data_out_V_data_V_1_state_cmp_full =  (sc_logic) ((!control_data_out_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(control_data_out_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_control_data_out_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        control_data_out_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        control_data_out_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ecpri_demux::thread_control_data_out_V_data_V_1_vld_out() {
    control_data_out_V_data_V_1_vld_out = control_data_out_V_data_V_1_state.read()[0];
}

void ecpri_demux::thread_control_data_out_V_keep_V_1_ack_in() {
    control_data_out_V_keep_V_1_ack_in = control_data_out_V_keep_V_1_state.read()[1];
}

void ecpri_demux::thread_control_data_out_V_keep_V_1_ack_out() {
    control_data_out_V_keep_V_1_ack_out = control_data_out_TREADY.read();
}

void ecpri_demux::thread_control_data_out_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_keep_V_1_sel.read())) {
        control_data_out_V_keep_V_1_data_out = control_data_out_V_keep_V_1_payload_B.read();
    } else {
        control_data_out_V_keep_V_1_data_out = control_data_out_V_keep_V_1_payload_A.read();
    }
}

void ecpri_demux::thread_control_data_out_V_keep_V_1_load_A() {
    control_data_out_V_keep_V_1_load_A = (control_data_out_V_keep_V_1_state_cmp_full.read() & ~control_data_out_V_keep_V_1_sel_wr.read());
}

void ecpri_demux::thread_control_data_out_V_keep_V_1_load_B() {
    control_data_out_V_keep_V_1_load_B = (control_data_out_V_keep_V_1_sel_wr.read() & control_data_out_V_keep_V_1_state_cmp_full.read());
}

void ecpri_demux::thread_control_data_out_V_keep_V_1_sel() {
    control_data_out_V_keep_V_1_sel = control_data_out_V_keep_V_1_sel_rd.read();
}

void ecpri_demux::thread_control_data_out_V_keep_V_1_state_cmp_full() {
    control_data_out_V_keep_V_1_state_cmp_full =  (sc_logic) ((!control_data_out_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(control_data_out_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_control_data_out_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        control_data_out_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        control_data_out_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ecpri_demux::thread_control_data_out_V_keep_V_1_vld_out() {
    control_data_out_V_keep_V_1_vld_out = control_data_out_V_keep_V_1_state.read()[0];
}

void ecpri_demux::thread_control_data_out_V_last_V_1_ack_in() {
    control_data_out_V_last_V_1_ack_in = control_data_out_V_last_V_1_state.read()[1];
}

void ecpri_demux::thread_control_data_out_V_last_V_1_ack_out() {
    control_data_out_V_last_V_1_ack_out = control_data_out_TREADY.read();
}

void ecpri_demux::thread_control_data_out_V_last_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_1031.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_write_state2.read())) {
            control_data_out_V_last_V_1_data_in = tmp_last_V_2_reg_286.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read())) {
            control_data_out_V_last_V_1_data_in = ap_const_lv1_1;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read())) {
            control_data_out_V_last_V_1_data_in = ap_const_lv1_0;
        } else {
            control_data_out_V_last_V_1_data_in = "X";
        }
    } else {
        control_data_out_V_last_V_1_data_in = "X";
    }
}

void ecpri_demux::thread_control_data_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_last_V_1_sel.read())) {
        control_data_out_V_last_V_1_data_out = control_data_out_V_last_V_1_payload_B.read();
    } else {
        control_data_out_V_last_V_1_data_out = control_data_out_V_last_V_1_payload_A.read();
    }
}

void ecpri_demux::thread_control_data_out_V_last_V_1_load_A() {
    control_data_out_V_last_V_1_load_A = (control_data_out_V_last_V_1_state_cmp_full.read() & ~control_data_out_V_last_V_1_sel_wr.read());
}

void ecpri_demux::thread_control_data_out_V_last_V_1_load_B() {
    control_data_out_V_last_V_1_load_B = (control_data_out_V_last_V_1_sel_wr.read() & control_data_out_V_last_V_1_state_cmp_full.read());
}

void ecpri_demux::thread_control_data_out_V_last_V_1_sel() {
    control_data_out_V_last_V_1_sel = control_data_out_V_last_V_1_sel_rd.read();
}

void ecpri_demux::thread_control_data_out_V_last_V_1_state_cmp_full() {
    control_data_out_V_last_V_1_state_cmp_full =  (sc_logic) ((!control_data_out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(control_data_out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_control_data_out_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        control_data_out_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        control_data_out_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ecpri_demux::thread_control_data_out_V_last_V_1_vld_out() {
    control_data_out_V_last_V_1_vld_out = control_data_out_V_last_V_1_state.read()[0];
}

void ecpri_demux::thread_control_data_out_V_user_V_1_ack_in() {
    control_data_out_V_user_V_1_ack_in = control_data_out_V_user_V_1_state.read()[1];
}

void ecpri_demux::thread_control_data_out_V_user_V_1_ack_out() {
    control_data_out_V_user_V_1_ack_out = control_data_out_TREADY.read();
}

void ecpri_demux::thread_control_data_out_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, control_data_out_V_user_V_1_sel.read())) {
        control_data_out_V_user_V_1_data_out = control_data_out_V_user_V_1_payload_B.read();
    } else {
        control_data_out_V_user_V_1_data_out = control_data_out_V_user_V_1_payload_A.read();
    }
}

void ecpri_demux::thread_control_data_out_V_user_V_1_load_A() {
    control_data_out_V_user_V_1_load_A = (control_data_out_V_user_V_1_state_cmp_full.read() & ~control_data_out_V_user_V_1_sel_wr.read());
}

void ecpri_demux::thread_control_data_out_V_user_V_1_load_B() {
    control_data_out_V_user_V_1_load_B = (control_data_out_V_user_V_1_sel_wr.read() & control_data_out_V_user_V_1_state_cmp_full.read());
}

void ecpri_demux::thread_control_data_out_V_user_V_1_sel() {
    control_data_out_V_user_V_1_sel = control_data_out_V_user_V_1_sel_rd.read();
}

void ecpri_demux::thread_control_data_out_V_user_V_1_state_cmp_full() {
    control_data_out_V_user_V_1_state_cmp_full =  (sc_logic) ((!control_data_out_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(control_data_out_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_control_data_out_V_user_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op41_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op43_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        control_data_out_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        control_data_out_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void ecpri_demux::thread_control_data_out_V_user_V_1_vld_out() {
    control_data_out_V_user_V_1_vld_out = control_data_out_V_user_V_1_state.read()[0];
}

void ecpri_demux::thread_ecpri_demux_eth_state_out_V() {
    ecpri_demux_eth_state_out_V = state_V_load_reg_268_pp0_iter1_reg.read();
}

void ecpri_demux::thread_first_read_load_load_fu_210_p1() {
    first_read_load_load_fu_210_p1 = first_read.read();
}

void ecpri_demux::thread_grp_fu_160_p1() {
    grp_fu_160_p1 = CU_data_in_V_last_V_0_data_out.read();
}

void ecpri_demux::thread_icmp_ln879_fu_230_p2() {
    icmp_ln879_fu_230_p2 = (!section_type_V_fu_220_p4.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(section_type_V_fu_220_p4.read() == ap_const_lv8_1);
}

void ecpri_demux::thread_msg_type_out_V() {
    msg_type_out_V = msg_type_V.read();
}

void ecpri_demux::thread_p_Result_s_fu_236_p4() {
    p_Result_s_fu_236_p4 = CU_data_in_V_data_V_0_data_out.read().range(127, 120);
}

void ecpri_demux::thread_section_type_V_fu_220_p4() {
    section_type_V_fu_220_p4 = CU_data_in_V_data_V_0_data_out.read().range(95, 88);
}

void ecpri_demux::thread_user_data_out_TDATA() {
    user_data_out_TDATA = user_data_out_V_data_V_1_data_out.read();
}

void ecpri_demux::thread_user_data_out_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, state_V_load_reg_268.read()) && 
          esl_seteq<1,8,8>(ap_const_lv8_0, p_Result_s_reg_314.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, state_V_load_reg_268_pp0_iter1_reg.read()) && 
          esl_seteq<1,8,8>(ap_const_lv8_0, p_Result_s_reg_314_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, state_V_load_reg_268.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_1_reg_300.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, state_V_load_reg_268_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_last_V_1_reg_300_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, state_V_load_reg_268.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_300.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, state_V_load_reg_268_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_300_pp0_iter1_reg.read())))) {
        user_data_out_TDATA_blk_n = user_data_out_V_data_V_1_state.read()[1];
    } else {
        user_data_out_TDATA_blk_n = ap_const_logic_1;
    }
}

void ecpri_demux::thread_user_data_out_TKEEP() {
    user_data_out_TKEEP = user_data_out_V_keep_V_1_data_out.read();
}

void ecpri_demux::thread_user_data_out_TLAST() {
    user_data_out_TLAST = user_data_out_V_last_V_1_data_out.read();
}

void ecpri_demux::thread_user_data_out_TUSER() {
    user_data_out_TUSER = user_data_out_V_user_V_1_data_out.read();
}

void ecpri_demux::thread_user_data_out_TVALID() {
    user_data_out_TVALID = user_data_out_V_last_V_1_state.read()[0];
}

void ecpri_demux::thread_user_data_out_V_data_V_1_ack_in() {
    user_data_out_V_data_V_1_ack_in = user_data_out_V_data_V_1_state.read()[1];
}

void ecpri_demux::thread_user_data_out_V_data_V_1_ack_out() {
    user_data_out_V_data_V_1_ack_out = user_data_out_TREADY.read();
}

void ecpri_demux::thread_user_data_out_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_data_V_1_sel.read())) {
        user_data_out_V_data_V_1_data_out = user_data_out_V_data_V_1_payload_B.read();
    } else {
        user_data_out_V_data_V_1_data_out = user_data_out_V_data_V_1_payload_A.read();
    }
}

void ecpri_demux::thread_user_data_out_V_data_V_1_load_A() {
    user_data_out_V_data_V_1_load_A = (user_data_out_V_data_V_1_state_cmp_full.read() & ~user_data_out_V_data_V_1_sel_wr.read());
}

void ecpri_demux::thread_user_data_out_V_data_V_1_load_B() {
    user_data_out_V_data_V_1_load_B = (user_data_out_V_data_V_1_sel_wr.read() & user_data_out_V_data_V_1_state_cmp_full.read());
}

void ecpri_demux::thread_user_data_out_V_data_V_1_sel() {
    user_data_out_V_data_V_1_sel = user_data_out_V_data_V_1_sel_rd.read();
}

void ecpri_demux::thread_user_data_out_V_data_V_1_state_cmp_full() {
    user_data_out_V_data_V_1_state_cmp_full =  (sc_logic) ((!user_data_out_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(user_data_out_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_user_data_out_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op46_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        user_data_out_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        user_data_out_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void ecpri_demux::thread_user_data_out_V_data_V_1_vld_out() {
    user_data_out_V_data_V_1_vld_out = user_data_out_V_data_V_1_state.read()[0];
}

void ecpri_demux::thread_user_data_out_V_keep_V_1_ack_in() {
    user_data_out_V_keep_V_1_ack_in = user_data_out_V_keep_V_1_state.read()[1];
}

void ecpri_demux::thread_user_data_out_V_keep_V_1_ack_out() {
    user_data_out_V_keep_V_1_ack_out = user_data_out_TREADY.read();
}

void ecpri_demux::thread_user_data_out_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_keep_V_1_sel.read())) {
        user_data_out_V_keep_V_1_data_out = user_data_out_V_keep_V_1_payload_B.read();
    } else {
        user_data_out_V_keep_V_1_data_out = user_data_out_V_keep_V_1_payload_A.read();
    }
}

void ecpri_demux::thread_user_data_out_V_keep_V_1_load_A() {
    user_data_out_V_keep_V_1_load_A = (user_data_out_V_keep_V_1_state_cmp_full.read() & ~user_data_out_V_keep_V_1_sel_wr.read());
}

void ecpri_demux::thread_user_data_out_V_keep_V_1_load_B() {
    user_data_out_V_keep_V_1_load_B = (user_data_out_V_keep_V_1_sel_wr.read() & user_data_out_V_keep_V_1_state_cmp_full.read());
}

void ecpri_demux::thread_user_data_out_V_keep_V_1_sel() {
    user_data_out_V_keep_V_1_sel = user_data_out_V_keep_V_1_sel_rd.read();
}

void ecpri_demux::thread_user_data_out_V_keep_V_1_state_cmp_full() {
    user_data_out_V_keep_V_1_state_cmp_full =  (sc_logic) ((!user_data_out_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(user_data_out_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_user_data_out_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op46_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        user_data_out_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        user_data_out_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void ecpri_demux::thread_user_data_out_V_keep_V_1_vld_out() {
    user_data_out_V_keep_V_1_vld_out = user_data_out_V_keep_V_1_state.read()[0];
}

void ecpri_demux::thread_user_data_out_V_last_V_1_ack_in() {
    user_data_out_V_last_V_1_ack_in = user_data_out_V_last_V_1_state.read()[1];
}

void ecpri_demux::thread_user_data_out_V_last_V_1_ack_out() {
    user_data_out_V_last_V_1_ack_out = user_data_out_TREADY.read();
}

void ecpri_demux::thread_user_data_out_V_last_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_1031.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op46_write_state2.read())) {
            user_data_out_V_last_V_1_data_in = tmp_last_V_reg_309.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_write_state2.read())) {
            user_data_out_V_last_V_1_data_in = ap_const_lv1_1;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read())) {
            user_data_out_V_last_V_1_data_in = ap_const_lv1_0;
        } else {
            user_data_out_V_last_V_1_data_in = "X";
        }
    } else {
        user_data_out_V_last_V_1_data_in = "X";
    }
}

void ecpri_demux::thread_user_data_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_last_V_1_sel.read())) {
        user_data_out_V_last_V_1_data_out = user_data_out_V_last_V_1_payload_B.read();
    } else {
        user_data_out_V_last_V_1_data_out = user_data_out_V_last_V_1_payload_A.read();
    }
}

void ecpri_demux::thread_user_data_out_V_last_V_1_load_A() {
    user_data_out_V_last_V_1_load_A = (user_data_out_V_last_V_1_state_cmp_full.read() & ~user_data_out_V_last_V_1_sel_wr.read());
}

void ecpri_demux::thread_user_data_out_V_last_V_1_load_B() {
    user_data_out_V_last_V_1_load_B = (user_data_out_V_last_V_1_sel_wr.read() & user_data_out_V_last_V_1_state_cmp_full.read());
}

void ecpri_demux::thread_user_data_out_V_last_V_1_sel() {
    user_data_out_V_last_V_1_sel = user_data_out_V_last_V_1_sel_rd.read();
}

void ecpri_demux::thread_user_data_out_V_last_V_1_state_cmp_full() {
    user_data_out_V_last_V_1_state_cmp_full =  (sc_logic) ((!user_data_out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(user_data_out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_user_data_out_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op46_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        user_data_out_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        user_data_out_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void ecpri_demux::thread_user_data_out_V_last_V_1_vld_out() {
    user_data_out_V_last_V_1_vld_out = user_data_out_V_last_V_1_state.read()[0];
}

void ecpri_demux::thread_user_data_out_V_user_V_1_ack_in() {
    user_data_out_V_user_V_1_ack_in = user_data_out_V_user_V_1_state.read()[1];
}

void ecpri_demux::thread_user_data_out_V_user_V_1_ack_out() {
    user_data_out_V_user_V_1_ack_out = user_data_out_TREADY.read();
}

void ecpri_demux::thread_user_data_out_V_user_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op46_write_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())))))) {
        user_data_out_V_user_V_1_data_in = tmp_user_V_reg_304.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read()))))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_write_state2.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read()))))))) {
        user_data_out_V_user_V_1_data_in = tmp_user_V_1_reg_295.read();
    } else {
        user_data_out_V_user_V_1_data_in = "X";
    }
}

void ecpri_demux::thread_user_data_out_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, user_data_out_V_user_V_1_sel.read())) {
        user_data_out_V_user_V_1_data_out = user_data_out_V_user_V_1_payload_B.read();
    } else {
        user_data_out_V_user_V_1_data_out = user_data_out_V_user_V_1_payload_A.read();
    }
}

void ecpri_demux::thread_user_data_out_V_user_V_1_load_A() {
    user_data_out_V_user_V_1_load_A = (user_data_out_V_user_V_1_state_cmp_full.read() & ~user_data_out_V_user_V_1_sel_wr.read());
}

void ecpri_demux::thread_user_data_out_V_user_V_1_load_B() {
    user_data_out_V_user_V_1_load_B = (user_data_out_V_user_V_1_sel_wr.read() & user_data_out_V_user_V_1_state_cmp_full.read());
}

void ecpri_demux::thread_user_data_out_V_user_V_1_sel() {
    user_data_out_V_user_V_1_sel = user_data_out_V_user_V_1_sel_rd.read();
}

void ecpri_demux::thread_user_data_out_V_user_V_1_state_cmp_full() {
    user_data_out_V_user_V_1_state_cmp_full =  (sc_logic) ((!user_data_out_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(user_data_out_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void ecpri_demux::thread_user_data_out_V_user_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op44_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op45_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op46_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        user_data_out_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        user_data_out_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void ecpri_demux::thread_user_data_out_V_user_V_1_vld_out() {
    user_data_out_V_user_V_1_vld_out = user_data_out_V_user_V_1_state.read()[0];
}

void ecpri_demux::thread_ap_NS_iter0_fsm() {
    switch (ap_CS_iter0_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
break;
        default : 
            ap_NS_iter0_fsm = "X";
            break;
    }
}

void ecpri_demux::thread_ap_NS_iter1_fsm() {
    switch (ap_CS_iter1_fsm.read().to_uint64()) {
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read()))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && (esl_seteq<1,1,1>(ap_CS_iter0_fsm_state1.read(), ap_const_logic_0) || 
  (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
   ((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
     esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || 
    (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
     esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || 
    (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
     esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || 
    (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
     esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read()))))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && !((esl_seteq<1,2,2>(ap_const_lv2_3, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_2, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_1, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, CU_data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter1_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

void ecpri_demux::thread_ap_NS_iter2_fsm() {
    switch (ap_CS_iter2_fsm.read().to_uint64()) {
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else if ((!(esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) && ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || 
  esl_seteq<1,1,1>(ap_CS_iter1_fsm_state2.read(), ap_const_logic_0)))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter2_fsm_state3.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, control_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, user_data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, control_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, control_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, user_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, user_data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter2_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

void ecpri_demux::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"CU_data_in_TDATA\" :  \"" << CU_data_in_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"CU_data_in_TVALID\" :  \"" << CU_data_in_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"CU_data_in_TREADY\" :  \"" << CU_data_in_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"CU_data_in_TUSER\" :  \"" << CU_data_in_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"CU_data_in_TKEEP\" :  \"" << CU_data_in_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"CU_data_in_TLAST\" :  \"" << CU_data_in_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"control_data_out_TDATA\" :  \"" << control_data_out_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"control_data_out_TVALID\" :  \"" << control_data_out_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"control_data_out_TREADY\" :  \"" << control_data_out_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"control_data_out_TUSER\" :  \"" << control_data_out_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"control_data_out_TKEEP\" :  \"" << control_data_out_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"control_data_out_TLAST\" :  \"" << control_data_out_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"user_data_out_TDATA\" :  \"" << user_data_out_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"user_data_out_TVALID\" :  \"" << user_data_out_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"user_data_out_TREADY\" :  \"" << user_data_out_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"user_data_out_TUSER\" :  \"" << user_data_out_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"user_data_out_TKEEP\" :  \"" << user_data_out_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"user_data_out_TLAST\" :  \"" << user_data_out_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ecpri_demux_eth_state_out_V\" :  \"" << ecpri_demux_eth_state_out_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"msg_type_out_V\" :  \"" << msg_type_out_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

