// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="L1toORAN,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=3.200000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.770500,HLS_SYN_LAT=12,HLS_SYN_TPT=1,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1177,HLS_SYN_LUT=629,HLS_VERSION=2019_1}" *)

module L1toORAN (
        ap_clk,
        ap_rst_n,
        L1_axis_V_TDATA,
        L1_axis_V_TVALID,
        L1_axis_V_TREADY,
        application_header_V_TDATA,
        application_header_V_TVALID,
        application_header_V_TREADY,
        section_header_V_TDATA,
        section_header_V_TVALID,
        section_header_V_TREADY,
        extension_header_V_TDATA,
        extension_header_V_TVALID,
        extension_header_V_TREADY,
        mux_config_V_V_TDATA,
        mux_config_V_V_TVALID,
        mux_config_V_V_TREADY,
        numBeams_V_V_TDATA,
        numBeams_V_V_TVALID,
        numBeams_V_V_TREADY,
        l1toc_stateout_V,
        rtcid_V_V_TDATA,
        rtcid_V_V_TVALID,
        rtcid_V_V_TREADY,
        CDATA_COUNTER_V
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [63:0] L1_axis_V_TDATA;
input   L1_axis_V_TVALID;
output   L1_axis_V_TREADY;
output  [63:0] application_header_V_TDATA;
output   application_header_V_TVALID;
input   application_header_V_TREADY;
output  [63:0] section_header_V_TDATA;
output   section_header_V_TVALID;
input   section_header_V_TREADY;
output  [71:0] extension_header_V_TDATA;
output   extension_header_V_TVALID;
input   extension_header_V_TREADY;
output  [95:0] mux_config_V_V_TDATA;
output   mux_config_V_V_TVALID;
input   mux_config_V_V_TREADY;
output  [7:0] numBeams_V_V_TDATA;
output   numBeams_V_V_TVALID;
input   numBeams_V_V_TREADY;
output  [7:0] l1toc_stateout_V;
output  [15:0] rtcid_V_V_TDATA;
output   rtcid_V_V_TVALID;
input   rtcid_V_V_TREADY;
output  [7:0] CDATA_COUNTER_V;

reg L1_axis_V_TREADY;
reg application_header_V_TVALID;
reg section_header_V_TVALID;
reg extension_header_V_TVALID;
reg mux_config_V_V_TVALID;
reg numBeams_V_V_TVALID;
reg rtcid_V_V_TVALID;

 reg    ap_rst_n_inv;
reg   [1:0] state_V;
reg   [7:0] section_hdr_numPrbu_s;
reg   [0:0] appn_hdr_dataDirecti;
reg   [2:0] appn_hdr_payloadVers;
reg   [3:0] appn_hdr_filterIndex;
reg   [7:0] appn_hdr_frameId_V;
reg   [3:0] appn_hdr_subframeId_s;
reg   [5:0] appn_hdr_slotID_V;
reg   [3:0] appn_hdr_startsymbol;
reg   [7:0] appn_hdr_numSections;
reg   [0:0] appn_hdr_sectionType;
reg   [11:0] section_hdr_sectionI;
reg   [0:0] section_hdr_rb_V;
reg   [0:0] section_hdr_symInc_V;
reg   [7:0] section_hdr_startPrb;
reg   [11:0] section_hdr_reMask_V;
reg   [0:0] count;
reg   [7:0] value_V;
reg   [1:0] prb_bit_V;
reg   [0:0] extn_hdr_ef_V;
reg   [15:0] extn_hdr_extLen_V;
reg   [0:0] extn_hdr_disablebfW_s;
reg   [0:0] extn_hdr_RAD_V;
reg   [7:0] extn_hdr_numBundPRB_s;
reg   [7:0] extn_hdr_bfWCompHdr_s;
reg   [2:0] numMatrix_V;
reg   [95:0] mux_configs_V;
reg   [7:0] cplane_data_counter_s;
reg    L1_axis_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire   [0:0] tmp_nbreadreq_fu_258_p3;
reg    application_header_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] tmp_reg_1143;
reg   [0:0] tmp_reg_1143_pp0_iter11_reg;
reg   [0:0] icmp_ln879_reg_1180;
reg   [0:0] icmp_ln879_reg_1180_pp0_iter11_reg;
reg   [1:0] p_Result_2_reg_1184;
reg   [1:0] p_Result_2_reg_1184_pp0_iter11_reg;
reg   [0:0] tmp_1_reg_1189;
reg   [0:0] tmp_1_reg_1189_pp0_iter11_reg;
reg   [0:0] icmp_ln63_reg_1217;
reg   [0:0] icmp_ln63_reg_1217_pp0_iter11_reg;
reg    section_header_V_TDATA_blk_n;
reg   [0:0] icmp_ln93_reg_1213;
reg   [0:0] icmp_ln93_reg_1213_pp0_iter11_reg;
reg    extension_header_V_TDATA_blk_n;
reg   [0:0] icmp_ln125_reg_1199;
reg   [0:0] icmp_ln125_reg_1199_pp0_iter11_reg;
reg    mux_config_V_V_TDATA_blk_n;
reg   [0:0] tmp_2_reg_1221;
reg    numBeams_V_V_TDATA_blk_n;
reg   [0:0] count_load_reg_1225;
reg   [0:0] or_ln139_reg_1234;
reg    rtcid_V_V_TDATA_blk_n;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
reg    ap_predicate_op152_write_state13;
reg    ap_predicate_op166_write_state13;
reg    ap_predicate_op169_write_state13;
reg    ap_predicate_op179_write_state13;
reg    ap_predicate_op187_write_state13;
reg    ap_predicate_op205_write_state13;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_reg_1143_pp0_iter1_reg;
reg   [0:0] tmp_reg_1143_pp0_iter2_reg;
reg   [0:0] tmp_reg_1143_pp0_iter3_reg;
reg   [0:0] tmp_reg_1143_pp0_iter4_reg;
reg   [0:0] tmp_reg_1143_pp0_iter5_reg;
reg   [0:0] tmp_reg_1143_pp0_iter6_reg;
reg   [0:0] tmp_reg_1143_pp0_iter7_reg;
reg   [0:0] tmp_reg_1143_pp0_iter8_reg;
reg   [0:0] tmp_reg_1143_pp0_iter9_reg;
reg   [0:0] tmp_reg_1143_pp0_iter10_reg;
reg   [63:0] tmp1_reg_1147;
reg   [63:0] tmp1_reg_1147_pp0_iter1_reg;
reg   [63:0] tmp1_reg_1147_pp0_iter2_reg;
reg   [63:0] tmp1_reg_1147_pp0_iter3_reg;
reg   [63:0] tmp1_reg_1147_pp0_iter4_reg;
reg   [63:0] tmp1_reg_1147_pp0_iter5_reg;
reg   [63:0] tmp1_reg_1147_pp0_iter6_reg;
reg   [63:0] tmp1_reg_1147_pp0_iter7_reg;
reg   [63:0] tmp1_reg_1147_pp0_iter8_reg;
reg   [63:0] tmp1_reg_1147_pp0_iter9_reg;
reg   [63:0] tmp1_reg_1147_pp0_iter10_reg;
reg   [63:0] tmp1_reg_1147_pp0_iter11_reg;
wire   [0:0] icmp_ln879_fu_359_p2;
reg   [0:0] icmp_ln879_reg_1180_pp0_iter1_reg;
reg   [0:0] icmp_ln879_reg_1180_pp0_iter2_reg;
reg   [0:0] icmp_ln879_reg_1180_pp0_iter3_reg;
reg   [0:0] icmp_ln879_reg_1180_pp0_iter4_reg;
reg   [0:0] icmp_ln879_reg_1180_pp0_iter5_reg;
reg   [0:0] icmp_ln879_reg_1180_pp0_iter6_reg;
reg   [0:0] icmp_ln879_reg_1180_pp0_iter7_reg;
reg   [0:0] icmp_ln879_reg_1180_pp0_iter8_reg;
reg   [0:0] icmp_ln879_reg_1180_pp0_iter9_reg;
reg   [0:0] icmp_ln879_reg_1180_pp0_iter10_reg;
wire   [1:0] p_Result_2_fu_376_p4;
reg   [1:0] p_Result_2_reg_1184_pp0_iter1_reg;
reg   [1:0] p_Result_2_reg_1184_pp0_iter2_reg;
reg   [1:0] p_Result_2_reg_1184_pp0_iter3_reg;
reg   [1:0] p_Result_2_reg_1184_pp0_iter4_reg;
reg   [1:0] p_Result_2_reg_1184_pp0_iter5_reg;
reg   [1:0] p_Result_2_reg_1184_pp0_iter6_reg;
reg   [1:0] p_Result_2_reg_1184_pp0_iter7_reg;
reg   [1:0] p_Result_2_reg_1184_pp0_iter8_reg;
reg   [1:0] p_Result_2_reg_1184_pp0_iter9_reg;
reg   [1:0] p_Result_2_reg_1184_pp0_iter10_reg;
wire   [0:0] tmp_1_fu_386_p3;
reg   [0:0] tmp_1_reg_1189_pp0_iter1_reg;
reg   [0:0] tmp_1_reg_1189_pp0_iter2_reg;
reg   [0:0] tmp_1_reg_1189_pp0_iter3_reg;
reg   [0:0] tmp_1_reg_1189_pp0_iter4_reg;
reg   [0:0] tmp_1_reg_1189_pp0_iter5_reg;
reg   [0:0] tmp_1_reg_1189_pp0_iter6_reg;
reg   [0:0] tmp_1_reg_1189_pp0_iter7_reg;
reg   [0:0] tmp_1_reg_1189_pp0_iter8_reg;
reg   [0:0] tmp_1_reg_1189_pp0_iter9_reg;
reg   [0:0] tmp_1_reg_1189_pp0_iter10_reg;
reg   [7:0] tmp_numPrbu_V_reg_1193;
reg   [7:0] tmp_numPrbu_V_reg_1193_pp0_iter1_reg;
reg   [7:0] tmp_numPrbu_V_reg_1193_pp0_iter2_reg;
reg   [7:0] tmp_numPrbu_V_reg_1193_pp0_iter3_reg;
reg   [7:0] tmp_numPrbu_V_reg_1193_pp0_iter4_reg;
reg   [7:0] tmp_numPrbu_V_reg_1193_pp0_iter5_reg;
reg   [7:0] tmp_numPrbu_V_reg_1193_pp0_iter6_reg;
reg   [7:0] tmp_numPrbu_V_reg_1193_pp0_iter7_reg;
reg   [7:0] tmp_numPrbu_V_reg_1193_pp0_iter8_reg;
reg   [7:0] tmp_numPrbu_V_reg_1193_pp0_iter9_reg;
reg   [7:0] tmp_numPrbu_V_reg_1193_pp0_iter10_reg;
reg   [7:0] tmp_numPrbu_V_reg_1193_pp0_iter11_reg;
wire   [0:0] icmp_ln125_fu_404_p2;
reg   [0:0] icmp_ln125_reg_1199_pp0_iter1_reg;
reg   [0:0] icmp_ln125_reg_1199_pp0_iter2_reg;
reg   [0:0] icmp_ln125_reg_1199_pp0_iter3_reg;
reg   [0:0] icmp_ln125_reg_1199_pp0_iter4_reg;
reg   [0:0] icmp_ln125_reg_1199_pp0_iter5_reg;
reg   [0:0] icmp_ln125_reg_1199_pp0_iter6_reg;
reg   [0:0] icmp_ln125_reg_1199_pp0_iter7_reg;
reg   [0:0] icmp_ln125_reg_1199_pp0_iter8_reg;
reg   [0:0] icmp_ln125_reg_1199_pp0_iter9_reg;
reg   [0:0] icmp_ln125_reg_1199_pp0_iter10_reg;
reg   [7:0] p_Result_19_reg_1203;
reg   [7:0] p_Result_19_reg_1203_pp0_iter1_reg;
reg   [7:0] p_Result_19_reg_1203_pp0_iter2_reg;
reg   [7:0] p_Result_19_reg_1203_pp0_iter3_reg;
reg   [7:0] p_Result_19_reg_1203_pp0_iter4_reg;
reg   [7:0] p_Result_19_reg_1203_pp0_iter5_reg;
reg   [7:0] p_Result_19_reg_1203_pp0_iter6_reg;
reg   [7:0] p_Result_19_reg_1203_pp0_iter7_reg;
reg   [7:0] p_Result_19_reg_1203_pp0_iter8_reg;
reg   [7:0] p_Result_19_reg_1203_pp0_iter9_reg;
reg   [7:0] p_Result_19_reg_1203_pp0_iter10_reg;
wire   [0:0] icmp_ln899_fu_424_p2;
reg   [0:0] icmp_ln899_reg_1209;
reg   [0:0] icmp_ln899_reg_1209_pp0_iter1_reg;
reg   [0:0] icmp_ln899_reg_1209_pp0_iter2_reg;
reg   [0:0] icmp_ln899_reg_1209_pp0_iter3_reg;
reg   [0:0] icmp_ln899_reg_1209_pp0_iter4_reg;
reg   [0:0] icmp_ln899_reg_1209_pp0_iter5_reg;
reg   [0:0] icmp_ln899_reg_1209_pp0_iter6_reg;
reg   [0:0] icmp_ln899_reg_1209_pp0_iter7_reg;
reg   [0:0] icmp_ln899_reg_1209_pp0_iter8_reg;
reg   [0:0] icmp_ln899_reg_1209_pp0_iter9_reg;
reg   [0:0] icmp_ln899_reg_1209_pp0_iter10_reg;
wire   [0:0] grp_fu_328_p2;
reg   [0:0] icmp_ln93_reg_1213_pp0_iter1_reg;
reg   [0:0] icmp_ln93_reg_1213_pp0_iter2_reg;
reg   [0:0] icmp_ln93_reg_1213_pp0_iter3_reg;
reg   [0:0] icmp_ln93_reg_1213_pp0_iter4_reg;
reg   [0:0] icmp_ln93_reg_1213_pp0_iter5_reg;
reg   [0:0] icmp_ln93_reg_1213_pp0_iter6_reg;
reg   [0:0] icmp_ln93_reg_1213_pp0_iter7_reg;
reg   [0:0] icmp_ln93_reg_1213_pp0_iter8_reg;
reg   [0:0] icmp_ln93_reg_1213_pp0_iter9_reg;
reg   [0:0] icmp_ln93_reg_1213_pp0_iter10_reg;
reg   [0:0] icmp_ln63_reg_1217_pp0_iter1_reg;
reg   [0:0] icmp_ln63_reg_1217_pp0_iter2_reg;
reg   [0:0] icmp_ln63_reg_1217_pp0_iter3_reg;
reg   [0:0] icmp_ln63_reg_1217_pp0_iter4_reg;
reg   [0:0] icmp_ln63_reg_1217_pp0_iter5_reg;
reg   [0:0] icmp_ln63_reg_1217_pp0_iter6_reg;
reg   [0:0] icmp_ln63_reg_1217_pp0_iter7_reg;
reg   [0:0] icmp_ln63_reg_1217_pp0_iter8_reg;
reg   [0:0] icmp_ln63_reg_1217_pp0_iter9_reg;
reg   [0:0] icmp_ln63_reg_1217_pp0_iter10_reg;
wire   [0:0] count_load_load_fu_581_p1;
reg   [2:0] tmp_V_2_reg_1229;
wire   [0:0] or_ln139_fu_607_p2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
wire   [2:0] select_ln895_fu_567_p3;
wire   [95:0] p_Result_s_139_fu_873_p5;
wire   [95:0] p_Result_21_fu_908_p5;
wire   [7:0] add_ln700_fu_895_p2;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] section_type_V_fu_365_p4;
wire   [4:0] p_Result_s_fu_349_p4;
wire   [7:0] grp_fu_430_p1;
wire   [2:0] grp_fu_430_p2;
wire   [2:0] trunc_ln301_fu_557_p1;
wire   [0:0] icmp_ln895_fu_551_p2;
wire   [2:0] add_ln301_fu_561_p2;
wire   [0:0] icmp_ln139_fu_595_p2;
wire   [0:0] icmp_ln891_fu_601_p2;
wire   [11:0] p_Result_8_fu_852_p4;
wire   [11:0] p_Result_7_fu_843_p4;
wire   [11:0] p_Result_6_fu_834_p4;
wire   [11:0] p_Result_5_fu_821_p4;
wire   [47:0] tmp_4_fu_861_p5;
wire   [14:0] tmp_beamID_V_1_fu_927_p4;
wire   [7:0] grp_fu_340_p4;
wire   [0:0] tmp_ef_V_fu_1009_p3;
wire   [14:0] tmp_beamID_V_fu_1000_p4;
wire   [3:0] tmp_numSymbol_V_fu_991_p4;
wire   [9:0] tmp_startPrbu_V_fu_1042_p1;
wire   [7:0] tmp_sectionType_V_fu_1112_p1;
wire   [5:0] tmp_startsymbolId_V_fu_1100_p1;
reg    grp_fu_430_ce;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1075;
reg    ap_condition_1073;
reg    ap_condition_1084;

// power-on initialization
initial begin
#0 state_V = 2'd0;
#0 section_hdr_numPrbu_s = 8'd0;
#0 appn_hdr_dataDirecti = 1'd0;
#0 appn_hdr_payloadVers = 3'd0;
#0 appn_hdr_filterIndex = 4'd0;
#0 appn_hdr_frameId_V = 8'd0;
#0 appn_hdr_subframeId_s = 4'd0;
#0 appn_hdr_slotID_V = 6'd0;
#0 appn_hdr_startsymbol = 4'd0;
#0 appn_hdr_numSections = 8'd0;
#0 appn_hdr_sectionType = 1'd0;
#0 section_hdr_sectionI = 12'd0;
#0 section_hdr_rb_V = 1'd0;
#0 section_hdr_symInc_V = 1'd0;
#0 section_hdr_startPrb = 8'd0;
#0 section_hdr_reMask_V = 12'd0;
#0 count = 1'd0;
#0 value_V = 8'd0;
#0 prb_bit_V = 2'd0;
#0 extn_hdr_ef_V = 1'd0;
#0 extn_hdr_extLen_V = 16'd0;
#0 extn_hdr_disablebfW_s = 1'd0;
#0 extn_hdr_RAD_V = 1'd0;
#0 extn_hdr_numBundPRB_s = 8'd0;
#0 extn_hdr_bfWCompHdr_s = 8'd0;
#0 numMatrix_V = 3'd0;
#0 mux_configs_V = 96'd0;
#0 cplane_data_counter_s = 8'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
end

L1toORAN_udiv_8ns_8ns_3_12_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 3 ))
L1toORAN_udiv_8ns_8ns_3_12_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(section_hdr_numPrbu_s),
    .din1(grp_fu_430_p1),
    .ce(grp_fu_430_ce),
    .dout(grp_fu_430_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        state_V <= 2'd0;
    end else begin
        if (((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
            state_V <= p_Result_2_reg_1184_pp0_iter11_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1073)) begin
        if (((icmp_ln93_reg_1213_pp0_iter10_reg == 1'd1) & (p_Result_2_reg_1184_pp0_iter10_reg == 2'd2))) begin
            count <= 1'd1;
        end else if ((1'b1 == ap_condition_1075)) begin
            count <= 1'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1084)) begin
        if ((tmp_2_reg_1221 == 1'd1)) begin
            mux_configs_V <= p_Result_21_fu_908_p5;
        end else if ((tmp_2_reg_1221 == 1'd0)) begin
            mux_configs_V <= p_Result_s_139_fu_873_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_reg_1217_pp0_iter10_reg == 1'd1) & (icmp_ln879_reg_1180_pp0_iter10_reg == 1'd1) & (tmp_reg_1143_pp0_iter10_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (p_Result_2_reg_1184_pp0_iter10_reg == 2'd1))) begin
        appn_hdr_dataDirecti <= tmp1_reg_1147_pp0_iter10_reg[32'd42];
        appn_hdr_filterIndex <= {{tmp1_reg_1147_pp0_iter10_reg[38:35]}};
        appn_hdr_frameId_V <= {{tmp1_reg_1147_pp0_iter10_reg[34:27]}};
        appn_hdr_numSections <= {{tmp1_reg_1147_pp0_iter10_reg[12:5]}};
        appn_hdr_payloadVers <= {{tmp1_reg_1147_pp0_iter10_reg[41:39]}};
        appn_hdr_sectionType <= 1'd1;
        appn_hdr_slotID_V <= {{tmp1_reg_1147_pp0_iter10_reg[22:17]}};
        appn_hdr_startsymbol <= {{tmp1_reg_1147_pp0_iter10_reg[16:13]}};
        appn_hdr_subframeId_s <= {{tmp1_reg_1147_pp0_iter10_reg[26:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_1199_pp0_iter10_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter10_reg == 1'd1) & (icmp_ln879_reg_1180_pp0_iter10_reg == 1'd1) & (tmp_reg_1143_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (p_Result_2_reg_1184_pp0_iter10_reg == 2'd3))) begin
        count_load_reg_1225 <= count;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (tmp_2_reg_1221 == 1'd0) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        cplane_data_counter_s <= add_ln700_fu_895_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_1199_pp0_iter10_reg == 1'd1) & (icmp_ln879_reg_1180_pp0_iter10_reg == 1'd1) & (tmp_reg_1143_pp0_iter10_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (p_Result_2_reg_1184_pp0_iter10_reg == 2'd3))) begin
        extn_hdr_RAD_V <= tmp1_reg_1147_pp0_iter10_reg[32'd24];
        extn_hdr_bfWCompHdr_s <= {{tmp1_reg_1147_pp0_iter10_reg[15:8]}};
        extn_hdr_disablebfW_s <= tmp1_reg_1147_pp0_iter10_reg[32'd25];
        extn_hdr_ef_V <= tmp1_reg_1147_pp0_iter10_reg[32'd42];
        extn_hdr_extLen_V <= {{tmp1_reg_1147_pp0_iter10_reg[41:26]}};
        extn_hdr_numBundPRB_s <= p_Result_19_reg_1203_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln879_fu_359_p2 == 1'd1) & (tmp_nbreadreq_fu_258_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_Result_2_fu_376_p4 == 2'd3))) begin
        icmp_ln125_reg_1199 <= icmp_ln125_fu_404_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln125_reg_1199_pp0_iter10_reg <= icmp_ln125_reg_1199_pp0_iter9_reg;
        icmp_ln125_reg_1199_pp0_iter11_reg <= icmp_ln125_reg_1199_pp0_iter10_reg;
        icmp_ln125_reg_1199_pp0_iter2_reg <= icmp_ln125_reg_1199_pp0_iter1_reg;
        icmp_ln125_reg_1199_pp0_iter3_reg <= icmp_ln125_reg_1199_pp0_iter2_reg;
        icmp_ln125_reg_1199_pp0_iter4_reg <= icmp_ln125_reg_1199_pp0_iter3_reg;
        icmp_ln125_reg_1199_pp0_iter5_reg <= icmp_ln125_reg_1199_pp0_iter4_reg;
        icmp_ln125_reg_1199_pp0_iter6_reg <= icmp_ln125_reg_1199_pp0_iter5_reg;
        icmp_ln125_reg_1199_pp0_iter7_reg <= icmp_ln125_reg_1199_pp0_iter6_reg;
        icmp_ln125_reg_1199_pp0_iter8_reg <= icmp_ln125_reg_1199_pp0_iter7_reg;
        icmp_ln125_reg_1199_pp0_iter9_reg <= icmp_ln125_reg_1199_pp0_iter8_reg;
        icmp_ln63_reg_1217_pp0_iter10_reg <= icmp_ln63_reg_1217_pp0_iter9_reg;
        icmp_ln63_reg_1217_pp0_iter11_reg <= icmp_ln63_reg_1217_pp0_iter10_reg;
        icmp_ln63_reg_1217_pp0_iter2_reg <= icmp_ln63_reg_1217_pp0_iter1_reg;
        icmp_ln63_reg_1217_pp0_iter3_reg <= icmp_ln63_reg_1217_pp0_iter2_reg;
        icmp_ln63_reg_1217_pp0_iter4_reg <= icmp_ln63_reg_1217_pp0_iter3_reg;
        icmp_ln63_reg_1217_pp0_iter5_reg <= icmp_ln63_reg_1217_pp0_iter4_reg;
        icmp_ln63_reg_1217_pp0_iter6_reg <= icmp_ln63_reg_1217_pp0_iter5_reg;
        icmp_ln63_reg_1217_pp0_iter7_reg <= icmp_ln63_reg_1217_pp0_iter6_reg;
        icmp_ln63_reg_1217_pp0_iter8_reg <= icmp_ln63_reg_1217_pp0_iter7_reg;
        icmp_ln63_reg_1217_pp0_iter9_reg <= icmp_ln63_reg_1217_pp0_iter8_reg;
        icmp_ln879_reg_1180_pp0_iter10_reg <= icmp_ln879_reg_1180_pp0_iter9_reg;
        icmp_ln879_reg_1180_pp0_iter11_reg <= icmp_ln879_reg_1180_pp0_iter10_reg;
        icmp_ln879_reg_1180_pp0_iter2_reg <= icmp_ln879_reg_1180_pp0_iter1_reg;
        icmp_ln879_reg_1180_pp0_iter3_reg <= icmp_ln879_reg_1180_pp0_iter2_reg;
        icmp_ln879_reg_1180_pp0_iter4_reg <= icmp_ln879_reg_1180_pp0_iter3_reg;
        icmp_ln879_reg_1180_pp0_iter5_reg <= icmp_ln879_reg_1180_pp0_iter4_reg;
        icmp_ln879_reg_1180_pp0_iter6_reg <= icmp_ln879_reg_1180_pp0_iter5_reg;
        icmp_ln879_reg_1180_pp0_iter7_reg <= icmp_ln879_reg_1180_pp0_iter6_reg;
        icmp_ln879_reg_1180_pp0_iter8_reg <= icmp_ln879_reg_1180_pp0_iter7_reg;
        icmp_ln879_reg_1180_pp0_iter9_reg <= icmp_ln879_reg_1180_pp0_iter8_reg;
        icmp_ln899_reg_1209_pp0_iter10_reg <= icmp_ln899_reg_1209_pp0_iter9_reg;
        icmp_ln899_reg_1209_pp0_iter2_reg <= icmp_ln899_reg_1209_pp0_iter1_reg;
        icmp_ln899_reg_1209_pp0_iter3_reg <= icmp_ln899_reg_1209_pp0_iter2_reg;
        icmp_ln899_reg_1209_pp0_iter4_reg <= icmp_ln899_reg_1209_pp0_iter3_reg;
        icmp_ln899_reg_1209_pp0_iter5_reg <= icmp_ln899_reg_1209_pp0_iter4_reg;
        icmp_ln899_reg_1209_pp0_iter6_reg <= icmp_ln899_reg_1209_pp0_iter5_reg;
        icmp_ln899_reg_1209_pp0_iter7_reg <= icmp_ln899_reg_1209_pp0_iter6_reg;
        icmp_ln899_reg_1209_pp0_iter8_reg <= icmp_ln899_reg_1209_pp0_iter7_reg;
        icmp_ln899_reg_1209_pp0_iter9_reg <= icmp_ln899_reg_1209_pp0_iter8_reg;
        icmp_ln93_reg_1213_pp0_iter10_reg <= icmp_ln93_reg_1213_pp0_iter9_reg;
        icmp_ln93_reg_1213_pp0_iter11_reg <= icmp_ln93_reg_1213_pp0_iter10_reg;
        icmp_ln93_reg_1213_pp0_iter2_reg <= icmp_ln93_reg_1213_pp0_iter1_reg;
        icmp_ln93_reg_1213_pp0_iter3_reg <= icmp_ln93_reg_1213_pp0_iter2_reg;
        icmp_ln93_reg_1213_pp0_iter4_reg <= icmp_ln93_reg_1213_pp0_iter3_reg;
        icmp_ln93_reg_1213_pp0_iter5_reg <= icmp_ln93_reg_1213_pp0_iter4_reg;
        icmp_ln93_reg_1213_pp0_iter6_reg <= icmp_ln93_reg_1213_pp0_iter5_reg;
        icmp_ln93_reg_1213_pp0_iter7_reg <= icmp_ln93_reg_1213_pp0_iter6_reg;
        icmp_ln93_reg_1213_pp0_iter8_reg <= icmp_ln93_reg_1213_pp0_iter7_reg;
        icmp_ln93_reg_1213_pp0_iter9_reg <= icmp_ln93_reg_1213_pp0_iter8_reg;
        p_Result_19_reg_1203_pp0_iter10_reg <= p_Result_19_reg_1203_pp0_iter9_reg;
        p_Result_19_reg_1203_pp0_iter2_reg <= p_Result_19_reg_1203_pp0_iter1_reg;
        p_Result_19_reg_1203_pp0_iter3_reg <= p_Result_19_reg_1203_pp0_iter2_reg;
        p_Result_19_reg_1203_pp0_iter4_reg <= p_Result_19_reg_1203_pp0_iter3_reg;
        p_Result_19_reg_1203_pp0_iter5_reg <= p_Result_19_reg_1203_pp0_iter4_reg;
        p_Result_19_reg_1203_pp0_iter6_reg <= p_Result_19_reg_1203_pp0_iter5_reg;
        p_Result_19_reg_1203_pp0_iter7_reg <= p_Result_19_reg_1203_pp0_iter6_reg;
        p_Result_19_reg_1203_pp0_iter8_reg <= p_Result_19_reg_1203_pp0_iter7_reg;
        p_Result_19_reg_1203_pp0_iter9_reg <= p_Result_19_reg_1203_pp0_iter8_reg;
        p_Result_2_reg_1184_pp0_iter10_reg <= p_Result_2_reg_1184_pp0_iter9_reg;
        p_Result_2_reg_1184_pp0_iter11_reg <= p_Result_2_reg_1184_pp0_iter10_reg;
        p_Result_2_reg_1184_pp0_iter2_reg <= p_Result_2_reg_1184_pp0_iter1_reg;
        p_Result_2_reg_1184_pp0_iter3_reg <= p_Result_2_reg_1184_pp0_iter2_reg;
        p_Result_2_reg_1184_pp0_iter4_reg <= p_Result_2_reg_1184_pp0_iter3_reg;
        p_Result_2_reg_1184_pp0_iter5_reg <= p_Result_2_reg_1184_pp0_iter4_reg;
        p_Result_2_reg_1184_pp0_iter6_reg <= p_Result_2_reg_1184_pp0_iter5_reg;
        p_Result_2_reg_1184_pp0_iter7_reg <= p_Result_2_reg_1184_pp0_iter6_reg;
        p_Result_2_reg_1184_pp0_iter8_reg <= p_Result_2_reg_1184_pp0_iter7_reg;
        p_Result_2_reg_1184_pp0_iter9_reg <= p_Result_2_reg_1184_pp0_iter8_reg;
        tmp1_reg_1147_pp0_iter10_reg <= tmp1_reg_1147_pp0_iter9_reg;
        tmp1_reg_1147_pp0_iter11_reg <= tmp1_reg_1147_pp0_iter10_reg;
        tmp1_reg_1147_pp0_iter2_reg <= tmp1_reg_1147_pp0_iter1_reg;
        tmp1_reg_1147_pp0_iter3_reg <= tmp1_reg_1147_pp0_iter2_reg;
        tmp1_reg_1147_pp0_iter4_reg <= tmp1_reg_1147_pp0_iter3_reg;
        tmp1_reg_1147_pp0_iter5_reg <= tmp1_reg_1147_pp0_iter4_reg;
        tmp1_reg_1147_pp0_iter6_reg <= tmp1_reg_1147_pp0_iter5_reg;
        tmp1_reg_1147_pp0_iter7_reg <= tmp1_reg_1147_pp0_iter6_reg;
        tmp1_reg_1147_pp0_iter8_reg <= tmp1_reg_1147_pp0_iter7_reg;
        tmp1_reg_1147_pp0_iter9_reg <= tmp1_reg_1147_pp0_iter8_reg;
        tmp_1_reg_1189_pp0_iter10_reg <= tmp_1_reg_1189_pp0_iter9_reg;
        tmp_1_reg_1189_pp0_iter11_reg <= tmp_1_reg_1189_pp0_iter10_reg;
        tmp_1_reg_1189_pp0_iter2_reg <= tmp_1_reg_1189_pp0_iter1_reg;
        tmp_1_reg_1189_pp0_iter3_reg <= tmp_1_reg_1189_pp0_iter2_reg;
        tmp_1_reg_1189_pp0_iter4_reg <= tmp_1_reg_1189_pp0_iter3_reg;
        tmp_1_reg_1189_pp0_iter5_reg <= tmp_1_reg_1189_pp0_iter4_reg;
        tmp_1_reg_1189_pp0_iter6_reg <= tmp_1_reg_1189_pp0_iter5_reg;
        tmp_1_reg_1189_pp0_iter7_reg <= tmp_1_reg_1189_pp0_iter6_reg;
        tmp_1_reg_1189_pp0_iter8_reg <= tmp_1_reg_1189_pp0_iter7_reg;
        tmp_1_reg_1189_pp0_iter9_reg <= tmp_1_reg_1189_pp0_iter8_reg;
        tmp_numPrbu_V_reg_1193_pp0_iter10_reg <= tmp_numPrbu_V_reg_1193_pp0_iter9_reg;
        tmp_numPrbu_V_reg_1193_pp0_iter11_reg <= tmp_numPrbu_V_reg_1193_pp0_iter10_reg;
        tmp_numPrbu_V_reg_1193_pp0_iter2_reg <= tmp_numPrbu_V_reg_1193_pp0_iter1_reg;
        tmp_numPrbu_V_reg_1193_pp0_iter3_reg <= tmp_numPrbu_V_reg_1193_pp0_iter2_reg;
        tmp_numPrbu_V_reg_1193_pp0_iter4_reg <= tmp_numPrbu_V_reg_1193_pp0_iter3_reg;
        tmp_numPrbu_V_reg_1193_pp0_iter5_reg <= tmp_numPrbu_V_reg_1193_pp0_iter4_reg;
        tmp_numPrbu_V_reg_1193_pp0_iter6_reg <= tmp_numPrbu_V_reg_1193_pp0_iter5_reg;
        tmp_numPrbu_V_reg_1193_pp0_iter7_reg <= tmp_numPrbu_V_reg_1193_pp0_iter6_reg;
        tmp_numPrbu_V_reg_1193_pp0_iter8_reg <= tmp_numPrbu_V_reg_1193_pp0_iter7_reg;
        tmp_numPrbu_V_reg_1193_pp0_iter9_reg <= tmp_numPrbu_V_reg_1193_pp0_iter8_reg;
        tmp_reg_1143_pp0_iter10_reg <= tmp_reg_1143_pp0_iter9_reg;
        tmp_reg_1143_pp0_iter11_reg <= tmp_reg_1143_pp0_iter10_reg;
        tmp_reg_1143_pp0_iter2_reg <= tmp_reg_1143_pp0_iter1_reg;
        tmp_reg_1143_pp0_iter3_reg <= tmp_reg_1143_pp0_iter2_reg;
        tmp_reg_1143_pp0_iter4_reg <= tmp_reg_1143_pp0_iter3_reg;
        tmp_reg_1143_pp0_iter5_reg <= tmp_reg_1143_pp0_iter4_reg;
        tmp_reg_1143_pp0_iter6_reg <= tmp_reg_1143_pp0_iter5_reg;
        tmp_reg_1143_pp0_iter7_reg <= tmp_reg_1143_pp0_iter6_reg;
        tmp_reg_1143_pp0_iter8_reg <= tmp_reg_1143_pp0_iter7_reg;
        tmp_reg_1143_pp0_iter9_reg <= tmp_reg_1143_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln125_reg_1199_pp0_iter1_reg <= icmp_ln125_reg_1199;
        icmp_ln63_reg_1217_pp0_iter1_reg <= icmp_ln63_reg_1217;
        icmp_ln879_reg_1180_pp0_iter1_reg <= icmp_ln879_reg_1180;
        icmp_ln899_reg_1209_pp0_iter1_reg <= icmp_ln899_reg_1209;
        icmp_ln93_reg_1213_pp0_iter1_reg <= icmp_ln93_reg_1213;
        p_Result_19_reg_1203_pp0_iter1_reg <= p_Result_19_reg_1203;
        p_Result_2_reg_1184_pp0_iter1_reg <= p_Result_2_reg_1184;
        tmp1_reg_1147_pp0_iter1_reg <= tmp1_reg_1147;
        tmp_1_reg_1189_pp0_iter1_reg <= tmp_1_reg_1189;
        tmp_numPrbu_V_reg_1193_pp0_iter1_reg <= tmp_numPrbu_V_reg_1193;
        tmp_reg_1143 <= tmp_nbreadreq_fu_258_p3;
        tmp_reg_1143_pp0_iter1_reg <= tmp_reg_1143;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln879_fu_359_p2 == 1'd1) & (tmp_nbreadreq_fu_258_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_Result_2_fu_376_p4 == 2'd1))) begin
        icmp_ln63_reg_1217 <= grp_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_258_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln879_reg_1180 <= icmp_ln879_fu_359_p2;
        tmp1_reg_1147 <= L1_axis_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_fu_404_p2 == 1'd1) & (icmp_ln879_fu_359_p2 == 1'd1) & (tmp_nbreadreq_fu_258_p3 == 1'd1) & (tmp_1_fu_386_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_Result_2_fu_376_p4 == 2'd3))) begin
        icmp_ln899_reg_1209 <= icmp_ln899_fu_424_p2;
        p_Result_19_reg_1203 <= {{L1_axis_V_TDATA[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln879_fu_359_p2 == 1'd1) & (tmp_nbreadreq_fu_258_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_Result_2_fu_376_p4 == 2'd2))) begin
        icmp_ln93_reg_1213 <= grp_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln899_reg_1209_pp0_iter10_reg == 1'd1) & (icmp_ln125_reg_1199_pp0_iter10_reg == 1'd1) & (icmp_ln879_reg_1180_pp0_iter10_reg == 1'd1) & (tmp_reg_1143_pp0_iter10_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (p_Result_2_reg_1184_pp0_iter10_reg == 2'd3))) begin
        numMatrix_V <= select_ln895_fu_567_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((count_load_load_fu_581_p1 == 1'd1) & (icmp_ln125_reg_1199_pp0_iter10_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter10_reg == 1'd1) & (icmp_ln879_reg_1180_pp0_iter10_reg == 1'd1) & (tmp_reg_1143_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (p_Result_2_reg_1184_pp0_iter10_reg == 2'd3))) begin
        or_ln139_reg_1234 <= or_ln139_fu_607_p2;
        tmp_V_2_reg_1229 <= numMatrix_V;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln879_fu_359_p2 == 1'd1) & (tmp_nbreadreq_fu_258_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_2_reg_1184 <= {{L1_axis_V_TDATA[53:52]}};
        tmp_1_reg_1189 <= L1_axis_V_TDATA[32'd43];
        tmp_numPrbu_V_reg_1193 <= section_hdr_numPrbu_s;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln93_reg_1213_pp0_iter9_reg == 1'd1) & (icmp_ln879_reg_1180_pp0_iter9_reg == 1'd1) & (tmp_reg_1143_pp0_iter9_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (p_Result_2_reg_1184_pp0_iter9_reg == 2'd2))) begin
        prb_bit_V <= {{tmp1_reg_1147_pp0_iter9_reg[14:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_328_p2 == 1'd1) & (icmp_ln879_fu_359_p2 == 1'd1) & (tmp_nbreadreq_fu_258_p3 == 1'd1) & (tmp_1_fu_386_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_Result_2_fu_376_p4 == 2'd2))) begin
        section_hdr_numPrbu_s <= {{L1_axis_V_TDATA[20:13]}};
        value_V <= {{L1_axis_V_TDATA[20:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln93_reg_1213_pp0_iter10_reg == 1'd1) & (icmp_ln879_reg_1180_pp0_iter10_reg == 1'd1) & (tmp_reg_1143_pp0_iter10_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (p_Result_2_reg_1184_pp0_iter10_reg == 2'd2))) begin
        section_hdr_rb_V <= tmp1_reg_1147_pp0_iter10_reg[32'd30];
        section_hdr_reMask_V <= {{tmp1_reg_1147_pp0_iter10_reg[12:1]}};
        section_hdr_sectionI <= {{tmp1_reg_1147_pp0_iter10_reg[42:31]}};
        section_hdr_startPrb <= {{tmp1_reg_1147_pp0_iter10_reg[28:21]}};
        section_hdr_symInc_V <= tmp1_reg_1147_pp0_iter10_reg[32'd29];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln879_reg_1180_pp0_iter10_reg == 1'd1) & (tmp_reg_1143_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_2_reg_1221 <= tmp1_reg_1147_pp0_iter10_reg[32'd51];
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_258_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L1_axis_V_TDATA_blk_n = L1_axis_V_TVALID;
    end else begin
        L1_axis_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_258_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        L1_axis_V_TREADY = 1'b1;
    end else begin
        L1_axis_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (1'b1 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (icmp_ln63_reg_1217_pp0_iter11_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd1))) begin
        application_header_V_TDATA_blk_n = application_header_V_TREADY;
    end else begin
        application_header_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op205_write_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        application_header_V_TVALID = 1'b1;
    end else begin
        application_header_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (icmp_ln125_reg_1199_pp0_iter11_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd3))) begin
        extension_header_V_TDATA_blk_n = extension_header_V_TREADY;
    end else begin
        extension_header_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op166_write_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        extension_header_V_TVALID = 1'b1;
    end else begin
        extension_header_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_430_ce = 1'b1;
    end else begin
        grp_fu_430_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (tmp_2_reg_1221 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd0) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        mux_config_V_V_TDATA_blk_n = mux_config_V_V_TREADY;
    end else begin
        mux_config_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op152_write_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        mux_config_V_V_TVALID = 1'b1;
    end else begin
        mux_config_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (count_load_reg_1225 == 1'd1) & (icmp_ln125_reg_1199_pp0_iter11_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (or_ln139_reg_1234 == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd3))) begin
        numBeams_V_V_TDATA_blk_n = numBeams_V_V_TREADY;
    end else begin
        numBeams_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op169_write_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        numBeams_V_V_TVALID = 1'b1;
    end else begin
        numBeams_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (icmp_ln93_reg_1213_pp0_iter11_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd2))) begin
        rtcid_V_V_TDATA_blk_n = rtcid_V_V_TREADY;
    end else begin
        rtcid_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op179_write_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        rtcid_V_V_TVALID = 1'b1;
    end else begin
        rtcid_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (icmp_ln93_reg_1213_pp0_iter11_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter11_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd2))) begin
        section_header_V_TDATA_blk_n = section_header_V_TREADY;
    end else begin
        section_header_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op187_write_state13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        section_header_V_TVALID = 1'b1;
    end else begin
        section_header_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign CDATA_COUNTER_V = (cplane_data_counter_s + 8'd1);

assign add_ln301_fu_561_p2 = (3'd1 + trunc_ln301_fu_557_p1);

assign add_ln700_fu_895_p2 = (cplane_data_counter_s + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((tmp_nbreadreq_fu_258_p3 == 1'd1) & (1'b0 == L1_axis_V_TVALID) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((tmp_nbreadreq_fu_258_p3 == 1'd1) & (1'b0 == L1_axis_V_TVALID) & (1'b1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((tmp_nbreadreq_fu_258_p3 == 1'd1) & (1'b0 == L1_axis_V_TVALID) & (1'b1 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_io = (((ap_predicate_op205_write_state13 == 1'b1) & (application_header_V_TREADY == 1'b0)) | ((ap_predicate_op187_write_state13 == 1'b1) & (section_header_V_TREADY == 1'b0)) | ((ap_predicate_op179_write_state13 == 1'b1) & (rtcid_V_V_TREADY == 1'b0)) | ((ap_predicate_op169_write_state13 == 1'b1) & (numBeams_V_V_TREADY == 1'b0)) | ((ap_predicate_op166_write_state13 == 1'b1) & (extension_header_V_TREADY == 1'b0)) | ((ap_predicate_op152_write_state13 == 1'b1) & (mux_config_V_V_TREADY == 1'b0)));
end

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((tmp_nbreadreq_fu_258_p3 == 1'd1) & (1'b0 == L1_axis_V_TVALID));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1073 = ((tmp_1_reg_1189_pp0_iter10_reg == 1'd1) & (icmp_ln879_reg_1180_pp0_iter10_reg == 1'd1) & (tmp_reg_1143_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1));
end

always @ (*) begin
    ap_condition_1075 = ((count_load_load_fu_581_p1 == 1'd1) & (icmp_ln125_reg_1199_pp0_iter10_reg == 1'd1) & (p_Result_2_reg_1184_pp0_iter10_reg == 2'd3));
end

always @ (*) begin
    ap_condition_1084 = ((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op152_write_state13 = ((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (tmp_2_reg_1221 == 1'd1) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd0));
end

always @ (*) begin
    ap_predicate_op166_write_state13 = ((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (icmp_ln125_reg_1199_pp0_iter11_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter11_reg == 1'd1) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd3));
end

always @ (*) begin
    ap_predicate_op169_write_state13 = ((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (count_load_reg_1225 == 1'd1) & (icmp_ln125_reg_1199_pp0_iter11_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter11_reg == 1'd1) & (or_ln139_reg_1234 == 1'd0) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd3));
end

always @ (*) begin
    ap_predicate_op179_write_state13 = ((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (icmp_ln93_reg_1213_pp0_iter11_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter11_reg == 1'd1) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd2));
end

always @ (*) begin
    ap_predicate_op187_write_state13 = ((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (icmp_ln93_reg_1213_pp0_iter11_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter11_reg == 1'd1) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd2));
end

always @ (*) begin
    ap_predicate_op205_write_state13 = ((icmp_ln879_reg_1180_pp0_iter11_reg == 1'd1) & (tmp_reg_1143_pp0_iter11_reg == 1'd1) & (icmp_ln63_reg_1217_pp0_iter11_reg == 1'd1) & (tmp_1_reg_1189_pp0_iter11_reg == 1'd1) & (p_Result_2_reg_1184_pp0_iter11_reg == 2'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign application_header_V_TDATA = {{{{{{{{{{{{{{{{{{{{8'd0}, {grp_fu_340_p4}}}, {tmp_sectionType_V_fu_1112_p1}}}, {appn_hdr_numSections}}}, {tmp_startsymbolId_V_fu_1100_p1}}}, {appn_hdr_slotID_V}}}, {appn_hdr_subframeId_s}}}, {appn_hdr_frameId_V}}}, {appn_hdr_filterIndex}}}, {appn_hdr_payloadVers}}}, {appn_hdr_dataDirecti}};

assign count_load_load_fu_581_p1 = count;

assign extension_header_V_TDATA = {{{{{{{{{{{tmp_beamID_V_1_fu_927_p4}, {1'd0}}, {grp_fu_340_p4}}, {extn_hdr_bfWCompHdr_s}}, {extn_hdr_numBundPRB_s}}, {6'd0}}, {extn_hdr_RAD_V}}, {extn_hdr_disablebfW_s}}, {extn_hdr_extLen_V}}, {7'd11}}, {extn_hdr_ef_V}};

assign grp_fu_328_p2 = ((section_type_V_fu_365_p4 == 8'd1) ? 1'b1 : 1'b0);

assign grp_fu_340_p4 = {{tmp1_reg_1147_pp0_iter11_reg[42:35]}};

assign grp_fu_430_p1 = {{L1_axis_V_TDATA[23:16]}};

assign icmp_ln125_fu_404_p2 = ((section_type_V_fu_365_p4 == 8'd11) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_595_p2 = ((numMatrix_V > 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_359_p2 = ((p_Result_s_fu_349_p4 == 5'd13) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_601_p2 = ((numMatrix_V == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_551_p2 = ((prb_bit_V == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_424_p2 = ((value_V < 8'd21) ? 1'b1 : 1'b0);

assign l1toc_stateout_V = state_V;

assign mux_config_V_V_TDATA = {{tmp_4_fu_861_p5}, {mux_configs_V[47:0]}};

assign numBeams_V_V_TDATA = tmp_V_2_reg_1229;

assign or_ln139_fu_607_p2 = (icmp_ln891_fu_601_p2 | icmp_ln139_fu_595_p2);

assign p_Result_21_fu_908_p5 = {{tmp_4_fu_861_p5}, {mux_configs_V[47:0]}};

assign p_Result_2_fu_376_p4 = {{L1_axis_V_TDATA[53:52]}};

assign p_Result_5_fu_821_p4 = {{tmp1_reg_1147_pp0_iter11_reg[50:39]}};

assign p_Result_6_fu_834_p4 = {{tmp1_reg_1147_pp0_iter11_reg[38:27]}};

assign p_Result_7_fu_843_p4 = {{tmp1_reg_1147_pp0_iter11_reg[26:15]}};

assign p_Result_8_fu_852_p4 = {{tmp1_reg_1147_pp0_iter11_reg[14:3]}};

assign p_Result_s_139_fu_873_p5 = {{mux_configs_V[95:48]}, {tmp_4_fu_861_p5}};

assign p_Result_s_fu_349_p4 = {{L1_axis_V_TDATA[63:59]}};

assign rtcid_V_V_TDATA = {{tmp1_reg_1147_pp0_iter11_reg[22:7]}};

assign section_header_V_TDATA = {{{{{{{{{tmp_ef_V_fu_1009_p3}, {tmp_beamID_V_fu_1000_p4}}, {tmp_numSymbol_V_fu_991_p4}}, {section_hdr_reMask_V}}, {tmp_numPrbu_V_reg_1193_pp0_iter11_reg}}, {tmp_startPrbu_V_fu_1042_p1}}, {section_hdr_symInc_V}}, {section_hdr_rb_V}}, {section_hdr_sectionI}};

assign section_type_V_fu_365_p4 = {{L1_axis_V_TDATA[51:44]}};

assign select_ln895_fu_567_p3 = ((icmp_ln895_fu_551_p2[0:0] === 1'b1) ? trunc_ln301_fu_557_p1 : add_ln301_fu_561_p2);

assign tmp_1_fu_386_p3 = L1_axis_V_TDATA[32'd43];

assign tmp_4_fu_861_p5 = {{{{p_Result_8_fu_852_p4}, {p_Result_7_fu_843_p4}}, {p_Result_6_fu_834_p4}}, {p_Result_5_fu_821_p4}};

assign tmp_beamID_V_1_fu_927_p4 = {{tmp1_reg_1147_pp0_iter11_reg[34:20]}};

assign tmp_beamID_V_fu_1000_p4 = {{tmp1_reg_1147_pp0_iter11_reg[38:24]}};

assign tmp_ef_V_fu_1009_p3 = tmp1_reg_1147_pp0_iter11_reg[32'd23];

assign tmp_nbreadreq_fu_258_p3 = L1_axis_V_TVALID;

assign tmp_numSymbol_V_fu_991_p4 = {{tmp1_reg_1147_pp0_iter11_reg[42:39]}};

assign tmp_sectionType_V_fu_1112_p1 = appn_hdr_sectionType;

assign tmp_startPrbu_V_fu_1042_p1 = section_hdr_startPrb;

assign tmp_startsymbolId_V_fu_1100_p1 = appn_hdr_startsymbol;

assign trunc_ln301_fu_557_p1 = grp_fu_430_p2[2:0];

endmodule //L1toORAN
