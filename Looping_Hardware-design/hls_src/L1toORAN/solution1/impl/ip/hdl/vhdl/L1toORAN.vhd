-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity L1toORAN is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    L1_axis_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    L1_axis_V_TVALID : IN STD_LOGIC;
    L1_axis_V_TREADY : OUT STD_LOGIC;
    application_header_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    application_header_V_TVALID : OUT STD_LOGIC;
    application_header_V_TREADY : IN STD_LOGIC;
    section_header_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    section_header_V_TVALID : OUT STD_LOGIC;
    section_header_V_TREADY : IN STD_LOGIC;
    extension_header_V_TDATA : OUT STD_LOGIC_VECTOR (71 downto 0);
    extension_header_V_TVALID : OUT STD_LOGIC;
    extension_header_V_TREADY : IN STD_LOGIC;
    mux_config_V_V_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
    mux_config_V_V_TVALID : OUT STD_LOGIC;
    mux_config_V_V_TREADY : IN STD_LOGIC;
    numBeams_V_V_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    numBeams_V_V_TVALID : OUT STD_LOGIC;
    numBeams_V_V_TREADY : IN STD_LOGIC;
    l1toc_stateout_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    rtcid_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    rtcid_V_V_TVALID : OUT STD_LOGIC;
    rtcid_V_V_TREADY : IN STD_LOGIC;
    CDATA_COUNTER_V : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of L1toORAN is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "L1toORAN,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=3.200000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.770500,HLS_SYN_LAT=12,HLS_SYN_TPT=1,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1177,HLS_SYN_LUT=629,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_15 : STD_LOGIC_VECTOR (7 downto 0) := "00010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal state_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal section_hdr_numPrbu_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal appn_hdr_dataDirecti : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal appn_hdr_payloadVers : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal appn_hdr_filterIndex : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal appn_hdr_frameId_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal appn_hdr_subframeId_s : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal appn_hdr_slotID_V : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal appn_hdr_startsymbol : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal appn_hdr_numSections : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal appn_hdr_sectionType : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal section_hdr_sectionI : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal section_hdr_rb_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal section_hdr_symInc_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal section_hdr_startPrb : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal section_hdr_reMask_V : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal count : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal value_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal prb_bit_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal extn_hdr_ef_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal extn_hdr_extLen_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal extn_hdr_disablebfW_s : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal extn_hdr_RAD_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal extn_hdr_numBundPRB_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal extn_hdr_bfWCompHdr_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal numMatrix_V : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal mux_configs_V : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal cplane_data_counter_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal L1_axis_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_nbreadreq_fu_258_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal application_header_V_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal tmp_reg_1143 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1143_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_1184 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_reg_1184_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_reg_1189 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1189_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal section_header_V_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln93_reg_1213 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_1213_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal extension_header_V_TDATA_blk_n : STD_LOGIC;
    signal icmp_ln125_reg_1199 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1199_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mux_config_V_V_TDATA_blk_n : STD_LOGIC;
    signal tmp_2_reg_1221 : STD_LOGIC_VECTOR (0 downto 0);
    signal numBeams_V_V_TDATA_blk_n : STD_LOGIC;
    signal count_load_reg_1225 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_reg_1234 : STD_LOGIC_VECTOR (0 downto 0);
    signal rtcid_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_predicate_op152_write_state13 : BOOLEAN;
    signal ap_predicate_op166_write_state13 : BOOLEAN;
    signal ap_predicate_op169_write_state13 : BOOLEAN;
    signal ap_predicate_op179_write_state13 : BOOLEAN;
    signal ap_predicate_op187_write_state13 : BOOLEAN;
    signal ap_predicate_op205_write_state13 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_reg_1143_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1143_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1143_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1143_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1143_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1143_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1143_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1143_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1143_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1143_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_reg_1147 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_reg_1147_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_reg_1147_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_reg_1147_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_reg_1147_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_reg_1147_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_reg_1147_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_reg_1147_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_reg_1147_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_reg_1147_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_reg_1147_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_reg_1147_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln879_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1180_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_376_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_reg_1184_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_reg_1184_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_reg_1184_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_reg_1184_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_reg_1184_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_reg_1184_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_reg_1184_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_reg_1184_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_reg_1184_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_2_reg_1184_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_386_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1189_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1189_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1189_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1189_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1189_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1189_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1189_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1189_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1189_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1189_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_numPrbu_V_reg_1193 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_numPrbu_V_reg_1193_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_numPrbu_V_reg_1193_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_numPrbu_V_reg_1193_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_numPrbu_V_reg_1193_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_numPrbu_V_reg_1193_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_numPrbu_V_reg_1193_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_numPrbu_V_reg_1193_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_numPrbu_V_reg_1193_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_numPrbu_V_reg_1193_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_numPrbu_V_reg_1193_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_numPrbu_V_reg_1193_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln125_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1199_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1199_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1199_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1199_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1199_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1199_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1199_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1199_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1199_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_1199_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_19_reg_1203 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_reg_1203_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_reg_1203_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_reg_1203_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_reg_1203_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_reg_1203_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_reg_1203_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_reg_1203_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_reg_1203_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_reg_1203_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_19_reg_1203_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln899_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1209 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1209_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1209_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1209_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1209_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1209_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1209_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1209_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1209_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1209_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1209_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_1213_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_1213_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_1213_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_1213_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_1213_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_1213_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_1213_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_1213_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_1213_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_1213_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1217_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal count_load_load_fu_581_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_reg_1229 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln139_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal select_ln895_fu_567_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_s_139_fu_873_p5 : STD_LOGIC_VECTOR (95 downto 0);
    signal p_Result_21_fu_908_p5 : STD_LOGIC_VECTOR (95 downto 0);
    signal add_ln700_fu_895_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal section_type_V_fu_365_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_349_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_430_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_430_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln301_fu_557_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln301_fu_561_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln139_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_8_fu_852_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_7_fu_843_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_6_fu_834_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_5_fu_821_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_861_p5 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_beamID_V_1_fu_927_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_340_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_ef_V_fu_1009_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_beamID_V_fu_1000_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_numSymbol_V_fu_991_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_startPrbu_V_fu_1042_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_sectionType_V_fu_1112_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_startsymbolId_V_fu_1100_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_430_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_1075 : BOOLEAN;
    signal ap_condition_1073 : BOOLEAN;
    signal ap_condition_1084 : BOOLEAN;

    component L1toORAN_udiv_8ns_8ns_3_12_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;



begin
    L1toORAN_udiv_8ns_8ns_3_12_1_U1 : component L1toORAN_udiv_8ns_8ns_3_12_1
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => section_hdr_numPrbu_s,
        din1 => grp_fu_430_p1,
        ce => grp_fu_430_ce,
        dout => grp_fu_430_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    state_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                state_V <= ap_const_lv2_0;
            else
                if (((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
                    state_V <= p_Result_2_reg_1184_pp0_iter11_reg;
                end if; 
            end if;
        end if;
    end process;


    count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1073)) then
                if (((icmp_ln93_reg_1213_pp0_iter10_reg = ap_const_lv1_1) and (p_Result_2_reg_1184_pp0_iter10_reg = ap_const_lv2_2))) then 
                    count <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_condition_1075)) then 
                    count <= ap_const_lv1_0;
                end if;
            end if; 
        end if;
    end process;

    mux_configs_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1084)) then
                if ((tmp_2_reg_1221 = ap_const_lv1_1)) then 
                    mux_configs_V <= p_Result_21_fu_908_p5;
                elsif ((tmp_2_reg_1221 = ap_const_lv1_0)) then 
                    mux_configs_V <= p_Result_s_139_fu_873_p5;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln63_reg_1217_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln879_reg_1180_pp0_iter10_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter10_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (p_Result_2_reg_1184_pp0_iter10_reg = ap_const_lv2_1))) then
                appn_hdr_dataDirecti <= tmp1_reg_1147_pp0_iter10_reg(42 downto 42);
                appn_hdr_filterIndex <= tmp1_reg_1147_pp0_iter10_reg(38 downto 35);
                appn_hdr_frameId_V <= tmp1_reg_1147_pp0_iter10_reg(34 downto 27);
                appn_hdr_numSections <= tmp1_reg_1147_pp0_iter10_reg(12 downto 5);
                appn_hdr_payloadVers <= tmp1_reg_1147_pp0_iter10_reg(41 downto 39);
                appn_hdr_sectionType <= ap_const_lv1_1;
                appn_hdr_slotID_V <= tmp1_reg_1147_pp0_iter10_reg(22 downto 17);
                appn_hdr_startsymbol <= tmp1_reg_1147_pp0_iter10_reg(16 downto 13);
                appn_hdr_subframeId_s <= tmp1_reg_1147_pp0_iter10_reg(26 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln125_reg_1199_pp0_iter10_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln879_reg_1180_pp0_iter10_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_Result_2_reg_1184_pp0_iter10_reg = ap_const_lv2_3))) then
                count_load_reg_1225 <= count;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (tmp_2_reg_1221 = ap_const_lv1_0) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then
                cplane_data_counter_s <= add_ln700_fu_895_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln125_reg_1199_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln879_reg_1180_pp0_iter10_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter10_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (p_Result_2_reg_1184_pp0_iter10_reg = ap_const_lv2_3))) then
                extn_hdr_RAD_V <= tmp1_reg_1147_pp0_iter10_reg(24 downto 24);
                extn_hdr_bfWCompHdr_s <= tmp1_reg_1147_pp0_iter10_reg(15 downto 8);
                extn_hdr_disablebfW_s <= tmp1_reg_1147_pp0_iter10_reg(25 downto 25);
                extn_hdr_ef_V <= tmp1_reg_1147_pp0_iter10_reg(42 downto 42);
                extn_hdr_extLen_V <= tmp1_reg_1147_pp0_iter10_reg(41 downto 26);
                extn_hdr_numBundPRB_s <= p_Result_19_reg_1203_pp0_iter10_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_fu_359_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (p_Result_2_fu_376_p4 = ap_const_lv2_3))) then
                icmp_ln125_reg_1199 <= icmp_ln125_fu_404_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln125_reg_1199_pp0_iter10_reg <= icmp_ln125_reg_1199_pp0_iter9_reg;
                icmp_ln125_reg_1199_pp0_iter11_reg <= icmp_ln125_reg_1199_pp0_iter10_reg;
                icmp_ln125_reg_1199_pp0_iter2_reg <= icmp_ln125_reg_1199_pp0_iter1_reg;
                icmp_ln125_reg_1199_pp0_iter3_reg <= icmp_ln125_reg_1199_pp0_iter2_reg;
                icmp_ln125_reg_1199_pp0_iter4_reg <= icmp_ln125_reg_1199_pp0_iter3_reg;
                icmp_ln125_reg_1199_pp0_iter5_reg <= icmp_ln125_reg_1199_pp0_iter4_reg;
                icmp_ln125_reg_1199_pp0_iter6_reg <= icmp_ln125_reg_1199_pp0_iter5_reg;
                icmp_ln125_reg_1199_pp0_iter7_reg <= icmp_ln125_reg_1199_pp0_iter6_reg;
                icmp_ln125_reg_1199_pp0_iter8_reg <= icmp_ln125_reg_1199_pp0_iter7_reg;
                icmp_ln125_reg_1199_pp0_iter9_reg <= icmp_ln125_reg_1199_pp0_iter8_reg;
                icmp_ln63_reg_1217_pp0_iter10_reg <= icmp_ln63_reg_1217_pp0_iter9_reg;
                icmp_ln63_reg_1217_pp0_iter11_reg <= icmp_ln63_reg_1217_pp0_iter10_reg;
                icmp_ln63_reg_1217_pp0_iter2_reg <= icmp_ln63_reg_1217_pp0_iter1_reg;
                icmp_ln63_reg_1217_pp0_iter3_reg <= icmp_ln63_reg_1217_pp0_iter2_reg;
                icmp_ln63_reg_1217_pp0_iter4_reg <= icmp_ln63_reg_1217_pp0_iter3_reg;
                icmp_ln63_reg_1217_pp0_iter5_reg <= icmp_ln63_reg_1217_pp0_iter4_reg;
                icmp_ln63_reg_1217_pp0_iter6_reg <= icmp_ln63_reg_1217_pp0_iter5_reg;
                icmp_ln63_reg_1217_pp0_iter7_reg <= icmp_ln63_reg_1217_pp0_iter6_reg;
                icmp_ln63_reg_1217_pp0_iter8_reg <= icmp_ln63_reg_1217_pp0_iter7_reg;
                icmp_ln63_reg_1217_pp0_iter9_reg <= icmp_ln63_reg_1217_pp0_iter8_reg;
                icmp_ln879_reg_1180_pp0_iter10_reg <= icmp_ln879_reg_1180_pp0_iter9_reg;
                icmp_ln879_reg_1180_pp0_iter11_reg <= icmp_ln879_reg_1180_pp0_iter10_reg;
                icmp_ln879_reg_1180_pp0_iter2_reg <= icmp_ln879_reg_1180_pp0_iter1_reg;
                icmp_ln879_reg_1180_pp0_iter3_reg <= icmp_ln879_reg_1180_pp0_iter2_reg;
                icmp_ln879_reg_1180_pp0_iter4_reg <= icmp_ln879_reg_1180_pp0_iter3_reg;
                icmp_ln879_reg_1180_pp0_iter5_reg <= icmp_ln879_reg_1180_pp0_iter4_reg;
                icmp_ln879_reg_1180_pp0_iter6_reg <= icmp_ln879_reg_1180_pp0_iter5_reg;
                icmp_ln879_reg_1180_pp0_iter7_reg <= icmp_ln879_reg_1180_pp0_iter6_reg;
                icmp_ln879_reg_1180_pp0_iter8_reg <= icmp_ln879_reg_1180_pp0_iter7_reg;
                icmp_ln879_reg_1180_pp0_iter9_reg <= icmp_ln879_reg_1180_pp0_iter8_reg;
                icmp_ln899_reg_1209_pp0_iter10_reg <= icmp_ln899_reg_1209_pp0_iter9_reg;
                icmp_ln899_reg_1209_pp0_iter2_reg <= icmp_ln899_reg_1209_pp0_iter1_reg;
                icmp_ln899_reg_1209_pp0_iter3_reg <= icmp_ln899_reg_1209_pp0_iter2_reg;
                icmp_ln899_reg_1209_pp0_iter4_reg <= icmp_ln899_reg_1209_pp0_iter3_reg;
                icmp_ln899_reg_1209_pp0_iter5_reg <= icmp_ln899_reg_1209_pp0_iter4_reg;
                icmp_ln899_reg_1209_pp0_iter6_reg <= icmp_ln899_reg_1209_pp0_iter5_reg;
                icmp_ln899_reg_1209_pp0_iter7_reg <= icmp_ln899_reg_1209_pp0_iter6_reg;
                icmp_ln899_reg_1209_pp0_iter8_reg <= icmp_ln899_reg_1209_pp0_iter7_reg;
                icmp_ln899_reg_1209_pp0_iter9_reg <= icmp_ln899_reg_1209_pp0_iter8_reg;
                icmp_ln93_reg_1213_pp0_iter10_reg <= icmp_ln93_reg_1213_pp0_iter9_reg;
                icmp_ln93_reg_1213_pp0_iter11_reg <= icmp_ln93_reg_1213_pp0_iter10_reg;
                icmp_ln93_reg_1213_pp0_iter2_reg <= icmp_ln93_reg_1213_pp0_iter1_reg;
                icmp_ln93_reg_1213_pp0_iter3_reg <= icmp_ln93_reg_1213_pp0_iter2_reg;
                icmp_ln93_reg_1213_pp0_iter4_reg <= icmp_ln93_reg_1213_pp0_iter3_reg;
                icmp_ln93_reg_1213_pp0_iter5_reg <= icmp_ln93_reg_1213_pp0_iter4_reg;
                icmp_ln93_reg_1213_pp0_iter6_reg <= icmp_ln93_reg_1213_pp0_iter5_reg;
                icmp_ln93_reg_1213_pp0_iter7_reg <= icmp_ln93_reg_1213_pp0_iter6_reg;
                icmp_ln93_reg_1213_pp0_iter8_reg <= icmp_ln93_reg_1213_pp0_iter7_reg;
                icmp_ln93_reg_1213_pp0_iter9_reg <= icmp_ln93_reg_1213_pp0_iter8_reg;
                p_Result_19_reg_1203_pp0_iter10_reg <= p_Result_19_reg_1203_pp0_iter9_reg;
                p_Result_19_reg_1203_pp0_iter2_reg <= p_Result_19_reg_1203_pp0_iter1_reg;
                p_Result_19_reg_1203_pp0_iter3_reg <= p_Result_19_reg_1203_pp0_iter2_reg;
                p_Result_19_reg_1203_pp0_iter4_reg <= p_Result_19_reg_1203_pp0_iter3_reg;
                p_Result_19_reg_1203_pp0_iter5_reg <= p_Result_19_reg_1203_pp0_iter4_reg;
                p_Result_19_reg_1203_pp0_iter6_reg <= p_Result_19_reg_1203_pp0_iter5_reg;
                p_Result_19_reg_1203_pp0_iter7_reg <= p_Result_19_reg_1203_pp0_iter6_reg;
                p_Result_19_reg_1203_pp0_iter8_reg <= p_Result_19_reg_1203_pp0_iter7_reg;
                p_Result_19_reg_1203_pp0_iter9_reg <= p_Result_19_reg_1203_pp0_iter8_reg;
                p_Result_2_reg_1184_pp0_iter10_reg <= p_Result_2_reg_1184_pp0_iter9_reg;
                p_Result_2_reg_1184_pp0_iter11_reg <= p_Result_2_reg_1184_pp0_iter10_reg;
                p_Result_2_reg_1184_pp0_iter2_reg <= p_Result_2_reg_1184_pp0_iter1_reg;
                p_Result_2_reg_1184_pp0_iter3_reg <= p_Result_2_reg_1184_pp0_iter2_reg;
                p_Result_2_reg_1184_pp0_iter4_reg <= p_Result_2_reg_1184_pp0_iter3_reg;
                p_Result_2_reg_1184_pp0_iter5_reg <= p_Result_2_reg_1184_pp0_iter4_reg;
                p_Result_2_reg_1184_pp0_iter6_reg <= p_Result_2_reg_1184_pp0_iter5_reg;
                p_Result_2_reg_1184_pp0_iter7_reg <= p_Result_2_reg_1184_pp0_iter6_reg;
                p_Result_2_reg_1184_pp0_iter8_reg <= p_Result_2_reg_1184_pp0_iter7_reg;
                p_Result_2_reg_1184_pp0_iter9_reg <= p_Result_2_reg_1184_pp0_iter8_reg;
                tmp1_reg_1147_pp0_iter10_reg <= tmp1_reg_1147_pp0_iter9_reg;
                tmp1_reg_1147_pp0_iter11_reg <= tmp1_reg_1147_pp0_iter10_reg;
                tmp1_reg_1147_pp0_iter2_reg <= tmp1_reg_1147_pp0_iter1_reg;
                tmp1_reg_1147_pp0_iter3_reg <= tmp1_reg_1147_pp0_iter2_reg;
                tmp1_reg_1147_pp0_iter4_reg <= tmp1_reg_1147_pp0_iter3_reg;
                tmp1_reg_1147_pp0_iter5_reg <= tmp1_reg_1147_pp0_iter4_reg;
                tmp1_reg_1147_pp0_iter6_reg <= tmp1_reg_1147_pp0_iter5_reg;
                tmp1_reg_1147_pp0_iter7_reg <= tmp1_reg_1147_pp0_iter6_reg;
                tmp1_reg_1147_pp0_iter8_reg <= tmp1_reg_1147_pp0_iter7_reg;
                tmp1_reg_1147_pp0_iter9_reg <= tmp1_reg_1147_pp0_iter8_reg;
                tmp_1_reg_1189_pp0_iter10_reg <= tmp_1_reg_1189_pp0_iter9_reg;
                tmp_1_reg_1189_pp0_iter11_reg <= tmp_1_reg_1189_pp0_iter10_reg;
                tmp_1_reg_1189_pp0_iter2_reg <= tmp_1_reg_1189_pp0_iter1_reg;
                tmp_1_reg_1189_pp0_iter3_reg <= tmp_1_reg_1189_pp0_iter2_reg;
                tmp_1_reg_1189_pp0_iter4_reg <= tmp_1_reg_1189_pp0_iter3_reg;
                tmp_1_reg_1189_pp0_iter5_reg <= tmp_1_reg_1189_pp0_iter4_reg;
                tmp_1_reg_1189_pp0_iter6_reg <= tmp_1_reg_1189_pp0_iter5_reg;
                tmp_1_reg_1189_pp0_iter7_reg <= tmp_1_reg_1189_pp0_iter6_reg;
                tmp_1_reg_1189_pp0_iter8_reg <= tmp_1_reg_1189_pp0_iter7_reg;
                tmp_1_reg_1189_pp0_iter9_reg <= tmp_1_reg_1189_pp0_iter8_reg;
                tmp_numPrbu_V_reg_1193_pp0_iter10_reg <= tmp_numPrbu_V_reg_1193_pp0_iter9_reg;
                tmp_numPrbu_V_reg_1193_pp0_iter11_reg <= tmp_numPrbu_V_reg_1193_pp0_iter10_reg;
                tmp_numPrbu_V_reg_1193_pp0_iter2_reg <= tmp_numPrbu_V_reg_1193_pp0_iter1_reg;
                tmp_numPrbu_V_reg_1193_pp0_iter3_reg <= tmp_numPrbu_V_reg_1193_pp0_iter2_reg;
                tmp_numPrbu_V_reg_1193_pp0_iter4_reg <= tmp_numPrbu_V_reg_1193_pp0_iter3_reg;
                tmp_numPrbu_V_reg_1193_pp0_iter5_reg <= tmp_numPrbu_V_reg_1193_pp0_iter4_reg;
                tmp_numPrbu_V_reg_1193_pp0_iter6_reg <= tmp_numPrbu_V_reg_1193_pp0_iter5_reg;
                tmp_numPrbu_V_reg_1193_pp0_iter7_reg <= tmp_numPrbu_V_reg_1193_pp0_iter6_reg;
                tmp_numPrbu_V_reg_1193_pp0_iter8_reg <= tmp_numPrbu_V_reg_1193_pp0_iter7_reg;
                tmp_numPrbu_V_reg_1193_pp0_iter9_reg <= tmp_numPrbu_V_reg_1193_pp0_iter8_reg;
                tmp_reg_1143_pp0_iter10_reg <= tmp_reg_1143_pp0_iter9_reg;
                tmp_reg_1143_pp0_iter11_reg <= tmp_reg_1143_pp0_iter10_reg;
                tmp_reg_1143_pp0_iter2_reg <= tmp_reg_1143_pp0_iter1_reg;
                tmp_reg_1143_pp0_iter3_reg <= tmp_reg_1143_pp0_iter2_reg;
                tmp_reg_1143_pp0_iter4_reg <= tmp_reg_1143_pp0_iter3_reg;
                tmp_reg_1143_pp0_iter5_reg <= tmp_reg_1143_pp0_iter4_reg;
                tmp_reg_1143_pp0_iter6_reg <= tmp_reg_1143_pp0_iter5_reg;
                tmp_reg_1143_pp0_iter7_reg <= tmp_reg_1143_pp0_iter6_reg;
                tmp_reg_1143_pp0_iter8_reg <= tmp_reg_1143_pp0_iter7_reg;
                tmp_reg_1143_pp0_iter9_reg <= tmp_reg_1143_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln125_reg_1199_pp0_iter1_reg <= icmp_ln125_reg_1199;
                icmp_ln63_reg_1217_pp0_iter1_reg <= icmp_ln63_reg_1217;
                icmp_ln879_reg_1180_pp0_iter1_reg <= icmp_ln879_reg_1180;
                icmp_ln899_reg_1209_pp0_iter1_reg <= icmp_ln899_reg_1209;
                icmp_ln93_reg_1213_pp0_iter1_reg <= icmp_ln93_reg_1213;
                p_Result_19_reg_1203_pp0_iter1_reg <= p_Result_19_reg_1203;
                p_Result_2_reg_1184_pp0_iter1_reg <= p_Result_2_reg_1184;
                tmp1_reg_1147_pp0_iter1_reg <= tmp1_reg_1147;
                tmp_1_reg_1189_pp0_iter1_reg <= tmp_1_reg_1189;
                tmp_numPrbu_V_reg_1193_pp0_iter1_reg <= tmp_numPrbu_V_reg_1193;
                tmp_reg_1143 <= tmp_nbreadreq_fu_258_p3;
                tmp_reg_1143_pp0_iter1_reg <= tmp_reg_1143;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_fu_359_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (p_Result_2_fu_376_p4 = ap_const_lv2_1))) then
                icmp_ln63_reg_1217 <= grp_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_reg_1180 <= icmp_ln879_fu_359_p2;
                tmp1_reg_1147 <= L1_axis_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln125_fu_404_p2 = ap_const_lv1_1) and (icmp_ln879_fu_359_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (tmp_1_fu_386_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (p_Result_2_fu_376_p4 = ap_const_lv2_3))) then
                icmp_ln899_reg_1209 <= icmp_ln899_fu_424_p2;
                p_Result_19_reg_1203 <= L1_axis_V_TDATA(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_fu_359_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (p_Result_2_fu_376_p4 = ap_const_lv2_2))) then
                icmp_ln93_reg_1213 <= grp_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln899_reg_1209_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln125_reg_1199_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln879_reg_1180_pp0_iter10_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter10_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (p_Result_2_reg_1184_pp0_iter10_reg = ap_const_lv2_3))) then
                numMatrix_V <= select_ln895_fu_567_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((count_load_load_fu_581_p1 = ap_const_lv1_1) and (icmp_ln125_reg_1199_pp0_iter10_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln879_reg_1180_pp0_iter10_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_Result_2_reg_1184_pp0_iter10_reg = ap_const_lv2_3))) then
                or_ln139_reg_1234 <= or_ln139_fu_607_p2;
                tmp_V_2_reg_1229 <= numMatrix_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_fu_359_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Result_2_reg_1184 <= L1_axis_V_TDATA(53 downto 52);
                tmp_1_reg_1189 <= L1_axis_V_TDATA(43 downto 43);
                tmp_numPrbu_V_reg_1193 <= section_hdr_numPrbu_s;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_reg_1213_pp0_iter9_reg = ap_const_lv1_1) and (icmp_ln879_reg_1180_pp0_iter9_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter9_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (p_Result_2_reg_1184_pp0_iter9_reg = ap_const_lv2_2))) then
                prb_bit_V <= tmp1_reg_1147_pp0_iter9_reg(14 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_328_p2 = ap_const_lv1_1) and (icmp_ln879_fu_359_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (tmp_1_fu_386_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (p_Result_2_fu_376_p4 = ap_const_lv2_2))) then
                section_hdr_numPrbu_s <= L1_axis_V_TDATA(20 downto 13);
                value_V <= L1_axis_V_TDATA(20 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_reg_1213_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln879_reg_1180_pp0_iter10_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter10_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (p_Result_2_reg_1184_pp0_iter10_reg = ap_const_lv2_2))) then
                section_hdr_rb_V <= tmp1_reg_1147_pp0_iter10_reg(30 downto 30);
                section_hdr_reMask_V <= tmp1_reg_1147_pp0_iter10_reg(12 downto 1);
                section_hdr_sectionI <= tmp1_reg_1147_pp0_iter10_reg(42 downto 31);
                section_hdr_startPrb <= tmp1_reg_1147_pp0_iter10_reg(28 downto 21);
                section_hdr_symInc_V <= tmp1_reg_1147_pp0_iter10_reg(29 downto 29);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_1180_pp0_iter10_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_2_reg_1221 <= tmp1_reg_1147_pp0_iter10_reg(51 downto 51);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    CDATA_COUNTER_V <= std_logic_vector(unsigned(cplane_data_counter_s) + unsigned(ap_const_lv8_1));

    L1_axis_V_TDATA_blk_n_assign_proc : process(L1_axis_V_TVALID, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, tmp_nbreadreq_fu_258_p3)
    begin
        if (((tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L1_axis_V_TDATA_blk_n <= L1_axis_V_TVALID;
        else 
            L1_axis_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    L1_axis_V_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_258_p3, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L1_axis_V_TREADY <= ap_const_logic_1;
        else 
            L1_axis_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    add_ln301_fu_561_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(trunc_ln301_fu_557_p1));
    add_ln700_fu_895_p2 <= std_logic_vector(unsigned(cplane_data_counter_s) + unsigned(ap_const_lv8_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(L1_axis_V_TVALID, tmp_nbreadreq_fu_258_p3)
    begin
                ap_block_pp0_stage0_01001 <= ((tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (ap_const_logic_0 = L1_axis_V_TVALID) and (ap_const_logic_1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(L1_axis_V_TVALID, tmp_nbreadreq_fu_258_p3, ap_enable_reg_pp0_iter12, ap_block_state13_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state13_io) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (ap_const_logic_0 = L1_axis_V_TVALID) and (ap_const_logic_1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(L1_axis_V_TVALID, tmp_nbreadreq_fu_258_p3, ap_enable_reg_pp0_iter12, ap_block_state13_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state13_io) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1)) or ((tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (ap_const_logic_0 = L1_axis_V_TVALID) and (ap_const_logic_1 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_io_assign_proc : process(application_header_V_TREADY, section_header_V_TREADY, extension_header_V_TREADY, mux_config_V_V_TREADY, numBeams_V_V_TREADY, rtcid_V_V_TREADY, ap_predicate_op152_write_state13, ap_predicate_op166_write_state13, ap_predicate_op169_write_state13, ap_predicate_op179_write_state13, ap_predicate_op187_write_state13, ap_predicate_op205_write_state13)
    begin
                ap_block_state13_io <= (((ap_predicate_op205_write_state13 = ap_const_boolean_1) and (application_header_V_TREADY = ap_const_logic_0)) or ((ap_predicate_op187_write_state13 = ap_const_boolean_1) and (section_header_V_TREADY = ap_const_logic_0)) or ((ap_predicate_op179_write_state13 = ap_const_boolean_1) and (rtcid_V_V_TREADY = ap_const_logic_0)) or ((ap_predicate_op169_write_state13 = ap_const_boolean_1) and (numBeams_V_V_TREADY = ap_const_logic_0)) or ((ap_predicate_op166_write_state13 = ap_const_boolean_1) and (extension_header_V_TREADY = ap_const_logic_0)) or ((ap_predicate_op152_write_state13 = ap_const_boolean_1) and (mux_config_V_V_TREADY = ap_const_logic_0)));
    end process;

        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(L1_axis_V_TVALID, tmp_nbreadreq_fu_258_p3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((tmp_nbreadreq_fu_258_p3 = ap_const_lv1_1) and (ap_const_logic_0 = L1_axis_V_TVALID));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1073_assign_proc : process(ap_block_pp0_stage0_11001, tmp_reg_1143_pp0_iter10_reg, icmp_ln879_reg_1180_pp0_iter10_reg, tmp_1_reg_1189_pp0_iter10_reg, ap_enable_reg_pp0_iter11)
    begin
                ap_condition_1073 <= ((tmp_1_reg_1189_pp0_iter10_reg = ap_const_lv1_1) and (icmp_ln879_reg_1180_pp0_iter10_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1));
    end process;


    ap_condition_1075_assign_proc : process(p_Result_2_reg_1184_pp0_iter10_reg, icmp_ln125_reg_1199_pp0_iter10_reg, count_load_load_fu_581_p1)
    begin
                ap_condition_1075 <= ((count_load_load_fu_581_p1 = ap_const_lv1_1) and (icmp_ln125_reg_1199_pp0_iter10_reg = ap_const_lv1_1) and (p_Result_2_reg_1184_pp0_iter10_reg = ap_const_lv2_3));
    end process;


    ap_condition_1084_assign_proc : process(ap_enable_reg_pp0_iter12, tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, ap_block_pp0_stage0_11001)
    begin
                ap_condition_1084 <= ((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op152_write_state13_assign_proc : process(tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_2_reg_1221)
    begin
                ap_predicate_op152_write_state13 <= ((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (tmp_2_reg_1221 = ap_const_lv1_1) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_0));
    end process;


    ap_predicate_op166_write_state13_assign_proc : process(tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_1_reg_1189_pp0_iter11_reg, icmp_ln125_reg_1199_pp0_iter11_reg)
    begin
                ap_predicate_op166_write_state13 <= ((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (icmp_ln125_reg_1199_pp0_iter11_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter11_reg = ap_const_lv1_1) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_3));
    end process;


    ap_predicate_op169_write_state13_assign_proc : process(tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_1_reg_1189_pp0_iter11_reg, icmp_ln125_reg_1199_pp0_iter11_reg, count_load_reg_1225, or_ln139_reg_1234)
    begin
                ap_predicate_op169_write_state13 <= ((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (count_load_reg_1225 = ap_const_lv1_1) and (icmp_ln125_reg_1199_pp0_iter11_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter11_reg = ap_const_lv1_1) and (or_ln139_reg_1234 = ap_const_lv1_0) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_3));
    end process;


    ap_predicate_op179_write_state13_assign_proc : process(tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_1_reg_1189_pp0_iter11_reg, icmp_ln93_reg_1213_pp0_iter11_reg)
    begin
                ap_predicate_op179_write_state13 <= ((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (icmp_ln93_reg_1213_pp0_iter11_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter11_reg = ap_const_lv1_1) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_2));
    end process;


    ap_predicate_op187_write_state13_assign_proc : process(tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_1_reg_1189_pp0_iter11_reg, icmp_ln93_reg_1213_pp0_iter11_reg)
    begin
                ap_predicate_op187_write_state13 <= ((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (icmp_ln93_reg_1213_pp0_iter11_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter11_reg = ap_const_lv1_1) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_2));
    end process;


    ap_predicate_op205_write_state13_assign_proc : process(tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_1_reg_1189_pp0_iter11_reg, icmp_ln63_reg_1217_pp0_iter11_reg)
    begin
                ap_predicate_op205_write_state13 <= ((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (icmp_ln63_reg_1217_pp0_iter11_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter11_reg = ap_const_lv1_1) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_1));
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    application_header_V_TDATA <= ((((((((((ap_const_lv8_0 & grp_fu_340_p4) & tmp_sectionType_V_fu_1112_p1) & appn_hdr_numSections) & tmp_startsymbolId_V_fu_1100_p1) & appn_hdr_slotID_V) & appn_hdr_subframeId_s) & appn_hdr_frameId_V) & appn_hdr_filterIndex) & appn_hdr_payloadVers) & appn_hdr_dataDirecti);

    application_header_V_TDATA_blk_n_assign_proc : process(application_header_V_TREADY, ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_1_reg_1189_pp0_iter11_reg, icmp_ln63_reg_1217_pp0_iter11_reg)
    begin
        if (((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (icmp_ln63_reg_1217_pp0_iter11_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_1))) then 
            application_header_V_TDATA_blk_n <= application_header_V_TREADY;
        else 
            application_header_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    application_header_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter12, ap_predicate_op205_write_state13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op205_write_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            application_header_V_TVALID <= ap_const_logic_1;
        else 
            application_header_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    count_load_load_fu_581_p1 <= count;
    extension_header_V_TDATA <= ((((((((((tmp_beamID_V_1_fu_927_p4 & ap_const_lv1_0) & grp_fu_340_p4) & extn_hdr_bfWCompHdr_s) & extn_hdr_numBundPRB_s) & ap_const_lv6_0) & extn_hdr_RAD_V) & extn_hdr_disablebfW_s) & extn_hdr_extLen_V) & ap_const_lv7_B) & extn_hdr_ef_V);

    extension_header_V_TDATA_blk_n_assign_proc : process(extension_header_V_TREADY, ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_1_reg_1189_pp0_iter11_reg, icmp_ln125_reg_1199_pp0_iter11_reg)
    begin
        if (((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (icmp_ln125_reg_1199_pp0_iter11_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_3))) then 
            extension_header_V_TDATA_blk_n <= extension_header_V_TREADY;
        else 
            extension_header_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    extension_header_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter12, ap_predicate_op166_write_state13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op166_write_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            extension_header_V_TVALID <= ap_const_logic_1;
        else 
            extension_header_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_328_p2 <= "1" when (section_type_V_fu_365_p4 = ap_const_lv8_1) else "0";
    grp_fu_340_p4 <= tmp1_reg_1147_pp0_iter11_reg(42 downto 35);

    grp_fu_430_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_430_ce <= ap_const_logic_1;
        else 
            grp_fu_430_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_430_p1 <= L1_axis_V_TDATA(23 downto 16);
    icmp_ln125_fu_404_p2 <= "1" when (section_type_V_fu_365_p4 = ap_const_lv8_B) else "0";
    icmp_ln139_fu_595_p2 <= "1" when (unsigned(numMatrix_V) > unsigned(ap_const_lv3_5)) else "0";
    icmp_ln879_fu_359_p2 <= "1" when (p_Result_s_fu_349_p4 = ap_const_lv5_D) else "0";
    icmp_ln891_fu_601_p2 <= "1" when (numMatrix_V = ap_const_lv3_0) else "0";
    icmp_ln895_fu_551_p2 <= "1" when (prb_bit_V = ap_const_lv2_0) else "0";
    icmp_ln899_fu_424_p2 <= "1" when (unsigned(value_V) < unsigned(ap_const_lv8_15)) else "0";
    l1toc_stateout_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(state_V),8));
    mux_config_V_V_TDATA <= (tmp_4_fu_861_p5 & mux_configs_V(47 downto 0));

    mux_config_V_V_TDATA_blk_n_assign_proc : process(mux_config_V_V_TREADY, ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_2_reg_1221)
    begin
        if (((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (tmp_2_reg_1221 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            mux_config_V_V_TDATA_blk_n <= mux_config_V_V_TREADY;
        else 
            mux_config_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mux_config_V_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter12, ap_predicate_op152_write_state13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op152_write_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            mux_config_V_V_TVALID <= ap_const_logic_1;
        else 
            mux_config_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    numBeams_V_V_TDATA <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_2_reg_1229),8));

    numBeams_V_V_TDATA_blk_n_assign_proc : process(numBeams_V_V_TREADY, ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_1_reg_1189_pp0_iter11_reg, icmp_ln125_reg_1199_pp0_iter11_reg, count_load_reg_1225, or_ln139_reg_1234)
    begin
        if (((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (count_load_reg_1225 = ap_const_lv1_1) and (icmp_ln125_reg_1199_pp0_iter11_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (or_ln139_reg_1234 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_3))) then 
            numBeams_V_V_TDATA_blk_n <= numBeams_V_V_TREADY;
        else 
            numBeams_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    numBeams_V_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter12, ap_predicate_op169_write_state13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op169_write_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            numBeams_V_V_TVALID <= ap_const_logic_1;
        else 
            numBeams_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    or_ln139_fu_607_p2 <= (icmp_ln891_fu_601_p2 or icmp_ln139_fu_595_p2);
    p_Result_21_fu_908_p5 <= (tmp_4_fu_861_p5 & mux_configs_V(47 downto 0));
    p_Result_2_fu_376_p4 <= L1_axis_V_TDATA(53 downto 52);
    p_Result_5_fu_821_p4 <= tmp1_reg_1147_pp0_iter11_reg(50 downto 39);
    p_Result_6_fu_834_p4 <= tmp1_reg_1147_pp0_iter11_reg(38 downto 27);
    p_Result_7_fu_843_p4 <= tmp1_reg_1147_pp0_iter11_reg(26 downto 15);
    p_Result_8_fu_852_p4 <= tmp1_reg_1147_pp0_iter11_reg(14 downto 3);
    p_Result_s_139_fu_873_p5 <= (mux_configs_V(95 downto 48) & tmp_4_fu_861_p5);
    p_Result_s_fu_349_p4 <= L1_axis_V_TDATA(63 downto 59);
    rtcid_V_V_TDATA <= tmp1_reg_1147_pp0_iter11_reg(22 downto 7);

    rtcid_V_V_TDATA_blk_n_assign_proc : process(rtcid_V_V_TREADY, ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_1_reg_1189_pp0_iter11_reg, icmp_ln93_reg_1213_pp0_iter11_reg)
    begin
        if (((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (icmp_ln93_reg_1213_pp0_iter11_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_2))) then 
            rtcid_V_V_TDATA_blk_n <= rtcid_V_V_TREADY;
        else 
            rtcid_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rtcid_V_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter12, ap_predicate_op179_write_state13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op179_write_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            rtcid_V_V_TVALID <= ap_const_logic_1;
        else 
            rtcid_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    section_header_V_TDATA <= ((((((((tmp_ef_V_fu_1009_p3 & tmp_beamID_V_fu_1000_p4) & tmp_numSymbol_V_fu_991_p4) & section_hdr_reMask_V) & tmp_numPrbu_V_reg_1193_pp0_iter11_reg) & tmp_startPrbu_V_fu_1042_p1) & section_hdr_symInc_V) & section_hdr_rb_V) & section_hdr_sectionI);

    section_header_V_TDATA_blk_n_assign_proc : process(section_header_V_TREADY, ap_block_pp0_stage0, ap_enable_reg_pp0_iter12, tmp_reg_1143_pp0_iter11_reg, icmp_ln879_reg_1180_pp0_iter11_reg, p_Result_2_reg_1184_pp0_iter11_reg, tmp_1_reg_1189_pp0_iter11_reg, icmp_ln93_reg_1213_pp0_iter11_reg)
    begin
        if (((icmp_ln879_reg_1180_pp0_iter11_reg = ap_const_lv1_1) and (tmp_reg_1143_pp0_iter11_reg = ap_const_lv1_1) and (icmp_ln93_reg_1213_pp0_iter11_reg = ap_const_lv1_1) and (tmp_1_reg_1189_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (p_Result_2_reg_1184_pp0_iter11_reg = ap_const_lv2_2))) then 
            section_header_V_TDATA_blk_n <= section_header_V_TREADY;
        else 
            section_header_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    section_header_V_TVALID_assign_proc : process(ap_enable_reg_pp0_iter12, ap_predicate_op187_write_state13, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op187_write_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            section_header_V_TVALID <= ap_const_logic_1;
        else 
            section_header_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    section_type_V_fu_365_p4 <= L1_axis_V_TDATA(51 downto 44);
    select_ln895_fu_567_p3 <= 
        trunc_ln301_fu_557_p1 when (icmp_ln895_fu_551_p2(0) = '1') else 
        add_ln301_fu_561_p2;
    tmp_1_fu_386_p3 <= L1_axis_V_TDATA(43 downto 43);
    tmp_4_fu_861_p5 <= (((p_Result_8_fu_852_p4 & p_Result_7_fu_843_p4) & p_Result_6_fu_834_p4) & p_Result_5_fu_821_p4);
    tmp_beamID_V_1_fu_927_p4 <= tmp1_reg_1147_pp0_iter11_reg(34 downto 20);
    tmp_beamID_V_fu_1000_p4 <= tmp1_reg_1147_pp0_iter11_reg(38 downto 24);
    tmp_ef_V_fu_1009_p3 <= tmp1_reg_1147_pp0_iter11_reg(23 downto 23);
    tmp_nbreadreq_fu_258_p3 <= (0=>(L1_axis_V_TVALID), others=>'-');
    tmp_numSymbol_V_fu_991_p4 <= tmp1_reg_1147_pp0_iter11_reg(42 downto 39);
    tmp_sectionType_V_fu_1112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(appn_hdr_sectionType),8));
    tmp_startPrbu_V_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(section_hdr_startPrb),10));
    tmp_startsymbolId_V_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(appn_hdr_startsymbol),6));
    trunc_ln301_fu_557_p1 <= grp_fu_430_p2(3 - 1 downto 0);
end behav;
