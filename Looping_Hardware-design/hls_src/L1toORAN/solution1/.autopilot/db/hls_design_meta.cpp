#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("L1_axis_V_TDATA", 64, hls_in, 0, "axis", "in_data", 1),
	Port_Property("L1_axis_V_TVALID", 1, hls_in, 0, "axis", "in_vld", 1),
	Port_Property("L1_axis_V_TREADY", 1, hls_out, 0, "axis", "in_acc", 1),
	Port_Property("application_header_V_TDATA", 64, hls_out, 1, "axis", "out_data", 1),
	Port_Property("application_header_V_TVALID", 1, hls_out, 1, "axis", "out_vld", 1),
	Port_Property("application_header_V_TREADY", 1, hls_in, 1, "axis", "out_acc", 1),
	Port_Property("section_header_V_TDATA", 64, hls_out, 2, "axis", "out_data", 1),
	Port_Property("section_header_V_TVALID", 1, hls_out, 2, "axis", "out_vld", 1),
	Port_Property("section_header_V_TREADY", 1, hls_in, 2, "axis", "out_acc", 1),
	Port_Property("extension_header_V_TDATA", 72, hls_out, 3, "axis", "out_data", 1),
	Port_Property("extension_header_V_TVALID", 1, hls_out, 3, "axis", "out_vld", 1),
	Port_Property("extension_header_V_TREADY", 1, hls_in, 3, "axis", "out_acc", 1),
	Port_Property("mux_config_V_V_TDATA", 96, hls_out, 4, "axis", "out_data", 1),
	Port_Property("mux_config_V_V_TVALID", 1, hls_out, 4, "axis", "out_vld", 1),
	Port_Property("mux_config_V_V_TREADY", 1, hls_in, 4, "axis", "out_acc", 1),
	Port_Property("numBeams_V_V_TDATA", 8, hls_out, 5, "axis", "out_data", 1),
	Port_Property("numBeams_V_V_TVALID", 1, hls_out, 5, "axis", "out_vld", 1),
	Port_Property("numBeams_V_V_TREADY", 1, hls_in, 5, "axis", "out_acc", 1),
	Port_Property("l1toc_stateout_V", 8, hls_out, 6, "ap_none", "out_data", 1),
	Port_Property("rtcid_V_V_TDATA", 16, hls_out, 7, "axis", "out_data", 1),
	Port_Property("rtcid_V_V_TVALID", 1, hls_out, 7, "axis", "out_vld", 1),
	Port_Property("rtcid_V_V_TREADY", 1, hls_in, 7, "axis", "out_acc", 1),
	Port_Property("CDATA_COUNTER_V", 8, hls_out, 8, "ap_none", "out_data", 1),
};
const char* HLS_Design_Meta::dut_name = "L1toORAN";
