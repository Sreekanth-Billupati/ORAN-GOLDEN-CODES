// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Data_Gen,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=3.200000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.486250,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=72,HLS_SYN_LUT=50,HLS_VERSION=2019_1}" *)

module Data_Gen (
        ap_clk,
        ap_rst_n,
        L1_axis_V_TDATA,
        L1_axis_V_TVALID,
        L1_axis_V_TREADY,
        application_header_V_TDATA,
        application_header_V_TVALID,
        application_header_V_TREADY,
        section_header_V_TDATA,
        section_header_V_TVALID,
        section_header_V_TREADY,
        state_out_V,
        symb_check_V,
        symb_check_V_ap_vld,
        symbol_check_id_V,
        symbol_check_id_V_ap_vld
);

parameter    ap_ST_iter0_fsm_state1 = 1'd0;
parameter    ap_ST_iter1_fsm_state2 = 1'd0;
parameter    ap_ST_iter1_fsm_state0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [63:0] L1_axis_V_TDATA;
input   L1_axis_V_TVALID;
output   L1_axis_V_TREADY;
output  [31:0] application_header_V_TDATA;
output   application_header_V_TVALID;
input   application_header_V_TREADY;
output  [47:0] section_header_V_TDATA;
output   section_header_V_TVALID;
input   section_header_V_TREADY;
output  [7:0] state_out_V;
output  [5:0] symb_check_V;
output   symb_check_V_ap_vld;
output  [5:0] symbol_check_id_V;
output   symbol_check_id_V_ap_vld;

reg L1_axis_V_TREADY;
reg application_header_V_TVALID;
reg section_header_V_TVALID;
reg symb_check_V_ap_vld;
reg symbol_check_id_V_ap_vld;

 reg    ap_rst_n_inv;
reg   [1:0] state_V;
reg    L1_axis_V_TDATA_blk_n;
reg   [0:0] ap_CS_iter0_fsm;
reg   [0:0] ap_CS_iter1_fsm;
wire   [0:0] tmp_nbreadreq_fu_116_p3;
reg    application_header_V_TDATA_blk_n;
reg   [0:0] tmp_reg_318;
reg   [0:0] icmp_ln879_reg_335;
reg   [1:0] p_Result_s_reg_339;
reg    section_header_V_TDATA_blk_n;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_predicate_op34_write_state2;
reg    ap_predicate_op44_write_state2;
reg    ap_block_state2_io;
reg   [63:0] tmp1_reg_322;
wire   [0:0] icmp_ln879_fu_175_p2;
wire   [5:0] tmp_startsymbolId_V_fu_283_p4;
wire   [9:0] tmp_dst_module_V_loa_fu_165_p4;
wire   [7:0] tmp_numPrbu_V_fu_223_p4;
wire   [9:0] tmp_startPrbu_V_fu_214_p4;
reg   [1:0] tmp_4_fu_232_p4;
wire   [11:0] tmp_sectionID_V_fu_205_p4;
wire   [5:0] tmp_slotID_V_fu_274_p4;
wire   [3:0] tmp_subframeId_V_fu_265_p4;
wire   [7:0] tmp_frameId_V_fu_256_p4;
wire   [7:0] tmp_3_fu_294_p4;
reg   [0:0] ap_NS_iter0_fsm;
reg   [0:0] ap_NS_iter1_fsm;

// power-on initialization
initial begin
#0 state_V = 2'd0;
#0 ap_CS_iter0_fsm = 1'd0;
#0 ap_CS_iter1_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        state_V <= 2'd0;
    end else begin
        if (((1'b0 == ap_block_state2_io) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (icmp_ln879_reg_335 == 1'd1) & (tmp_reg_318 == 1'd1))) begin
            state_V <= p_Result_s_reg_339;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == L1_axis_V_TVALID) & (tmp_nbreadreq_fu_116_p3 == 1'd1)) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (tmp_nbreadreq_fu_116_p3 == 1'd1))) begin
        icmp_ln879_reg_335 <= icmp_ln879_fu_175_p2;
        tmp1_reg_322 <= L1_axis_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == L1_axis_V_TVALID) & (tmp_nbreadreq_fu_116_p3 == 1'd1)) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_fu_175_p2 == 1'd1) & (tmp_nbreadreq_fu_116_p3 == 1'd1))) begin
        p_Result_s_reg_339 <= {{L1_axis_V_TDATA[53:52]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == L1_axis_V_TVALID) & (tmp_nbreadreq_fu_116_p3 == 1'd1)) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm))) begin
        tmp_reg_318 <= tmp_nbreadreq_fu_116_p3;
    end
end

always @ (*) begin
    if (((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (tmp_nbreadreq_fu_116_p3 == 1'd1))) begin
        L1_axis_V_TDATA_blk_n = L1_axis_V_TVALID;
    end else begin
        L1_axis_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((1'b0 == L1_axis_V_TVALID) & (tmp_nbreadreq_fu_116_p3 == 1'd1)) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (tmp_nbreadreq_fu_116_p3 == 1'd1))) begin
        L1_axis_V_TREADY = 1'b1;
    end else begin
        L1_axis_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (icmp_ln879_reg_335 == 1'd1) & (tmp_reg_318 == 1'd1) & (p_Result_s_reg_339 == 2'd0))) begin
        application_header_V_TDATA_blk_n = application_header_V_TREADY;
    end else begin
        application_header_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ap_predicate_op44_write_state2 == 1'b1))) begin
        application_header_V_TVALID = 1'b1;
    end else begin
        application_header_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (p_Result_s_reg_339 == 2'd1) & (icmp_ln879_reg_335 == 1'd1) & (tmp_reg_318 == 1'd1))) begin
        section_header_V_TDATA_blk_n = section_header_V_TREADY;
    end else begin
        section_header_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ap_predicate_op34_write_state2 == 1'b1))) begin
        section_header_V_TVALID = 1'b1;
    end else begin
        section_header_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (icmp_ln879_reg_335 == 1'd1) & (tmp_reg_318 == 1'd1) & (p_Result_s_reg_339 == 2'd0))) begin
        symb_check_V_ap_vld = 1'b1;
    end else begin
        symb_check_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (icmp_ln879_reg_335 == 1'd1) & (tmp_reg_318 == 1'd1) & (p_Result_s_reg_339 == 2'd0))) begin
        symbol_check_id_V_ap_vld = 1'b1;
    end else begin
        symbol_check_id_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b0 == L1_axis_V_TVALID) & (tmp_nbreadreq_fu_116_p3 == 1'd1)) & (1'b0 == ap_block_state2_io) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if (((1'b0 == ap_block_state2_io) & (~(ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (1'b0 == L1_axis_V_TVALID) & (tmp_nbreadreq_fu_116_p3 == 1'd1))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~(((1'b0 == L1_axis_V_TVALID) & (tmp_nbreadreq_fu_116_p3 == 1'd1)) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((1'b0 == L1_axis_V_TVALID) & (tmp_nbreadreq_fu_116_p3 == 1'd1));
end

always @ (*) begin
    ap_block_state2_io = (((application_header_V_TREADY == 1'b0) & (ap_predicate_op44_write_state2 == 1'b1)) | ((section_header_V_TREADY == 1'b0) & (ap_predicate_op34_write_state2 == 1'b1)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_predicate_op34_write_state2 = ((p_Result_s_reg_339 == 2'd1) & (icmp_ln879_reg_335 == 1'd1) & (tmp_reg_318 == 1'd1));
end

always @ (*) begin
    ap_predicate_op44_write_state2 = ((icmp_ln879_reg_335 == 1'd1) & (tmp_reg_318 == 1'd1) & (p_Result_s_reg_339 == 2'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign application_header_V_TDATA = {{{{{tmp_startsymbolId_V_fu_283_p4}, {tmp_slotID_V_fu_274_p4}}, {tmp_subframeId_V_fu_265_p4}}, {tmp_frameId_V_fu_256_p4}}, {tmp_3_fu_294_p4}};

assign icmp_ln879_fu_175_p2 = ((tmp_dst_module_V_loa_fu_165_p4 == 10'd17) ? 1'b1 : 1'b0);

assign section_header_V_TDATA = {{{{{{{{16'd0}, {tmp_numPrbu_V_fu_223_p4}}}, {tmp_startPrbu_V_fu_214_p4}}}, {tmp_4_fu_232_p4}}}, {tmp_sectionID_V_fu_205_p4}};

assign state_out_V = state_V;

assign symb_check_V = {{tmp1_reg_322[25:20]}};

assign symbol_check_id_V = {{tmp1_reg_322[25:20]}};

assign tmp_3_fu_294_p4 = {{tmp1_reg_322[51:44]}};

integer ap_tvar_int_0;

always @ (tmp1_reg_322) begin
    for (ap_tvar_int_0 = 2 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 39 - 38) begin
            tmp_4_fu_232_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_4_fu_232_p4[ap_tvar_int_0] = tmp1_reg_322[39 - ap_tvar_int_0];
        end
    end
end

assign tmp_dst_module_V_loa_fu_165_p4 = {{L1_axis_V_TDATA[63:54]}};

assign tmp_frameId_V_fu_256_p4 = {{tmp1_reg_322[43:36]}};

assign tmp_nbreadreq_fu_116_p3 = L1_axis_V_TVALID;

assign tmp_numPrbu_V_fu_223_p4 = {{tmp1_reg_322[27:20]}};

assign tmp_sectionID_V_fu_205_p4 = {{tmp1_reg_322[51:40]}};

assign tmp_slotID_V_fu_274_p4 = {{tmp1_reg_322[31:26]}};

assign tmp_startPrbu_V_fu_214_p4 = {{tmp1_reg_322[37:28]}};

assign tmp_startsymbolId_V_fu_283_p4 = {{tmp1_reg_322[25:20]}};

assign tmp_subframeId_V_fu_265_p4 = {{tmp1_reg_322[35:32]}};

endmodule //Data_Gen
