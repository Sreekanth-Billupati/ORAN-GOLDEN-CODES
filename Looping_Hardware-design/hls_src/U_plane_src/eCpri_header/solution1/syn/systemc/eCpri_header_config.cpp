// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "eCpri_header_config.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic eCpri_header_config::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic eCpri_header_config::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> eCpri_header_config::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<2> eCpri_header_config::ap_const_lv2_0 = "00";
const sc_lv<32> eCpri_header_config::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool eCpri_header_config::ap_const_boolean_1 = true;
const bool eCpri_header_config::ap_const_boolean_0 = false;
const sc_lv<1> eCpri_header_config::ap_const_lv1_1 = "1";
const sc_lv<2> eCpri_header_config::ap_const_lv2_1 = "1";
const sc_lv<1> eCpri_header_config::ap_const_lv1_0 = "0";
const sc_lv<2> eCpri_header_config::ap_const_lv2_2 = "10";
const sc_lv<2> eCpri_header_config::ap_const_lv2_3 = "11";
const sc_lv<16> eCpri_header_config::ap_const_lv16_90 = "10010000";
const sc_lv<16> eCpri_header_config::ap_const_lv16_5A0 = "10110100000";
const sc_lv<32> eCpri_header_config::ap_const_lv32_1 = "1";
const sc_lv<32> eCpri_header_config::ap_const_lv32_A = "1010";
const sc_lv<16> eCpri_header_config::ap_const_lv16_100 = "100000000";
const sc_lv<32> eCpri_header_config::ap_const_lv32_900001 = "100100000000000000000001";
const sc_lv<32> eCpri_header_config::ap_const_lv32_5A00001 = "101101000000000000000000001";

eCpri_header_config::eCpri_header_config(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_PAYLOAD_VALUE);
    sensitive << ( data_src_state_load_reg_264 );
    sensitive << ( icmp_ln879_reg_269 );
    sensitive << ( ap_condition_162 );

    SC_METHOD(thread_add_ln52_fu_189_p2);
    sensitive << ( count );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( eCPRI_PCID_config_V_PCID_conf_V_TVALID );
    sensitive << ( ap_predicate_op19_read_state1 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( eCPRI_PCID_config_V_PCID_conf_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op19_read_state1 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( eCPRI_PCID_config_V_PCID_conf_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op19_read_state1 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( eCPRI_PCID_config_V_PCID_conf_V_TVALID );
    sensitive << ( ap_predicate_op19_read_state1 );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( eCPRI_data_out_V_data_V_TREADY );
    sensitive << ( data_src_state_load_reg_264 );
    sensitive << ( ap_predicate_op48_write_state2 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_146);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_162);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_count_flag_1_phi_fu_120_p14);
    sensitive << ( data_src_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( data_src_state_load_load_fu_175_p1 );
    sensitive << ( tmp_nbreadreq_fu_80_p3 );
    sensitive << ( icmp_ln879_fu_196_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_count_flag_1_reg_117 );

    SC_METHOD(thread_ap_phi_mux_count_new_1_phi_fu_147_p14);
    sensitive << ( data_src_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( data_src_state_load_load_fu_175_p1 );
    sensitive << ( tmp_nbreadreq_fu_80_p3 );
    sensitive << ( icmp_ln879_fu_196_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_count_new_1_reg_144 );
    sensitive << ( add_ln52_fu_189_p2 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_count_flag_1_reg_117);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_count_new_1_reg_144);

    SC_METHOD(thread_ap_predicate_op19_read_state1);
    sensitive << ( data_src_state );
    sensitive << ( tmp_nbreadreq_fu_80_p3 );

    SC_METHOD(thread_ap_predicate_op48_write_state2);
    sensitive << ( data_src_state_load_reg_264 );
    sensitive << ( icmp_ln879_reg_269 );

    SC_METHOD(thread_ap_reset_idle_pp0);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_data_src_state_load_load_fu_175_p1);
    sensitive << ( data_src_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_eCPRI_PCID_config_V_PCID_conf_V_TDATA_blk_n);
    sensitive << ( eCPRI_PCID_config_V_PCID_conf_V_TVALID );
    sensitive << ( data_src_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_nbreadreq_fu_80_p3 );

    SC_METHOD(thread_eCPRI_PCID_config_V_PCID_conf_V_TREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op19_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_eCPRI_data_out_V_data_V_TDATA);
    sensitive << ( data_src_state_load_reg_264 );
    sensitive << ( ap_predicate_op48_write_state2 );
    sensitive << ( p_Result_1_fu_232_p4 );
    sensitive << ( p_Result_s_fu_243_p4 );
    sensitive << ( ap_condition_162 );

    SC_METHOD(thread_eCPRI_data_out_V_data_V_TDATA_blk_n);
    sensitive << ( eCPRI_data_out_V_data_V_TREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( data_src_state_load_reg_264 );
    sensitive << ( icmp_ln879_reg_269 );

    SC_METHOD(thread_eCPRI_data_out_V_data_V_TVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( data_src_state_load_reg_264 );
    sensitive << ( ap_predicate_op48_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln879_fu_196_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( data_src_state_load_load_fu_175_p1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( add_ln52_fu_189_p2 );

    SC_METHOD(thread_p_Result_1_fu_232_p4);
    sensitive << ( pcid_config_value_V );

    SC_METHOD(thread_p_Result_s_fu_243_p4);
    sensitive << ( pcid_config_value_V );

    SC_METHOD(thread_state_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( data_src_state_load_reg_264 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_tmp_nbreadreq_fu_80_p3);
    sensitive << ( eCPRI_PCID_config_V_PCID_conf_V_TVALID );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    data_src_state = "00";
    count = "00000000000000000000000000000000";
    pcid_config_value_V = "0000000000000000";
    start_pcid_config_va = "0000000000000000";
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "eCpri_header_config_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, eCPRI_PCID_config_V_PCID_conf_V_TDATA, "(port)eCPRI_PCID_config_V_PCID_conf_V_TDATA");
    sc_trace(mVcdFile, eCPRI_PCID_config_V_PCID_conf_V_TVALID, "(port)eCPRI_PCID_config_V_PCID_conf_V_TVALID");
    sc_trace(mVcdFile, eCPRI_PCID_config_V_PCID_conf_V_TREADY, "(port)eCPRI_PCID_config_V_PCID_conf_V_TREADY");
    sc_trace(mVcdFile, eCPRI_data_out_V_data_V_TDATA, "(port)eCPRI_data_out_V_data_V_TDATA");
    sc_trace(mVcdFile, eCPRI_data_out_V_data_V_TVALID, "(port)eCPRI_data_out_V_data_V_TVALID");
    sc_trace(mVcdFile, eCPRI_data_out_V_data_V_TREADY, "(port)eCPRI_data_out_V_data_V_TREADY");
    sc_trace(mVcdFile, state_out, "(port)state_out");
    sc_trace(mVcdFile, PAYLOAD_VALUE, "(port)PAYLOAD_VALUE");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, data_src_state, "data_src_state");
    sc_trace(mVcdFile, count, "count");
    sc_trace(mVcdFile, pcid_config_value_V, "pcid_config_value_V");
    sc_trace(mVcdFile, start_pcid_config_va, "start_pcid_config_va");
    sc_trace(mVcdFile, eCPRI_PCID_config_V_PCID_conf_V_TDATA_blk_n, "eCPRI_PCID_config_V_PCID_conf_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, data_src_state_load_load_fu_175_p1, "data_src_state_load_load_fu_175_p1");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_80_p3, "tmp_nbreadreq_fu_80_p3");
    sc_trace(mVcdFile, eCPRI_data_out_V_data_V_TDATA_blk_n, "eCPRI_data_out_V_data_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, data_src_state_load_reg_264, "data_src_state_load_reg_264");
    sc_trace(mVcdFile, icmp_ln879_reg_269, "icmp_ln879_reg_269");
    sc_trace(mVcdFile, ap_predicate_op19_read_state1, "ap_predicate_op19_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_predicate_op48_write_state2, "ap_predicate_op48_write_state2");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln879_fu_196_p2, "icmp_ln879_fu_196_p2");
    sc_trace(mVcdFile, tmp_reg_273, "tmp_reg_273");
    sc_trace(mVcdFile, tmp_PCID_conf_V_reg_277, "tmp_PCID_conf_V_reg_277");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_count_flag_1_phi_fu_120_p14, "ap_phi_mux_count_flag_1_phi_fu_120_p14");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_count_flag_1_reg_117, "ap_phi_reg_pp0_iter0_count_flag_1_reg_117");
    sc_trace(mVcdFile, ap_phi_mux_count_new_1_phi_fu_147_p14, "ap_phi_mux_count_new_1_phi_fu_147_p14");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_count_new_1_reg_144, "ap_phi_reg_pp0_iter0_count_new_1_reg_144");
    sc_trace(mVcdFile, add_ln52_fu_189_p2, "add_ln52_fu_189_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, p_Result_1_fu_232_p4, "p_Result_1_fu_232_p4");
    sc_trace(mVcdFile, p_Result_s_fu_243_p4, "p_Result_s_fu_243_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_162, "ap_condition_162");
    sc_trace(mVcdFile, ap_condition_146, "ap_condition_146");
#endif

    }
    mHdltvinHandle.open("eCpri_header_config.hdltvin.dat");
    mHdltvoutHandle.open("eCpri_header_config.hdltvout.dat");
}

eCpri_header_config::~eCpri_header_config() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void eCpri_header_config::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_src_state = ap_const_lv2_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_196_p2.read()))) {
            data_src_state = ap_const_lv2_2;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_2))) {
            data_src_state = ap_const_lv2_3;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                     esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                     esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_1) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_fu_196_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                     esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state.read()) && 
                     esl_seteq<1,1,1>(tmp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
            data_src_state = ap_const_lv2_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_146.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state_load_reg_264.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_273.read()))) {
            pcid_config_value_V = tmp_PCID_conf_V_reg_277.read();
        } else if (esl_seteq<1,2,2>(data_src_state_load_reg_264.read(), ap_const_lv2_3)) {
            pcid_config_value_V = start_pcid_config_va.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_count_flag_1_phi_fu_120_p14.read()))) {
        count = ap_phi_mux_count_new_1_phi_fu_147_p14.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        data_src_state_load_reg_264 = data_src_state.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_1))) {
        icmp_ln879_reg_269 = icmp_ln879_fu_196_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state_load_reg_264.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_273.read()))) {
        start_pcid_config_va = tmp_PCID_conf_V_reg_277.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_PCID_conf_V_reg_277 = eCPRI_PCID_config_V_PCID_conf_V_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_273 = tmp_nbreadreq_fu_80_p3.read();
    }
}

void eCpri_header_config::thread_PAYLOAD_VALUE() {
    if (esl_seteq<1,1,1>(ap_condition_162.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,2,2>(data_src_state_load_reg_264.read(), ap_const_lv2_1) && 
             esl_seteq<1,1,1>(icmp_ln879_reg_269.read(), ap_const_lv1_0))) {
            PAYLOAD_VALUE = ap_const_lv16_5A0;
        } else if (esl_seteq<1,2,2>(data_src_state_load_reg_264.read(), ap_const_lv2_2)) {
            PAYLOAD_VALUE = ap_const_lv16_90;
        } else {
            PAYLOAD_VALUE = "XXXXXXXXXXXXXXXX";
        }
    } else {
        PAYLOAD_VALUE = "XXXXXXXXXXXXXXXX";
    }
}

void eCpri_header_config::thread_add_ln52_fu_189_p2() {
    add_ln52_fu_189_p2 = (!count.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(count.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void eCpri_header_config::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void eCpri_header_config::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void eCpri_header_config::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_PCID_config_V_PCID_conf_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state1.read()));
}

void eCpri_header_config::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_PCID_config_V_PCID_conf_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())));
}

void eCpri_header_config::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_PCID_config_V_PCID_conf_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())));
}

void eCpri_header_config::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_PCID_config_V_PCID_conf_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state1.read()));
}

void eCpri_header_config::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,2,2>(data_src_state_load_reg_264.read(), ap_const_lv2_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_data_out_V_data_V_TREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_data_out_V_data_V_TREADY.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op48_write_state2.read())));
}

void eCpri_header_config::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void eCpri_header_config::thread_ap_condition_146() {
    ap_condition_146 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void eCpri_header_config::thread_ap_condition_162() {
    ap_condition_162 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void eCpri_header_config::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void eCpri_header_config::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void eCpri_header_config::thread_ap_phi_mux_count_flag_1_phi_fu_120_p14() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state.read()) && 
          esl_seteq<1,1,1>(tmp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_196_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_fu_196_p2.read())))) {
        ap_phi_mux_count_flag_1_phi_fu_120_p14 = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_2)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state.read()) && 
                 esl_seteq<1,1,1>(tmp_nbreadreq_fu_80_p3.read(), ap_const_lv1_0)))) {
        ap_phi_mux_count_flag_1_phi_fu_120_p14 = ap_const_lv1_0;
    } else {
        ap_phi_mux_count_flag_1_phi_fu_120_p14 = ap_phi_reg_pp0_iter0_count_flag_1_reg_117.read();
    }
}

void eCpri_header_config::thread_ap_phi_mux_count_new_1_phi_fu_147_p14() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_fu_196_p2.read()))) {
        ap_phi_mux_count_new_1_phi_fu_147_p14 = add_ln52_fu_189_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state.read()) && 
                 esl_seteq<1,1,1>(tmp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(data_src_state_load_load_fu_175_p1.read(), ap_const_lv2_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_196_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state.read()) && 
                 esl_seteq<1,1,1>(tmp_nbreadreq_fu_80_p3.read(), ap_const_lv1_0)))) {
        ap_phi_mux_count_new_1_phi_fu_147_p14 = ap_const_lv32_0;
    } else {
        ap_phi_mux_count_new_1_phi_fu_147_p14 = ap_phi_reg_pp0_iter0_count_new_1_reg_144.read();
    }
}

void eCpri_header_config::thread_ap_phi_reg_pp0_iter0_count_flag_1_reg_117() {
    ap_phi_reg_pp0_iter0_count_flag_1_reg_117 =  (sc_lv<1>) ("X");
}

void eCpri_header_config::thread_ap_phi_reg_pp0_iter0_count_new_1_reg_144() {
    ap_phi_reg_pp0_iter0_count_new_1_reg_144 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void eCpri_header_config::thread_ap_predicate_op19_read_state1() {
    ap_predicate_op19_read_state1 = (esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1));
}

void eCpri_header_config::thread_ap_predicate_op48_write_state2() {
    ap_predicate_op48_write_state2 = (esl_seteq<1,2,2>(data_src_state_load_reg_264.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(icmp_ln879_reg_269.read(), ap_const_lv1_0));
}

void eCpri_header_config::thread_ap_reset_idle_pp0() {
    if (!esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void eCpri_header_config::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void eCpri_header_config::thread_data_src_state_load_load_fu_175_p1() {
    data_src_state_load_load_fu_175_p1 = data_src_state.read();
}

void eCpri_header_config::thread_eCPRI_PCID_config_V_PCID_conf_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_80_p3.read(), ap_const_lv1_1))) {
        eCPRI_PCID_config_V_PCID_conf_V_TDATA_blk_n = eCPRI_PCID_config_V_PCID_conf_V_TVALID.read();
    } else {
        eCPRI_PCID_config_V_PCID_conf_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void eCpri_header_config::thread_eCPRI_PCID_config_V_PCID_conf_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op19_read_state1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        eCPRI_PCID_config_V_PCID_conf_V_TREADY = ap_const_logic_1;
    } else {
        eCPRI_PCID_config_V_PCID_conf_V_TREADY = ap_const_logic_0;
    }
}

void eCpri_header_config::thread_eCPRI_data_out_V_data_V_TDATA() {
    if (esl_seteq<1,1,1>(ap_condition_162.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op48_write_state2.read())) {
            eCPRI_data_out_V_data_V_TDATA = p_Result_s_fu_243_p4.read();
        } else if (esl_seteq<1,2,2>(data_src_state_load_reg_264.read(), ap_const_lv2_2)) {
            eCPRI_data_out_V_data_V_TDATA = p_Result_1_fu_232_p4.read();
        } else {
            eCPRI_data_out_V_data_V_TDATA =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        eCPRI_data_out_V_data_V_TDATA =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void eCpri_header_config::thread_eCPRI_data_out_V_data_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,2,2>(data_src_state_load_reg_264.read(), ap_const_lv2_1) && 
          esl_seteq<1,1,1>(icmp_ln879_reg_269.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,2,2>(data_src_state_load_reg_264.read(), ap_const_lv2_2)))) {
        eCPRI_data_out_V_data_V_TDATA_blk_n = eCPRI_data_out_V_data_V_TREADY.read();
    } else {
        eCPRI_data_out_V_data_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void eCpri_header_config::thread_eCPRI_data_out_V_data_V_TVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,2,2>(data_src_state_load_reg_264.read(), ap_const_lv2_2) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op48_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        eCPRI_data_out_V_data_V_TVALID = ap_const_logic_1;
    } else {
        eCPRI_data_out_V_data_V_TVALID = ap_const_logic_0;
    }
}

void eCpri_header_config::thread_icmp_ln879_fu_196_p2() {
    icmp_ln879_fu_196_p2 = (!add_ln52_fu_189_p2.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): sc_lv<1>(add_ln52_fu_189_p2.read() == ap_const_lv32_A);
}

void eCpri_header_config::thread_p_Result_1_fu_232_p4() {
    p_Result_1_fu_232_p4 = esl_concat<32,32>(esl_concat<16,16>(ap_const_lv16_100, pcid_config_value_V.read()), ap_const_lv32_900001);
}

void eCpri_header_config::thread_p_Result_s_fu_243_p4() {
    p_Result_s_fu_243_p4 = esl_concat<32,32>(esl_concat<16,16>(ap_const_lv16_100, pcid_config_value_V.read()), ap_const_lv32_5A00001);
}

void eCpri_header_config::thread_state_out() {
    state_out = esl_zext<8,2>(data_src_state_load_reg_264.read());
}

void eCpri_header_config::thread_tmp_nbreadreq_fu_80_p3() {
    tmp_nbreadreq_fu_80_p3 =  (sc_lv<1>) ((eCPRI_PCID_config_V_PCID_conf_V_TVALID.read()));
}

void eCpri_header_config::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void eCpri_header_config::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eCPRI_PCID_config_V_PCID_conf_V_TDATA\" :  \"" << eCPRI_PCID_config_V_PCID_conf_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eCPRI_PCID_config_V_PCID_conf_V_TVALID\" :  \"" << eCPRI_PCID_config_V_PCID_conf_V_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"eCPRI_PCID_config_V_PCID_conf_V_TREADY\" :  \"" << eCPRI_PCID_config_V_PCID_conf_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"eCPRI_data_out_V_data_V_TDATA\" :  \"" << eCPRI_data_out_V_data_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"eCPRI_data_out_V_data_V_TVALID\" :  \"" << eCPRI_data_out_V_data_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eCPRI_data_out_V_data_V_TREADY\" :  \"" << eCPRI_data_out_V_data_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"state_out\" :  \"" << state_out.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"PAYLOAD_VALUE\" :  \"" << PAYLOAD_VALUE.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

