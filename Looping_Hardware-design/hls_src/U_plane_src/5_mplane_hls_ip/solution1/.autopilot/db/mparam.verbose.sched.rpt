

================================================================
== Vivado HLS Report for 'mparam'
================================================================
* Date:           Wed Apr 21 15:56:31 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        5_mplane_hls_ip
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   3.20|     0.721|        0.40|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 1
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.67>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%mplane_state_load = load i2* @mplane_state, align 1" [5_mplane_hls_ip/mparam.cpp:22]   --->   Operation 4 'load' 'mplane_state_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.67ns)   --->   "store i2 -1, i2* @mplane_state, align 1" [5_mplane_hls_ip/mparam.cpp:61]   --->   Operation 5 'store' <Predicate = (mplane_state_load == 3)> <Delay = 0.67>
ST_1 : Operation 6 [1/1] (0.67ns)   --->   "store i2 -1, i2* @mplane_state, align 1" [5_mplane_hls_ip/mparam.cpp:53]   --->   Operation 6 'store' <Predicate = (mplane_state_load == 2)> <Delay = 0.67>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%tmp_1 = call i1 @_ssdm_op_NbReadReq.axis.i64P(i64* %indata_V_V, i32 1)" [5_mplane_hls_ip/mparam.cpp:35]   --->   Operation 7 'nbreadreq' 'tmp_1' <Predicate = (mplane_state_load == 1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%tmp_V_2 = call i64 @_ssdm_op_Read.axis.volatile.i64P(i64* %indata_V_V)" [5_mplane_hls_ip/mparam.cpp:37]   --->   Operation 8 'read' 'tmp_V_2' <Predicate = (mplane_state_load == 1 & tmp_1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "store i64 %tmp_V_2, i64* @datainp2_V, align 8" [5_mplane_hls_ip/mparam.cpp:37]   --->   Operation 9 'store' <Predicate = (mplane_state_load == 1 & tmp_1)> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.67ns)   --->   "store i2 -2, i2* @mplane_state, align 1" [5_mplane_hls_ip/mparam.cpp:38]   --->   Operation 10 'store' <Predicate = (mplane_state_load == 1 & tmp_1)> <Delay = 0.67>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_NbReadReq.axis.i64P(i64* %indata_V_V, i32 1)" [5_mplane_hls_ip/mparam.cpp:26]   --->   Operation 11 'nbreadreq' 'tmp' <Predicate = (mplane_state_load == 0)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tmp_V_1 = call i64 @_ssdm_op_Read.axis.volatile.i64P(i64* %indata_V_V)" [5_mplane_hls_ip/mparam.cpp:28]   --->   Operation 12 'read' 'tmp_V_1' <Predicate = (mplane_state_load == 0 & tmp)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "store i64 %tmp_V_1, i64* @datainp1_V, align 8" [5_mplane_hls_ip/mparam.cpp:28]   --->   Operation 13 'store' <Predicate = (mplane_state_load == 0 & tmp)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.67ns)   --->   "store i2 1, i2* @mplane_state, align 1" [5_mplane_hls_ip/mparam.cpp:29]   --->   Operation 14 'store' <Predicate = (mplane_state_load == 0 & tmp)> <Delay = 0.67>

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_ethsmac_V_1 = load i48* @l1_inp1_smac_V, align 8" [5_mplane_hls_ip/mparam.cpp:58]   --->   Operation 15 'load' 'tmp_ethsmac_V_1' <Predicate = (mplane_state_load == 3)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_ethdmac_V_1 = load i48* @l1_inp1_dmac_V, align 8" [5_mplane_hls_ip/mparam.cpp:59]   --->   Operation 16 'load' 'tmp_ethdmac_V_1' <Predicate = (mplane_state_load == 3)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_17 = call i112 @_ssdm_op_BitConcatenate.i112.i16.i48.i48(i16 -20738, i48 %tmp_ethdmac_V_1, i48 %tmp_ethsmac_V_1)" [5_mplane_hls_ip/mparam.cpp:60]   --->   Operation 17 'bitconcatenate' 'tmp_17' <Predicate = (mplane_state_load == 3)> <Delay = 0.00>
ST_2 : Operation 18 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i112P(i112* %out1data_V, i112 %tmp_17)" [5_mplane_hls_ip/mparam.cpp:60]   --->   Operation 18 'write' <Predicate = (mplane_state_load == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%p_Val2_s = load i64* @datainp1_V, align 8" [5_mplane_hls_ip/mparam.cpp:44]   --->   Operation 19 'load' 'p_Val2_s' <Predicate = (mplane_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln647 = trunc i64 %p_Val2_s to i42" [5_mplane_hls_ip/mparam.cpp:44]   --->   Operation 20 'trunc' 'trunc_ln647' <Predicate = (mplane_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_V = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %p_Val2_s, i32 42, i32 57)" [5_mplane_hls_ip/mparam.cpp:45]   --->   Operation 21 'partselect' 'tmp_V' <Predicate = (mplane_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%p_Val2_1 = load i64* @datainp2_V, align 8" [5_mplane_hls_ip/mparam.cpp:46]   --->   Operation 22 'load' 'p_Val2_1' <Predicate = (mplane_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%p_Result_s = call i6 @_ssdm_op_PartSelect.i6.i64.i32.i32(i64 %p_Val2_1, i32 52, i32 57)" [5_mplane_hls_ip/mparam.cpp:46]   --->   Operation 23 'partselect' 'p_Result_s' <Predicate = (mplane_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%p_Result_s_4 = call i48 @_ssdm_op_BitConcatenate.i48.i6.i42(i6 %p_Result_s, i42 %trunc_ln647)" [5_mplane_hls_ip/mparam.cpp:46]   --->   Operation 24 'bitconcatenate' 'p_Result_s_4' <Predicate = (mplane_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "store i48 %p_Result_s_4, i48* @l1_inp1_smac_V, align 8" [5_mplane_hls_ip/mparam.cpp:46]   --->   Operation 25 'store' <Predicate = (mplane_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_V_3 = call i48 @_ssdm_op_PartSelect.i48.i64.i32.i32(i64 %p_Val2_1, i32 4, i32 51)" [5_mplane_hls_ip/mparam.cpp:47]   --->   Operation 26 'partselect' 'tmp_V_3' <Predicate = (mplane_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "store i48 %tmp_V_3, i48* @l1_inp1_dmac_V, align 8" [5_mplane_hls_ip/mparam.cpp:47]   --->   Operation 27 'store' <Predicate = (mplane_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%tmp1 = call i112 @_ssdm_op_BitConcatenate.i112.i16.i48.i6.i42(i16 -20738, i48 %tmp_V_3, i6 %p_Result_s, i42 %trunc_ln647)" [5_mplane_hls_ip/mparam.cpp:51]   --->   Operation 28 'bitconcatenate' 'tmp1' <Predicate = (mplane_state_load == 2)> <Delay = 0.00>
ST_2 : Operation 29 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i112P(i112* %out1data_V, i112 %tmp1)" [5_mplane_hls_ip/mparam.cpp:51]   --->   Operation 29 'write' <Predicate = (mplane_state_load == 2)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 30 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P(i16* %out2data_V_V, i16 %tmp_V)" [5_mplane_hls_ip/mparam.cpp:52]   --->   Operation 30 'write' <Predicate = (mplane_state_load == 2)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %3, label %._crit_edge183" [5_mplane_hls_ip/mparam.cpp:35]   --->   Operation 31 'br' <Predicate = (mplane_state_load == 1)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "br i1 %tmp, label %1, label %._crit_edge182" [5_mplane_hls_ip/mparam.cpp:26]   --->   Operation 32 'br' <Predicate = (mplane_state_load == 0)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.72>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i112* %out1data_V), !map !63"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %indata_V_V), !map !73"   --->   Operation 34 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %out2data_V_V), !map !77"   --->   Operation 35 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %state_out_V), !map !81"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @mparam_str) nounwind"   --->   Operation 37 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %indata_V_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [5_mplane_hls_ip/mparam.cpp:5]   --->   Operation 38 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i112* %out1data_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [5_mplane_hls_ip/mparam.cpp:6]   --->   Operation 39 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %out2data_V_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [5_mplane_hls_ip/mparam.cpp:7]   --->   Operation 40 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %state_out_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [5_mplane_hls_ip/mparam.cpp:8]   --->   Operation 41 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [5_mplane_hls_ip/mparam.cpp:9]   --->   Operation 42 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 2, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [5_mplane_hls_ip/mparam.cpp:13]   --->   Operation 43 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i2* @mplane_state, i32 1, [1 x i8]* @p_str2) nounwind" [5_mplane_hls_ip/mparam.cpp:21]   --->   Operation 44 'specreset' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln301 = zext i2 %mplane_state_load to i8" [5_mplane_hls_ip/mparam.cpp:22]   --->   Operation 45 'zext' 'zext_ln301' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i8P(i8* %state_out_V, i8 %zext_ln301)" [5_mplane_hls_ip/mparam.cpp:22]   --->   Operation 46 'write' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.72ns)   --->   "switch i2 %mplane_state_load, label %._crit_edge181 [
    i2 0, label %0
    i2 1, label %2
    i2 -2, label %4
    i2 -1, label %5
  ]" [5_mplane_hls_ip/mparam.cpp:23]   --->   Operation 47 'switch' <Predicate = true> <Delay = 0.72>
ST_3 : Operation 48 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i112P(i112* %out1data_V, i112 %tmp_17)" [5_mplane_hls_ip/mparam.cpp:60]   --->   Operation 48 'write' <Predicate = (mplane_state_load == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "br label %._crit_edge181" [5_mplane_hls_ip/mparam.cpp:63]   --->   Operation 49 'br' <Predicate = (mplane_state_load == 3)> <Delay = 0.00>
ST_3 : Operation 50 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i112P(i112* %out1data_V, i112 %tmp1)" [5_mplane_hls_ip/mparam.cpp:51]   --->   Operation 50 'write' <Predicate = (mplane_state_load == 2)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 51 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P(i16* %out2data_V_V, i16 %tmp_V)" [5_mplane_hls_ip/mparam.cpp:52]   --->   Operation 51 'write' <Predicate = (mplane_state_load == 2)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "br label %._crit_edge181" [5_mplane_hls_ip/mparam.cpp:55]   --->   Operation 52 'br' <Predicate = (mplane_state_load == 2)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "br label %._crit_edge183" [5_mplane_hls_ip/mparam.cpp:39]   --->   Operation 53 'br' <Predicate = (mplane_state_load == 1 & tmp_1)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "br label %._crit_edge181" [5_mplane_hls_ip/mparam.cpp:41]   --->   Operation 54 'br' <Predicate = (mplane_state_load == 1)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "br label %._crit_edge182" [5_mplane_hls_ip/mparam.cpp:30]   --->   Operation 55 'br' <Predicate = (mplane_state_load == 0 & tmp)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "br label %._crit_edge181" [5_mplane_hls_ip/mparam.cpp:32]   --->   Operation 56 'br' <Predicate = (mplane_state_load == 0)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "ret void" [5_mplane_hls_ip/mparam.cpp:66]   --->   Operation 57 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.2ns, clock uncertainty: 0.4ns.

 <State 1>: 0.675ns
The critical path consists of the following:
	'store' operation ('store_ln61', 5_mplane_hls_ip/mparam.cpp:61) of constant 3 on static variable 'mplane_state' [31]  (0.675 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 0.721ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
