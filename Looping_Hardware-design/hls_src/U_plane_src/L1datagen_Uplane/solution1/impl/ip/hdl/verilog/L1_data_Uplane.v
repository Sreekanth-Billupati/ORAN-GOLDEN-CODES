// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="L1_data_Uplane,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu19eg-ffvd1760-3-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=0.964900,HLS_SYN_LAT=3,HLS_SYN_TPT=3,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=12,HLS_SYN_LUT=285,HLS_VERSION=2019_1}" *)

module L1_data_Uplane (
        ap_clk,
        ap_rst_n,
        app_out_V_V_TDATA,
        app_out_V_V_TVALID,
        app_out_V_V_TREADY,
        sec_out_V_V_TDATA,
        sec_out_V_V_TVALID,
        sec_out_V_V_TREADY,
        L1_state_out
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst_n;
output  [31:0] app_out_V_V_TDATA;
output   app_out_V_V_TVALID;
input   app_out_V_V_TREADY;
output  [47:0] sec_out_V_V_TDATA;
output   sec_out_V_V_TVALID;
input   sec_out_V_V_TREADY;
output  [7:0] L1_state_out;

reg[31:0] app_out_V_V_TDATA;
reg app_out_V_V_TVALID;
reg[47:0] sec_out_V_V_TDATA;
reg sec_out_V_V_TVALID;

 reg    ap_rst_n_inv;
reg   [3:0] data_src_state;
reg    app_out_V_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [3:0] data_src_state_load_reg_259;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    sec_out_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage2_subdone;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_pp0_stage2_11001;
wire    ap_block_pp0_stage1_01001;
wire    ap_block_pp0_stage2_01001;
wire    ap_block_pp0_stage0_01001;
reg   [2:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_517;
reg    ap_condition_521;
reg    ap_condition_525;
reg    ap_condition_529;
reg    ap_condition_533;
reg    ap_condition_537;
reg    ap_condition_541;
reg    ap_condition_545;
reg    ap_condition_549;
reg    ap_condition_553;
reg    ap_condition_557;
reg    ap_condition_561;
reg    ap_condition_565;
reg    ap_condition_569;
reg    ap_condition_572;
reg    ap_condition_575;
reg    ap_condition_578;
reg    ap_condition_581;
reg    ap_condition_584;
reg    ap_condition_587;
reg    ap_condition_590;
reg    ap_condition_593;
reg    ap_condition_596;
reg    ap_condition_599;
reg    ap_condition_602;
reg    ap_condition_605;
reg    ap_condition_608;
reg    ap_condition_612;
reg    ap_condition_615;

// power-on initialization
initial begin
#0 data_src_state = 4'd1;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if (((1'b1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_src_state <= 4'd1;
    end else begin
        if ((1'b1 == 1'b1)) begin
            if ((1'b1 == ap_condition_615)) begin
                data_src_state <= 4'd7;
            end else if ((1'b1 == ap_condition_612)) begin
                data_src_state <= 4'd1;
            end else if ((1'b1 == ap_condition_608)) begin
                data_src_state <= 4'd2;
            end else if ((1'b1 == ap_condition_605)) begin
                data_src_state <= 4'd3;
            end else if ((1'b1 == ap_condition_602)) begin
                data_src_state <= 4'd4;
            end else if ((1'b1 == ap_condition_599)) begin
                data_src_state <= 4'd5;
            end else if ((1'b1 == ap_condition_596)) begin
                data_src_state <= 4'd6;
            end else if ((1'b1 == ap_condition_593)) begin
                data_src_state <= 4'd8;
            end else if ((1'b1 == ap_condition_590)) begin
                data_src_state <= 4'd9;
            end else if ((1'b1 == ap_condition_587)) begin
                data_src_state <= 4'd10;
            end else if ((1'b1 == ap_condition_584)) begin
                data_src_state <= 4'd11;
            end else if ((1'b1 == ap_condition_581)) begin
                data_src_state <= 4'd12;
            end else if ((1'b1 == ap_condition_578)) begin
                data_src_state <= 4'd13;
            end else if ((1'b1 == ap_condition_575)) begin
                data_src_state <= 4'd14;
            end else if ((1'b1 == ap_condition_572)) begin
                data_src_state <= 4'd15;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_src_state_load_reg_259 <= data_src_state;
    end
end

always @ (*) begin
    if (((1'b1 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if ((1'b1 == 1'b1)) begin
        if ((1'b1 == ap_condition_569)) begin
            app_out_V_V_TDATA = 32'd73991936;
        end else if ((1'b1 == ap_condition_565)) begin
            app_out_V_V_TDATA = 32'd68749056;
        end else if ((1'b1 == ap_condition_561)) begin
            app_out_V_V_TDATA = 32'd69797632;
        end else if ((1'b1 == ap_condition_557)) begin
            app_out_V_V_TDATA = 32'd70846208;
        end else if ((1'b1 == ap_condition_553)) begin
            app_out_V_V_TDATA = 32'd71894784;
        end else if ((1'b1 == ap_condition_549)) begin
            app_out_V_V_TDATA = 32'd72943360;
        end else if ((1'b1 == ap_condition_545)) begin
            app_out_V_V_TDATA = 32'd75040512;
        end else if ((1'b1 == ap_condition_541)) begin
            app_out_V_V_TDATA = 32'd76089088;
        end else if ((1'b1 == ap_condition_537)) begin
            app_out_V_V_TDATA = 32'd77137664;
        end else if ((1'b1 == ap_condition_533)) begin
            app_out_V_V_TDATA = 32'd78186240;
        end else if ((1'b1 == ap_condition_529)) begin
            app_out_V_V_TDATA = 32'd79234816;
        end else if ((1'b1 == ap_condition_525)) begin
            app_out_V_V_TDATA = 32'd80283392;
        end else if ((1'b1 == ap_condition_521)) begin
            app_out_V_V_TDATA = 32'd81331968;
        end else if ((1'b1 == ap_condition_517)) begin
            app_out_V_V_TDATA = 32'd82380544;
        end else begin
            app_out_V_V_TDATA = 'bx;
        end
    end else begin
        app_out_V_V_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd6) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd14) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd13) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd12) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd11) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd10) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd9) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd8) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd7) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd5) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd4) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd3) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd2) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (data_src_state_load_reg_259 == 4'd1)))) begin
        app_out_V_V_TDATA_blk_n = app_out_V_V_TREADY;
    end else begin
        app_out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((data_src_state_load_reg_259 == 4'd6) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd14) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd13) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd12) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd11) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd10) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd9) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd8) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd7) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd5) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd4) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd3) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (data_src_state_load_reg_259 == 4'd1)))) begin
        app_out_V_V_TVALID = 1'b1;
    end else begin
        app_out_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (data_src_state_load_reg_259 == 4'd1)))) begin
        sec_out_V_V_TDATA = 48'd3624112133;
    end else if ((((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (data_src_state_load_reg_259 == 4'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sec_out_V_V_TDATA = 48'd3305422850;
    end else if ((((data_src_state_load_reg_259 == 4'd3) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd2) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (data_src_state_load_reg_259 == 4'd1)))) begin
        sec_out_V_V_TDATA = 48'd402788355;
    end else if ((((data_src_state_load_reg_259 == 4'd5) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd4) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)))) begin
        sec_out_V_V_TDATA = 48'd402788358;
    end else if (((data_src_state_load_reg_259 == 4'd6) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1))) begin
        sec_out_V_V_TDATA = 48'd956301319;
    end else if ((((data_src_state_load_reg_259 == 4'd10) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd9) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd8) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd7) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)))) begin
        sec_out_V_V_TDATA = 48'd100872200;
    end else if ((((data_src_state_load_reg_259 == 4'd14) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd13) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd12) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd11) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)))) begin
        sec_out_V_V_TDATA = 48'd419639305;
    end else if ((((data_src_state_load_reg_259 == 4'd5) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd4) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd3) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd2) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (data_src_state_load_reg_259 == 4'd1)))) begin
        sec_out_V_V_TDATA = 48'd553648132;
    end else if (((data_src_state_load_reg_259 == 4'd7) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sec_out_V_V_TDATA = 48'd855638016;
    end else if ((((data_src_state_load_reg_259 == 4'd14) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd13) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd12) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd11) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd10) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd9) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd8) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        sec_out_V_V_TDATA = 48'd855638017;
    end else begin
        sec_out_V_V_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((data_src_state_load_reg_259 == 4'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (data_src_state_load_reg_259 == 4'd1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd14) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd13) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd12) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd11) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd10) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd9) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd8) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd7) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd6) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd5) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd4) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (data_src_state_load_reg_259 == 4'd2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (data_src_state_load_reg_259 == 4'd1)) | ((data_src_state_load_reg_259 == 4'd14) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd13) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd12) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd11) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd10) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd9) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd8) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd7) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd5) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd4) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd3) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd2) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (data_src_state_load_reg_259 == 4'd1)))) begin
        sec_out_V_V_TDATA_blk_n = sec_out_V_V_TREADY;
    end else begin
        sec_out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((data_src_state_load_reg_259 == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((data_src_state_load_reg_259 == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (data_src_state_load_reg_259 == 4'd1)) | ((data_src_state_load_reg_259 == 4'd14) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd13) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd12) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd11) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd10) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd9) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd8) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd7) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd6) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd5) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd4) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd3) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((data_src_state_load_reg_259 == 4'd2) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == 1'b1) & (data_src_state_load_reg_259 == 4'd1)) | ((data_src_state_load_reg_259 == 4'd14) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd13) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd12) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd11) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd10) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd9) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd8) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd7) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd5) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd4) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd3) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((data_src_state_load_reg_259 == 4'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (data_src_state_load_reg_259 == 4'd1)))) begin
        sec_out_V_V_TVALID = 1'b1;
    end else begin
        sec_out_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign L1_state_out = data_src_state_load_reg_259;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((1'b1 == ap_block_state2_io) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b1 == ap_block_state2_io) & (1'b1 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b1 == ap_block_state3_io) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b1 == ap_block_state3_io) & (1'b1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = (((data_src_state_load_reg_259 == 4'd14) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd14) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd13) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd13) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd12) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd12) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd11) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd11) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd10) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd10) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd9) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd9) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd8) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd8) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd7) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd7) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd5) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd5) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd4) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd4) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd3) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd3) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd2) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd2) & (sec_out_V_V_TREADY == 1'b0)) | ((app_out_V_V_TREADY == 1'b0) & (data_src_state_load_reg_259 == 4'd1)) | ((sec_out_V_V_TREADY == 1'b0) & (data_src_state_load_reg_259 == 4'd1)));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((data_src_state_load_reg_259 == 4'd14) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd13) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd12) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd11) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd10) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd9) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd8) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd7) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd6) & (app_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd6) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd5) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd4) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd3) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd2) & (sec_out_V_V_TREADY == 1'b0)) | ((sec_out_V_V_TREADY == 1'b0) & (data_src_state_load_reg_259 == 4'd1)));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = (((data_src_state_load_reg_259 == 4'd14) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd13) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd12) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd11) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd10) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd9) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd8) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd7) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd6) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd5) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd4) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd3) & (sec_out_V_V_TREADY == 1'b0)) | ((data_src_state_load_reg_259 == 4'd2) & (sec_out_V_V_TREADY == 1'b0)) | ((sec_out_V_V_TREADY == 1'b0) & (data_src_state_load_reg_259 == 4'd1)));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_517 = ((data_src_state_load_reg_259 == 4'd14) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_521 = ((data_src_state_load_reg_259 == 4'd13) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_525 = ((data_src_state_load_reg_259 == 4'd12) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_529 = ((data_src_state_load_reg_259 == 4'd11) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_533 = ((data_src_state_load_reg_259 == 4'd10) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_537 = ((data_src_state_load_reg_259 == 4'd9) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_541 = ((data_src_state_load_reg_259 == 4'd8) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_545 = ((data_src_state_load_reg_259 == 4'd7) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_549 = ((data_src_state_load_reg_259 == 4'd5) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_553 = ((data_src_state_load_reg_259 == 4'd4) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_557 = ((data_src_state_load_reg_259 == 4'd3) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_561 = ((data_src_state_load_reg_259 == 4'd2) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_565 = ((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (data_src_state_load_reg_259 == 4'd1));
end

always @ (*) begin
    ap_condition_569 = ((data_src_state_load_reg_259 == 4'd6) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_572 = ((data_src_state_load_reg_259 == 4'd14) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_575 = ((data_src_state_load_reg_259 == 4'd13) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_578 = ((data_src_state_load_reg_259 == 4'd12) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_581 = ((data_src_state_load_reg_259 == 4'd11) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_584 = ((data_src_state_load_reg_259 == 4'd10) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_587 = ((data_src_state_load_reg_259 == 4'd9) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_590 = ((data_src_state_load_reg_259 == 4'd8) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_593 = ((data_src_state_load_reg_259 == 4'd7) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_596 = ((data_src_state_load_reg_259 == 4'd5) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_599 = ((data_src_state_load_reg_259 == 4'd4) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_602 = ((data_src_state_load_reg_259 == 4'd3) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_605 = ((data_src_state_load_reg_259 == 4'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_608 = ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (data_src_state_load_reg_259 == 4'd1));
end

always @ (*) begin
    ap_condition_612 = ((data_src_state_load_reg_259 == 4'd15) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_615 = ((data_src_state_load_reg_259 == 4'd6) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

endmodule //L1_data_Uplane
