// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="uplane_depacketiser,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu19eg-ffvd1760-3-e,HLS_INPUT_CLOCK=3.200000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.737100,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=743,HLS_SYN_LUT=424,HLS_VERSION=2019_1}" *)

module uplane_depacketiser (
        ap_clk,
        ap_rst_n,
        data_in_TDATA,
        data_in_TVALID,
        data_in_TREADY,
        data_in_TLAST,
        data_out_TDATA,
        data_out_TVALID,
        data_out_TREADY,
        data_out_TLAST,
        count_PRBs_V,
        PRB_count_each_section_V,
        depack_symbol_number_V,
        iq_msg_state_out_V
);

parameter    ap_ST_iter0_fsm_state1 = 1'd0;
parameter    ap_ST_iter1_fsm_state2 = 1'd0;
parameter    ap_ST_iter2_fsm_state3 = 1'd0;
parameter    ap_ST_iter1_fsm_state0 = 1'd1;
parameter    ap_ST_iter2_fsm_state0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [127:0] data_in_TDATA;
input   data_in_TVALID;
output   data_in_TREADY;
input  [0:0] data_in_TLAST;
output  [127:0] data_out_TDATA;
output   data_out_TVALID;
input   data_out_TREADY;
output  [0:0] data_out_TLAST;
input  [7:0] count_PRBs_V;
output  [11:0] PRB_count_each_section_V;
output  [3:0] depack_symbol_number_V;
output  [7:0] iq_msg_state_out_V;

 reg    ap_rst_n_inv;
reg   [127:0] data_in_V_data_V_0_data_out;
wire    data_in_V_data_V_0_vld_in;
wire    data_in_V_data_V_0_vld_out;
wire    data_in_V_data_V_0_ack_in;
reg    data_in_V_data_V_0_ack_out;
reg   [127:0] data_in_V_data_V_0_payload_A;
reg   [127:0] data_in_V_data_V_0_payload_B;
reg    data_in_V_data_V_0_sel_rd;
reg    data_in_V_data_V_0_sel_wr;
wire    data_in_V_data_V_0_sel;
wire    data_in_V_data_V_0_load_A;
wire    data_in_V_data_V_0_load_B;
reg   [1:0] data_in_V_data_V_0_state;
wire    data_in_V_data_V_0_state_cmp_full;
wire    data_in_V_last_V_0_vld_in;
reg    data_in_V_last_V_0_ack_out;
reg   [1:0] data_in_V_last_V_0_state;
reg   [127:0] data_out_V_IQ_data_V_1_data_in;
reg   [127:0] data_out_V_IQ_data_V_1_data_out;
reg    data_out_V_IQ_data_V_1_vld_in;
wire    data_out_V_IQ_data_V_1_vld_out;
wire    data_out_V_IQ_data_V_1_ack_in;
wire    data_out_V_IQ_data_V_1_ack_out;
reg   [127:0] data_out_V_IQ_data_V_1_payload_A;
reg   [127:0] data_out_V_IQ_data_V_1_payload_B;
reg    data_out_V_IQ_data_V_1_sel_rd;
reg    data_out_V_IQ_data_V_1_sel_wr;
wire    data_out_V_IQ_data_V_1_sel;
wire    data_out_V_IQ_data_V_1_load_A;
wire    data_out_V_IQ_data_V_1_load_B;
reg   [1:0] data_out_V_IQ_data_V_1_state;
wire    data_out_V_IQ_data_V_1_state_cmp_full;
reg   [0:0] data_out_V_last_V_1_data_in;
reg   [0:0] data_out_V_last_V_1_data_out;
reg    data_out_V_last_V_1_vld_in;
wire    data_out_V_last_V_1_vld_out;
wire    data_out_V_last_V_1_ack_in;
wire    data_out_V_last_V_1_ack_out;
reg   [0:0] data_out_V_last_V_1_payload_A;
reg   [0:0] data_out_V_last_V_1_payload_B;
reg    data_out_V_last_V_1_sel_rd;
reg    data_out_V_last_V_1_sel_wr;
wire    data_out_V_last_V_1_sel;
wire    data_out_V_last_V_1_load_A;
wire    data_out_V_last_V_1_load_B;
reg   [1:0] data_out_V_last_V_1_state;
wire    data_out_V_last_V_1_state_cmp_full;
reg   [2:0] ecpri_msg_state;
reg   [11:0] PRB_count_V;
reg   [7:0] PRB_fragmentation_V;
reg   [5:0] symbolID_V;
reg    data_in_TDATA_blk_n;
reg   [0:0] ap_CS_iter0_fsm;
reg   [0:0] ap_CS_iter1_fsm;
reg   [0:0] ap_CS_iter2_fsm;
wire   [2:0] ecpri_msg_state_load_load_fu_575_p1;
reg    data_out_TDATA_blk_n;
reg   [2:0] ecpri_msg_state_load_reg_894;
reg   [2:0] ecpri_msg_state_load_reg_894_pp0_iter1_reg;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg   [7:0] reg_515;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [7:0] reg_519;
reg   [7:0] reg_523;
reg   [7:0] reg_527;
reg   [7:0] reg_531;
reg   [7:0] reg_535;
reg   [7:0] reg_539;
reg   [7:0] reg_543;
reg   [7:0] reg_547;
reg   [7:0] reg_551;
reg   [7:0] reg_555;
reg   [7:0] reg_559;
wire   [7:0] grp_fu_485_p4;
reg   [7:0] reg_563;
reg   [7:0] reg_567;
wire   [7:0] grp_fu_505_p4;
reg   [7:0] reg_571;
wire   [7:0] trunc_ln647_2_fu_603_p1;
reg   [7:0] trunc_ln647_2_reg_902;
wire   [0:0] tmp_last_V_fu_683_p2;
reg   [0:0] tmp_last_V_reg_907;
wire   [7:0] trunc_ln647_1_fu_689_p1;
reg   [7:0] trunc_ln647_1_reg_912;
wire   [7:0] trunc_ln647_fu_693_p1;
reg   [7:0] trunc_ln647_reg_917;
reg   [3:0] trunc_ln_reg_922;
reg   [3:0] trunc_ln_reg_922_pp0_iter1_reg;
wire   [11:0] add_ln209_fu_727_p2;
reg   [11:0] add_ln209_reg_927;
reg   [11:0] add_ln209_reg_927_pp0_iter1_reg;
wire   [127:0] p_Result_50_fu_782_p17;
wire   [127:0] p_Result_49_fu_818_p17;
wire   [127:0] p_Result_s_6_fu_854_p17;
reg   [0:0] ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20;
wire   [0:0] ap_phi_reg_pp0_iter0_ecpri_msg_state_flag_1_reg_216;
wire   [0:0] icmp_ln879_fu_749_p2;
wire   [0:0] icmp_ln879_2_fu_591_p2;
reg   [2:0] ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20;
wire   [2:0] select_ln879_1_fu_659_p3;
wire   [2:0] ap_phi_reg_pp0_iter0_ecpri_msg_state_new_1_reg_252;
wire   [2:0] select_ln74_fu_761_p3;
reg   [0:0] ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20;
wire   [0:0] ap_phi_reg_pp0_iter0_PRB_fragmentation_V_s_reg_285;
reg   [7:0] ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20;
wire   [7:0] select_ln879_2_fu_668_p3;
wire   [7:0] ap_phi_reg_pp0_iter0_PRB_fragmentation_V_1_reg_321;
wire   [7:0] add_ln700_fu_607_p2;
wire   [0:0] icmp_ln879_5_fu_625_p2;
wire   [0:0] icmp_ln879_1_fu_613_p2;
wire   [0:0] icmp_ln879_4_fu_619_p2;
wire   [0:0] xor_ln879_fu_639_p2;
wire   [0:0] and_ln879_fu_645_p2;
wire   [2:0] select_ln206_fu_631_p3;
wire   [2:0] select_ln879_fu_651_p3;
wire   [0:0] and_ln879_1_fu_677_p2;
wire   [11:0] zext_ln209_fu_723_p1;
wire   [15:0] p_Result_s_fu_739_p4;
wire   [0:0] icmp_ln879_3_fu_755_p2;
reg   [0:0] ap_NS_iter0_fsm;
reg   [0:0] ap_NS_iter1_fsm;
reg   [0:0] ap_NS_iter2_fsm;
reg    ap_condition_576;
reg    ap_condition_373;

// power-on initialization
initial begin
#0 data_in_V_data_V_0_sel_rd = 1'b0;
#0 data_in_V_data_V_0_sel_wr = 1'b0;
#0 data_in_V_data_V_0_state = 2'd0;
#0 data_in_V_last_V_0_state = 2'd0;
#0 data_out_V_IQ_data_V_1_sel_rd = 1'b0;
#0 data_out_V_IQ_data_V_1_sel_wr = 1'b0;
#0 data_out_V_IQ_data_V_1_state = 2'd0;
#0 data_out_V_last_V_1_sel_rd = 1'b0;
#0 data_out_V_last_V_1_sel_wr = 1'b0;
#0 data_out_V_last_V_1_state = 2'd0;
#0 ecpri_msg_state = 3'd0;
#0 PRB_count_V = 12'd0;
#0 PRB_fragmentation_V = 8'd0;
#0 symbolID_V = 6'd0;
#0 ap_CS_iter0_fsm = 1'd0;
#0 ap_CS_iter1_fsm = 1'd1;
#0 ap_CS_iter2_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        PRB_count_V <= 12'd0;
    end else begin
        if ((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd2))) begin
            PRB_count_V <= add_ln209_fu_727_p2;
        end else if (((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_2_fu_591_p2 == 1'd0) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd6)) | (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd0)))) begin
            PRB_count_V <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        PRB_fragmentation_V <= 8'd0;
    end else begin
        if ((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20 == 1'd1))) begin
            PRB_fragmentation_V <= ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((data_in_V_data_V_0_ack_out == 1'b1) & (data_in_V_data_V_0_vld_out == 1'b1))) begin
            data_in_V_data_V_0_sel_rd <= ~data_in_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((data_in_V_data_V_0_ack_in == 1'b1) & (data_in_V_data_V_0_vld_in == 1'b1))) begin
            data_in_V_data_V_0_sel_wr <= ~data_in_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_data_V_0_state <= 2'd0;
    end else begin
        if ((((data_in_V_data_V_0_vld_in == 1'b0) & (data_in_V_data_V_0_state == 2'd2)) | ((data_in_V_data_V_0_vld_in == 1'b0) & (data_in_V_data_V_0_ack_out == 1'b1) & (data_in_V_data_V_0_state == 2'd3)))) begin
            data_in_V_data_V_0_state <= 2'd2;
        end else if ((((data_in_V_data_V_0_ack_out == 1'b0) & (data_in_V_data_V_0_state == 2'd1)) | ((data_in_V_data_V_0_ack_out == 1'b0) & (data_in_V_data_V_0_vld_in == 1'b1) & (data_in_V_data_V_0_state == 2'd3)))) begin
            data_in_V_data_V_0_state <= 2'd1;
        end else if (((~((data_in_V_data_V_0_vld_in == 1'b0) & (data_in_V_data_V_0_ack_out == 1'b1)) & ~((data_in_V_data_V_0_ack_out == 1'b0) & (data_in_V_data_V_0_vld_in == 1'b1)) & (data_in_V_data_V_0_state == 2'd3)) | ((data_in_V_data_V_0_ack_out == 1'b1) & (data_in_V_data_V_0_state == 2'd1)) | ((data_in_V_data_V_0_vld_in == 1'b1) & (data_in_V_data_V_0_state == 2'd2)))) begin
            data_in_V_data_V_0_state <= 2'd3;
        end else begin
            data_in_V_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_in_V_last_V_0_state <= 2'd0;
    end else begin
        if ((((data_in_V_last_V_0_vld_in == 1'b0) & (data_in_V_last_V_0_state == 2'd2)) | ((data_in_V_last_V_0_vld_in == 1'b0) & (data_in_V_last_V_0_state == 2'd3) & (data_in_V_last_V_0_ack_out == 1'b1)))) begin
            data_in_V_last_V_0_state <= 2'd2;
        end else if ((((data_in_V_last_V_0_ack_out == 1'b0) & (data_in_V_last_V_0_state == 2'd1)) | ((data_in_V_last_V_0_ack_out == 1'b0) & (data_in_V_last_V_0_state == 2'd3) & (data_in_V_last_V_0_vld_in == 1'b1)))) begin
            data_in_V_last_V_0_state <= 2'd1;
        end else if (((~((data_in_V_last_V_0_vld_in == 1'b0) & (data_in_V_last_V_0_ack_out == 1'b1)) & ~((data_in_V_last_V_0_ack_out == 1'b0) & (data_in_V_last_V_0_vld_in == 1'b1)) & (data_in_V_last_V_0_state == 2'd3)) | ((data_in_V_last_V_0_state == 2'd1) & (data_in_V_last_V_0_ack_out == 1'b1)) | ((data_in_V_last_V_0_state == 2'd2) & (data_in_V_last_V_0_vld_in == 1'b1)))) begin
            data_in_V_last_V_0_state <= 2'd3;
        end else begin
            data_in_V_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_IQ_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((data_out_V_IQ_data_V_1_ack_out == 1'b1) & (data_out_V_IQ_data_V_1_vld_out == 1'b1))) begin
            data_out_V_IQ_data_V_1_sel_rd <= ~data_out_V_IQ_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_IQ_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((data_out_V_IQ_data_V_1_ack_in == 1'b1) & (data_out_V_IQ_data_V_1_vld_in == 1'b1))) begin
            data_out_V_IQ_data_V_1_sel_wr <= ~data_out_V_IQ_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_IQ_data_V_1_state <= 2'd0;
    end else begin
        if ((((data_out_V_IQ_data_V_1_vld_in == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd2)) | ((data_out_V_IQ_data_V_1_vld_in == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3) & (data_out_V_IQ_data_V_1_ack_out == 1'b1)))) begin
            data_out_V_IQ_data_V_1_state <= 2'd2;
        end else if ((((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd1)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3) & (data_out_V_IQ_data_V_1_vld_in == 1'b1)))) begin
            data_out_V_IQ_data_V_1_state <= 2'd1;
        end else if (((~((data_out_V_IQ_data_V_1_vld_in == 1'b0) & (data_out_V_IQ_data_V_1_ack_out == 1'b1)) & ~((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_vld_in == 1'b1)) & (data_out_V_IQ_data_V_1_state == 2'd3)) | ((data_out_V_IQ_data_V_1_state == 2'd1) & (data_out_V_IQ_data_V_1_ack_out == 1'b1)) | ((data_out_V_IQ_data_V_1_state == 2'd2) & (data_out_V_IQ_data_V_1_vld_in == 1'b1)))) begin
            data_out_V_IQ_data_V_1_state <= 2'd3;
        end else begin
            data_out_V_IQ_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((data_out_V_last_V_1_ack_out == 1'b1) & (data_out_V_last_V_1_vld_out == 1'b1))) begin
            data_out_V_last_V_1_sel_rd <= ~data_out_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((data_out_V_last_V_1_ack_in == 1'b1) & (data_out_V_last_V_1_vld_in == 1'b1))) begin
            data_out_V_last_V_1_sel_wr <= ~data_out_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_out_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_state == 2'd2)) | ((data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_state == 2'd3) & (data_out_V_last_V_1_ack_out == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd2;
        end else if ((((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd1)) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3) & (data_out_V_last_V_1_vld_in == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd1;
        end else if (((~((data_out_V_last_V_1_vld_in == 1'b0) & (data_out_V_last_V_1_ack_out == 1'b1)) & ~((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_vld_in == 1'b1)) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_V_last_V_1_state == 2'd1) & (data_out_V_last_V_1_ack_out == 1'b1)) | ((data_out_V_last_V_1_state == 2'd2) & (data_out_V_last_V_1_vld_in == 1'b1)))) begin
            data_out_V_last_V_1_state <= 2'd3;
        end else begin
            data_out_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ecpri_msg_state <= 3'd0;
    end else begin
        if ((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20 == 1'd1))) begin
            ecpri_msg_state <= ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        symbolID_V <= 6'd0;
    end else begin
        if ((1'b1 == ap_condition_373)) begin
            if ((ecpri_msg_state == 3'd2)) begin
                symbolID_V <= {{data_in_V_data_V_0_data_out[77:72]}};
            end else if (((icmp_ln879_2_fu_591_p2 == 1'd1) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd6))) begin
                symbolID_V <= 6'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd2))) begin
        add_ln209_reg_927 <= add_ln209_fu_727_p2;
        trunc_ln_reg_922 <= {{data_in_V_data_V_0_data_out[75:72]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm))) begin
        add_ln209_reg_927_pp0_iter1_reg <= add_ln209_reg_927;
        ecpri_msg_state_load_reg_894_pp0_iter1_reg <= ecpri_msg_state_load_reg_894;
        trunc_ln_reg_922_pp0_iter1_reg <= trunc_ln_reg_922;
    end
end

always @ (posedge ap_clk) begin
    if ((data_in_V_data_V_0_load_A == 1'b1)) begin
        data_in_V_data_V_0_payload_A <= data_in_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((data_in_V_data_V_0_load_B == 1'b1)) begin
        data_in_V_data_V_0_payload_B <= data_in_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_IQ_data_V_1_load_A == 1'b1)) begin
        data_out_V_IQ_data_V_1_payload_A <= data_out_V_IQ_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_IQ_data_V_1_load_B == 1'b1)) begin
        data_out_V_IQ_data_V_1_payload_B <= data_out_V_IQ_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_last_V_1_load_A == 1'b1)) begin
        data_out_V_last_V_1_payload_A <= data_out_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((data_out_V_last_V_1_load_B == 1'b1)) begin
        data_out_V_last_V_1_payload_B <= data_out_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm))) begin
        ecpri_msg_state_load_reg_894 <= ecpri_msg_state;
    end
end

always @ (posedge ap_clk) begin
    if (((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd5)) | (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd4)) | (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd3)))) begin
        reg_515 <= {{data_in_V_data_V_0_data_out[15:8]}};
        reg_519 <= {{data_in_V_data_V_0_data_out[23:16]}};
        reg_523 <= {{data_in_V_data_V_0_data_out[31:24]}};
        reg_527 <= {{data_in_V_data_V_0_data_out[39:32]}};
        reg_531 <= {{data_in_V_data_V_0_data_out[47:40]}};
        reg_535 <= {{data_in_V_data_V_0_data_out[55:48]}};
        reg_539 <= {{data_in_V_data_V_0_data_out[63:56]}};
        reg_543 <= {{data_in_V_data_V_0_data_out[71:64]}};
        reg_547 <= {{data_in_V_data_V_0_data_out[79:72]}};
        reg_551 <= {{data_in_V_data_V_0_data_out[87:80]}};
        reg_555 <= {{data_in_V_data_V_0_data_out[95:88]}};
        reg_559 <= {{data_in_V_data_V_0_data_out[103:96]}};
        reg_563 <= {{data_in_V_data_V_0_data_out[111:104]}};
        reg_567 <= {{data_in_V_data_V_0_data_out[119:112]}};
        reg_571 <= {{data_in_V_data_V_0_data_out[127:120]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd5))) begin
        tmp_last_V_reg_907 <= tmp_last_V_fu_683_p2;
        trunc_ln647_2_reg_902 <= trunc_ln647_2_fu_603_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd4))) begin
        trunc_ln647_1_reg_912 <= trunc_ln647_1_fu_689_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd3))) begin
        trunc_ln647_reg_917 <= trunc_ln647_fu_693_p1;
    end
end

always @ (*) begin
    if ((((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_2_fu_591_p2 == 1'd1) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd6)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_2_fu_591_p2 == 1'd0) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd6)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd0)))) begin
        ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20 = 8'd0;
    end else if (((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd5))) begin
        ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20 = select_ln879_2_fu_668_p3;
    end else begin
        ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20 = ap_phi_reg_pp0_iter0_PRB_fragmentation_V_1_reg_321;
    end
end

always @ (*) begin
    if ((((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_2_fu_591_p2 == 1'd0) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd6)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd0)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd5)))) begin
        ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20 = 1'd1;
    end else if ((((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_2_fu_591_p2 == 1'd1) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd6)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd7)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd4)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd3)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd2)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_fu_749_p2 == 1'd0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_fu_749_p2 == 1'd1) & (ecpri_msg_state == 3'd1)))) begin
        ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20 = 1'd0;
    end else begin
        ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20 = ap_phi_reg_pp0_iter0_PRB_fragmentation_V_s_reg_285;
    end
end

always @ (*) begin
    if ((((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_2_fu_591_p2 == 1'd1) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd6)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_2_fu_591_p2 == 1'd0) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd6)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd0)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd5)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd4)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd3)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd2)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_fu_749_p2 == 1'd0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_fu_749_p2 == 1'd1) & (ecpri_msg_state == 3'd1)))) begin
        ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20 = 1'd1;
    end else if (((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd7))) begin
        ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20 = 1'd0;
    end else begin
        ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20 = ap_phi_reg_pp0_iter0_ecpri_msg_state_flag_1_reg_216;
    end
end

always @ (*) begin
    if (((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_2_fu_591_p2 == 1'd1) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd6))) begin
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = 3'd0;
    end else if (((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_fu_749_p2 == 1'd1) & (ecpri_msg_state == 3'd1))) begin
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = select_ln74_fu_761_p3;
    end else if ((((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_2_fu_591_p2 == 1'd0) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd6)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state_load_load_fu_575_p1 == 3'd0)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (icmp_ln879_fu_749_p2 == 1'd0) & (ecpri_msg_state == 3'd1)))) begin
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = 3'd1;
    end else if (((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd2))) begin
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = 3'd3;
    end else if (((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd3))) begin
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = 3'd4;
    end else if (((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd4))) begin
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = 3'd5;
    end else if (((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd5))) begin
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = select_ln879_1_fu_659_p3;
    end else begin
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = ap_phi_reg_pp0_iter0_ecpri_msg_state_new_1_reg_252;
    end
end

always @ (*) begin
    if ((((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd5)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd4)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd3)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd2)) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd1)))) begin
        data_in_TDATA_blk_n = data_in_V_data_V_0_state[1'd0];
    end else begin
        data_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd5)) | (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd4)) | (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd3)) | (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd2)) | (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd1)))) begin
        data_in_V_data_V_0_ack_out = 1'b1;
    end else begin
        data_in_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((data_in_V_data_V_0_sel == 1'b1)) begin
        data_in_V_data_V_0_data_out = data_in_V_data_V_0_payload_B;
    end else begin
        data_in_V_data_V_0_data_out = data_in_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if (((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd5)) | (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd4)) | (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd3)) | (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd2)) | (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (ecpri_msg_state == 3'd1)))) begin
        data_in_V_last_V_0_ack_out = 1'b1;
    end else begin
        data_in_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & (ecpri_msg_state_load_reg_894_pp0_iter1_reg == 3'd5)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & (ecpri_msg_state_load_reg_894_pp0_iter1_reg == 3'd4)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & (ecpri_msg_state_load_reg_894_pp0_iter1_reg == 3'd3)) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd5)) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd4)) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd3)))) begin
        data_out_TDATA_blk_n = data_out_V_IQ_data_V_1_state[1'd1];
    end else begin
        data_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_576)) begin
        if ((ecpri_msg_state_load_reg_894 == 3'd3)) begin
            data_out_V_IQ_data_V_1_data_in = p_Result_s_6_fu_854_p17;
        end else if ((ecpri_msg_state_load_reg_894 == 3'd4)) begin
            data_out_V_IQ_data_V_1_data_in = p_Result_49_fu_818_p17;
        end else if ((ecpri_msg_state_load_reg_894 == 3'd5)) begin
            data_out_V_IQ_data_V_1_data_in = p_Result_50_fu_782_p17;
        end else begin
            data_out_V_IQ_data_V_1_data_in = 'bx;
        end
    end else begin
        data_out_V_IQ_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((data_out_V_IQ_data_V_1_sel == 1'b1)) begin
        data_out_V_IQ_data_V_1_data_out = data_out_V_IQ_data_V_1_payload_B;
    end else begin
        data_out_V_IQ_data_V_1_data_out = data_out_V_IQ_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state2_io) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd5)) | (~((1'b1 == ap_block_state2_io) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd4)) | (~((1'b1 == ap_block_state2_io) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd3)))) begin
        data_out_V_IQ_data_V_1_vld_in = 1'b1;
    end else begin
        data_out_V_IQ_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd4)) | (~((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd3)))) begin
        data_out_V_last_V_1_data_in = 1'd0;
    end else if ((~((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd5))) begin
        data_out_V_last_V_1_data_in = tmp_last_V_reg_907;
    end else begin
        data_out_V_last_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((data_out_V_last_V_1_sel == 1'b1)) begin
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_B;
    end else begin
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state2_io) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd5)) | (~((1'b1 == ap_block_state2_io) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd4)) | (~((1'b1 == ap_block_state2_io) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (ecpri_msg_state_load_reg_894 == 3'd3)))) begin
        data_out_V_last_V_1_vld_in = 1'b1;
    end else begin
        data_out_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1))) & ~((1'b1 == ap_block_state2_io) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_block_state2_io) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))))) & (~(ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) | ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1))))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b0 == ap_block_state2_io))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else if ((~((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))) & (~(ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_block_state2_io) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3))))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

assign PRB_count_each_section_V = add_ln209_reg_927_pp0_iter1_reg;

assign add_ln209_fu_727_p2 = (PRB_count_V + zext_ln209_fu_723_p1);

assign add_ln700_fu_607_p2 = (8'd1 + PRB_fragmentation_V);

assign and_ln879_1_fu_677_p2 = (icmp_ln879_5_fu_625_p2 & and_ln879_fu_645_p2);

assign and_ln879_fu_645_p2 = (xor_ln879_fu_639_p2 & icmp_ln879_4_fu_619_p2);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)));
end

always @ (*) begin
    ap_block_state2_io = (((data_out_V_IQ_data_V_1_ack_in == 1'b0) & (ecpri_msg_state_load_reg_894 == 3'd5)) | ((data_out_V_IQ_data_V_1_ack_in == 1'b0) & (ecpri_msg_state_load_reg_894 == 3'd4)) | ((data_out_V_IQ_data_V_1_ack_in == 1'b0) & (ecpri_msg_state_load_reg_894 == 3'd3)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((data_out_V_IQ_data_V_1_ack_in == 1'b0) & (ecpri_msg_state_load_reg_894_pp0_iter1_reg == 3'd5)) | ((data_out_V_IQ_data_V_1_ack_in == 1'b0) & (ecpri_msg_state_load_reg_894_pp0_iter1_reg == 3'd4)) | ((data_out_V_IQ_data_V_1_ack_in == 1'b0) & (ecpri_msg_state_load_reg_894_pp0_iter1_reg == 3'd3)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)));
end

always @ (*) begin
    ap_condition_373 = (~(((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd5)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd4)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd3)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd2)) | ((data_in_V_data_V_0_vld_out == 1'b0) & (ecpri_msg_state == 3'd1)) | ((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | (1'b1 == ap_block_state3_io) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) | ((ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm) & (1'b1 == ap_block_state2_io))) & (ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm));
end

always @ (*) begin
    ap_condition_576 = (~((ap_ST_iter2_fsm_state3 == ap_CS_iter2_fsm) & ((data_out_V_last_V_1_state == 2'd1) | (data_out_V_IQ_data_V_1_state == 2'd1) | ((data_out_TREADY == 1'b0) & (data_out_V_last_V_1_state == 2'd3)) | ((data_out_TREADY == 1'b0) & (data_out_V_IQ_data_V_1_state == 2'd3)))) & (ap_ST_iter1_fsm_state2 == ap_CS_iter1_fsm));
end

assign ap_phi_reg_pp0_iter0_PRB_fragmentation_V_1_reg_321 = 'bx;

assign ap_phi_reg_pp0_iter0_PRB_fragmentation_V_s_reg_285 = 'bx;

assign ap_phi_reg_pp0_iter0_ecpri_msg_state_flag_1_reg_216 = 'bx;

assign ap_phi_reg_pp0_iter0_ecpri_msg_state_new_1_reg_252 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign data_in_TREADY = data_in_V_last_V_0_state[1'd1];

assign data_in_V_data_V_0_ack_in = data_in_V_data_V_0_state[1'd1];

assign data_in_V_data_V_0_load_A = (~data_in_V_data_V_0_sel_wr & data_in_V_data_V_0_state_cmp_full);

assign data_in_V_data_V_0_load_B = (data_in_V_data_V_0_state_cmp_full & data_in_V_data_V_0_sel_wr);

assign data_in_V_data_V_0_sel = data_in_V_data_V_0_sel_rd;

assign data_in_V_data_V_0_state_cmp_full = ((data_in_V_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign data_in_V_data_V_0_vld_in = data_in_TVALID;

assign data_in_V_data_V_0_vld_out = data_in_V_data_V_0_state[1'd0];

assign data_in_V_last_V_0_vld_in = data_in_TVALID;

assign data_out_TDATA = data_out_V_IQ_data_V_1_data_out;

assign data_out_TLAST = data_out_V_last_V_1_data_out;

assign data_out_TVALID = data_out_V_last_V_1_state[1'd0];

assign data_out_V_IQ_data_V_1_ack_in = data_out_V_IQ_data_V_1_state[1'd1];

assign data_out_V_IQ_data_V_1_ack_out = data_out_TREADY;

assign data_out_V_IQ_data_V_1_load_A = (~data_out_V_IQ_data_V_1_sel_wr & data_out_V_IQ_data_V_1_state_cmp_full);

assign data_out_V_IQ_data_V_1_load_B = (data_out_V_IQ_data_V_1_state_cmp_full & data_out_V_IQ_data_V_1_sel_wr);

assign data_out_V_IQ_data_V_1_sel = data_out_V_IQ_data_V_1_sel_rd;

assign data_out_V_IQ_data_V_1_state_cmp_full = ((data_out_V_IQ_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign data_out_V_IQ_data_V_1_vld_out = data_out_V_IQ_data_V_1_state[1'd0];

assign data_out_V_last_V_1_ack_in = data_out_V_last_V_1_state[1'd1];

assign data_out_V_last_V_1_ack_out = data_out_TREADY;

assign data_out_V_last_V_1_load_A = (~data_out_V_last_V_1_sel_wr & data_out_V_last_V_1_state_cmp_full);

assign data_out_V_last_V_1_load_B = (data_out_V_last_V_1_state_cmp_full & data_out_V_last_V_1_sel_wr);

assign data_out_V_last_V_1_sel = data_out_V_last_V_1_sel_rd;

assign data_out_V_last_V_1_state_cmp_full = ((data_out_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign data_out_V_last_V_1_vld_out = data_out_V_last_V_1_state[1'd0];

assign depack_symbol_number_V = trunc_ln_reg_922_pp0_iter1_reg;

assign ecpri_msg_state_load_load_fu_575_p1 = ecpri_msg_state;

assign grp_fu_485_p4 = {{data_in_V_data_V_0_data_out[111:104]}};

assign grp_fu_505_p4 = {{data_in_V_data_V_0_data_out[127:120]}};

assign icmp_ln879_1_fu_613_p2 = ((add_ln700_fu_607_p2 == 8'd30) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_591_p2 = ((symbolID_V == 6'd13) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_755_p2 = ((grp_fu_505_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_4_fu_619_p2 = ((PRB_count_V == 12'd273) ? 1'b1 : 1'b0);

assign icmp_ln879_5_fu_625_p2 = ((add_ln700_fu_607_p2 == 8'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_749_p2 = ((p_Result_s_fu_739_p4 == 16'd65198) ? 1'b1 : 1'b0);

assign iq_msg_state_out_V = ecpri_msg_state_load_reg_894_pp0_iter1_reg;

assign p_Result_49_fu_818_p17 = {{{{{{{{{{{{{{{{trunc_ln647_1_reg_912}, {reg_515}}, {reg_519}}, {reg_523}}, {reg_527}}, {reg_531}}, {reg_535}}, {reg_539}}, {reg_543}}, {reg_547}}, {reg_551}}, {reg_555}}, {reg_559}}, {reg_563}}, {reg_567}}, {reg_571}};

assign p_Result_50_fu_782_p17 = {{{{{{{{{{{{{{{{trunc_ln647_2_reg_902}, {reg_515}}, {reg_519}}, {reg_523}}, {reg_527}}, {reg_531}}, {reg_535}}, {reg_539}}, {reg_543}}, {reg_547}}, {reg_551}}, {reg_555}}, {reg_559}}, {reg_563}}, {reg_567}}, {reg_571}};

assign p_Result_s_6_fu_854_p17 = {{{{{{{{{{{{{{{{trunc_ln647_reg_917}, {reg_515}}, {reg_519}}, {reg_523}}, {reg_527}}, {reg_531}}, {reg_535}}, {reg_539}}, {reg_543}}, {reg_547}}, {reg_551}}, {reg_555}}, {reg_559}}, {reg_563}}, {reg_567}}, {reg_571}};

assign p_Result_s_fu_739_p4 = {{data_in_V_data_V_0_data_out[111:96]}};

assign select_ln206_fu_631_p3 = ((icmp_ln879_5_fu_625_p2[0:0] === 1'b1) ? 3'd6 : 3'd3);

assign select_ln74_fu_761_p3 = ((icmp_ln879_3_fu_755_p2[0:0] === 1'b1) ? 3'd2 : 3'd1);

assign select_ln879_1_fu_659_p3 = ((icmp_ln879_1_fu_613_p2[0:0] === 1'b1) ? 3'd1 : select_ln879_fu_651_p3);

assign select_ln879_2_fu_668_p3 = ((icmp_ln879_1_fu_613_p2[0:0] === 1'b1) ? 8'd0 : add_ln700_fu_607_p2);

assign select_ln879_fu_651_p3 = ((and_ln879_fu_645_p2[0:0] === 1'b1) ? select_ln206_fu_631_p3 : 3'd3);

assign tmp_last_V_fu_683_p2 = (icmp_ln879_1_fu_613_p2 | and_ln879_1_fu_677_p2);

assign trunc_ln647_1_fu_689_p1 = data_in_V_data_V_0_data_out[7:0];

assign trunc_ln647_2_fu_603_p1 = data_in_V_data_V_0_data_out[7:0];

assign trunc_ln647_fu_693_p1 = data_in_V_data_V_0_data_out[7:0];

assign xor_ln879_fu_639_p2 = (icmp_ln879_1_fu_613_p2 ^ 1'd1);

assign zext_ln209_fu_723_p1 = grp_fu_485_p4;

endmodule //uplane_depacketiser
