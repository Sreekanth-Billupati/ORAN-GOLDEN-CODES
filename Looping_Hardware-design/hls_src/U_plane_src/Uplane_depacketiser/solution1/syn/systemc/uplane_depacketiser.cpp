// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "uplane_depacketiser.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic uplane_depacketiser::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic uplane_depacketiser::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> uplane_depacketiser::ap_ST_iter0_fsm_state1 = "0";
const sc_lv<1> uplane_depacketiser::ap_ST_iter1_fsm_state2 = "0";
const sc_lv<1> uplane_depacketiser::ap_ST_iter2_fsm_state3 = "0";
const sc_lv<1> uplane_depacketiser::ap_ST_iter1_fsm_state0 = "1";
const sc_lv<1> uplane_depacketiser::ap_ST_iter2_fsm_state0 = "1";
const bool uplane_depacketiser::ap_const_boolean_1 = true;
const sc_lv<1> uplane_depacketiser::ap_const_lv1_0 = "0";
const sc_lv<1> uplane_depacketiser::ap_const_lv1_1 = "1";
const sc_lv<2> uplane_depacketiser::ap_const_lv2_0 = "00";
const sc_lv<2> uplane_depacketiser::ap_const_lv2_2 = "10";
const sc_lv<2> uplane_depacketiser::ap_const_lv2_3 = "11";
const sc_lv<2> uplane_depacketiser::ap_const_lv2_1 = "1";
const sc_lv<3> uplane_depacketiser::ap_const_lv3_0 = "000";
const sc_lv<12> uplane_depacketiser::ap_const_lv12_0 = "000000000000";
const sc_lv<8> uplane_depacketiser::ap_const_lv8_0 = "00000000";
const sc_lv<6> uplane_depacketiser::ap_const_lv6_0 = "000000";
const sc_lv<3> uplane_depacketiser::ap_const_lv3_1 = "1";
const sc_lv<3> uplane_depacketiser::ap_const_lv3_2 = "10";
const sc_lv<3> uplane_depacketiser::ap_const_lv3_3 = "11";
const sc_lv<3> uplane_depacketiser::ap_const_lv3_4 = "100";
const sc_lv<3> uplane_depacketiser::ap_const_lv3_5 = "101";
const sc_lv<3> uplane_depacketiser::ap_const_lv3_7 = "111";
const sc_lv<3> uplane_depacketiser::ap_const_lv3_6 = "110";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_8 = "1000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_F = "1111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_10 = "10000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_17 = "10111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_18 = "11000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_1F = "11111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_20 = "100000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_27 = "100111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_28 = "101000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_2F = "101111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_30 = "110000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_37 = "110111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_38 = "111000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_3F = "111111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_40 = "1000000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_47 = "1000111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_48 = "1001000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_4F = "1001111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_50 = "1010000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_57 = "1010111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_58 = "1011000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_5F = "1011111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_60 = "1100000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_67 = "1100111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_68 = "1101000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_6F = "1101111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_70 = "1110000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_77 = "1110111";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_78 = "1111000";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_7F = "1111111";
const sc_lv<6> uplane_depacketiser::ap_const_lv6_D = "1101";
const sc_lv<8> uplane_depacketiser::ap_const_lv8_1 = "1";
const sc_lv<8> uplane_depacketiser::ap_const_lv8_1E = "11110";
const sc_lv<12> uplane_depacketiser::ap_const_lv12_111 = "100010001";
const sc_lv<8> uplane_depacketiser::ap_const_lv8_3 = "11";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_4D = "1001101";
const sc_lv<32> uplane_depacketiser::ap_const_lv32_4B = "1001011";
const sc_lv<16> uplane_depacketiser::ap_const_lv16_FEAE = "1111111010101110";
const bool uplane_depacketiser::ap_const_boolean_0 = false;

uplane_depacketiser::uplane_depacketiser(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_PRB_count_each_section_V);
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ecpri_msg_state_load_reg_894_pp0_iter1_reg );
    sensitive << ( add_ln209_reg_927_pp0_iter1_reg );

    SC_METHOD(thread_add_ln209_fu_727_p2);
    sensitive << ( PRB_count_V );
    sensitive << ( zext_ln209_fu_723_p1 );

    SC_METHOD(thread_add_ln700_fu_607_p2);
    sensitive << ( PRB_fragmentation_V );

    SC_METHOD(thread_and_ln879_1_fu_677_p2);
    sensitive << ( icmp_ln879_5_fu_625_p2 );
    sensitive << ( and_ln879_fu_645_p2 );

    SC_METHOD(thread_and_ln879_fu_645_p2);
    sensitive << ( icmp_ln879_4_fu_619_p2 );
    sensitive << ( xor_ln879_fu_639_p2 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( ecpri_msg_state );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( data_out_V_IQ_data_V_1_ack_in );
    sensitive << ( ecpri_msg_state_load_reg_894 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( data_out_V_IQ_data_V_1_ack_in );
    sensitive << ( ecpri_msg_state_load_reg_894_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_ap_condition_373);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_condition_576);
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );

    SC_METHOD(thread_ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20);
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ecpri_msg_state_load_load_fu_575_p1 );
    sensitive << ( icmp_ln879_2_fu_591_p2 );
    sensitive << ( select_ln879_2_fu_668_p3 );
    sensitive << ( ap_phi_reg_pp0_iter0_PRB_fragmentation_V_1_reg_321 );

    SC_METHOD(thread_ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20);
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ecpri_msg_state_load_load_fu_575_p1 );
    sensitive << ( icmp_ln879_fu_749_p2 );
    sensitive << ( icmp_ln879_2_fu_591_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_PRB_fragmentation_V_s_reg_285 );

    SC_METHOD(thread_ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20);
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ecpri_msg_state_load_load_fu_575_p1 );
    sensitive << ( ap_phi_reg_pp0_iter0_ecpri_msg_state_flag_1_reg_216 );
    sensitive << ( icmp_ln879_fu_749_p2 );
    sensitive << ( icmp_ln879_2_fu_591_p2 );

    SC_METHOD(thread_ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20);
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ecpri_msg_state_load_load_fu_575_p1 );
    sensitive << ( icmp_ln879_fu_749_p2 );
    sensitive << ( icmp_ln879_2_fu_591_p2 );
    sensitive << ( select_ln879_1_fu_659_p3 );
    sensitive << ( ap_phi_reg_pp0_iter0_ecpri_msg_state_new_1_reg_252 );
    sensitive << ( select_ln74_fu_761_p3 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_PRB_fragmentation_V_1_reg_321);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_PRB_fragmentation_V_s_reg_285);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_ecpri_msg_state_flag_1_reg_216);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_ecpri_msg_state_new_1_reg_252);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_data_in_TDATA_blk_n);
    sensitive << ( data_in_V_data_V_0_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_data_in_TREADY);
    sensitive << ( data_in_V_last_V_0_state );

    SC_METHOD(thread_data_in_V_data_V_0_ack_in);
    sensitive << ( data_in_V_data_V_0_state );

    SC_METHOD(thread_data_in_V_data_V_0_ack_out);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_data_in_V_data_V_0_data_out);
    sensitive << ( data_in_V_data_V_0_payload_A );
    sensitive << ( data_in_V_data_V_0_payload_B );
    sensitive << ( data_in_V_data_V_0_sel );

    SC_METHOD(thread_data_in_V_data_V_0_load_A);
    sensitive << ( data_in_V_data_V_0_sel_wr );
    sensitive << ( data_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_data_in_V_data_V_0_load_B);
    sensitive << ( data_in_V_data_V_0_sel_wr );
    sensitive << ( data_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_data_in_V_data_V_0_sel);
    sensitive << ( data_in_V_data_V_0_sel_rd );

    SC_METHOD(thread_data_in_V_data_V_0_state_cmp_full);
    sensitive << ( data_in_V_data_V_0_state );

    SC_METHOD(thread_data_in_V_data_V_0_vld_in);
    sensitive << ( data_in_TVALID );

    SC_METHOD(thread_data_in_V_data_V_0_vld_out);
    sensitive << ( data_in_V_data_V_0_state );

    SC_METHOD(thread_data_in_V_last_V_0_ack_out);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_data_in_V_last_V_0_vld_in);
    sensitive << ( data_in_TVALID );

    SC_METHOD(thread_data_out_TDATA);
    sensitive << ( data_out_V_IQ_data_V_1_data_out );

    SC_METHOD(thread_data_out_TDATA_blk_n);
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ecpri_msg_state_load_reg_894 );
    sensitive << ( ecpri_msg_state_load_reg_894_pp0_iter1_reg );

    SC_METHOD(thread_data_out_TLAST);
    sensitive << ( data_out_V_last_V_1_data_out );

    SC_METHOD(thread_data_out_TVALID);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_data_out_V_IQ_data_V_1_ack_in);
    sensitive << ( data_out_V_IQ_data_V_1_state );

    SC_METHOD(thread_data_out_V_IQ_data_V_1_ack_out);
    sensitive << ( data_out_TREADY );

    SC_METHOD(thread_data_out_V_IQ_data_V_1_data_in);
    sensitive << ( ecpri_msg_state_load_reg_894 );
    sensitive << ( p_Result_50_fu_782_p17 );
    sensitive << ( p_Result_49_fu_818_p17 );
    sensitive << ( p_Result_s_6_fu_854_p17 );
    sensitive << ( ap_condition_576 );

    SC_METHOD(thread_data_out_V_IQ_data_V_1_data_out);
    sensitive << ( data_out_V_IQ_data_V_1_payload_A );
    sensitive << ( data_out_V_IQ_data_V_1_payload_B );
    sensitive << ( data_out_V_IQ_data_V_1_sel );

    SC_METHOD(thread_data_out_V_IQ_data_V_1_load_A);
    sensitive << ( data_out_V_IQ_data_V_1_sel_wr );
    sensitive << ( data_out_V_IQ_data_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_IQ_data_V_1_load_B);
    sensitive << ( data_out_V_IQ_data_V_1_sel_wr );
    sensitive << ( data_out_V_IQ_data_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_IQ_data_V_1_sel);
    sensitive << ( data_out_V_IQ_data_V_1_sel_rd );

    SC_METHOD(thread_data_out_V_IQ_data_V_1_state_cmp_full);
    sensitive << ( data_out_V_IQ_data_V_1_state );

    SC_METHOD(thread_data_out_V_IQ_data_V_1_vld_in);
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ecpri_msg_state_load_reg_894 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_data_out_V_IQ_data_V_1_vld_out);
    sensitive << ( data_out_V_IQ_data_V_1_state );

    SC_METHOD(thread_data_out_V_last_V_1_ack_in);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_data_out_V_last_V_1_ack_out);
    sensitive << ( data_out_TREADY );

    SC_METHOD(thread_data_out_V_last_V_1_data_in);
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ecpri_msg_state_load_reg_894 );
    sensitive << ( tmp_last_V_reg_907 );

    SC_METHOD(thread_data_out_V_last_V_1_data_out);
    sensitive << ( data_out_V_last_V_1_payload_A );
    sensitive << ( data_out_V_last_V_1_payload_B );
    sensitive << ( data_out_V_last_V_1_sel );

    SC_METHOD(thread_data_out_V_last_V_1_load_A);
    sensitive << ( data_out_V_last_V_1_sel_wr );
    sensitive << ( data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_last_V_1_load_B);
    sensitive << ( data_out_V_last_V_1_sel_wr );
    sensitive << ( data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_data_out_V_last_V_1_sel);
    sensitive << ( data_out_V_last_V_1_sel_rd );

    SC_METHOD(thread_data_out_V_last_V_1_state_cmp_full);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_data_out_V_last_V_1_vld_in);
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ecpri_msg_state_load_reg_894 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_data_out_V_last_V_1_vld_out);
    sensitive << ( data_out_V_last_V_1_state );

    SC_METHOD(thread_depack_symbol_number_V);
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ecpri_msg_state_load_reg_894_pp0_iter1_reg );
    sensitive << ( trunc_ln_reg_922_pp0_iter1_reg );

    SC_METHOD(thread_ecpri_msg_state_load_load_fu_575_p1);
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_grp_fu_485_p4);
    sensitive << ( data_in_V_data_V_0_data_out );

    SC_METHOD(thread_grp_fu_505_p4);
    sensitive << ( data_in_V_data_V_0_data_out );

    SC_METHOD(thread_icmp_ln879_1_fu_613_p2);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( add_ln700_fu_607_p2 );

    SC_METHOD(thread_icmp_ln879_2_fu_591_p2);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( symbolID_V );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ecpri_msg_state_load_load_fu_575_p1 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_icmp_ln879_3_fu_755_p2);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( grp_fu_505_p4 );
    sensitive << ( icmp_ln879_fu_749_p2 );

    SC_METHOD(thread_icmp_ln879_4_fu_619_p2);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( PRB_count_V );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_icmp_ln879_5_fu_625_p2);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( add_ln700_fu_607_p2 );

    SC_METHOD(thread_icmp_ln879_fu_749_p2);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( p_Result_s_fu_739_p4 );

    SC_METHOD(thread_iq_msg_state_out_V);
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ecpri_msg_state_load_reg_894_pp0_iter1_reg );

    SC_METHOD(thread_p_Result_49_fu_818_p17);
    sensitive << ( reg_515 );
    sensitive << ( reg_519 );
    sensitive << ( reg_523 );
    sensitive << ( reg_527 );
    sensitive << ( reg_531 );
    sensitive << ( reg_535 );
    sensitive << ( reg_539 );
    sensitive << ( reg_543 );
    sensitive << ( reg_547 );
    sensitive << ( reg_551 );
    sensitive << ( reg_555 );
    sensitive << ( reg_559 );
    sensitive << ( reg_563 );
    sensitive << ( reg_567 );
    sensitive << ( reg_571 );
    sensitive << ( trunc_ln647_1_reg_912 );

    SC_METHOD(thread_p_Result_50_fu_782_p17);
    sensitive << ( reg_515 );
    sensitive << ( reg_519 );
    sensitive << ( reg_523 );
    sensitive << ( reg_527 );
    sensitive << ( reg_531 );
    sensitive << ( reg_535 );
    sensitive << ( reg_539 );
    sensitive << ( reg_543 );
    sensitive << ( reg_547 );
    sensitive << ( reg_551 );
    sensitive << ( reg_555 );
    sensitive << ( reg_559 );
    sensitive << ( reg_563 );
    sensitive << ( reg_567 );
    sensitive << ( reg_571 );
    sensitive << ( trunc_ln647_2_reg_902 );

    SC_METHOD(thread_p_Result_s_6_fu_854_p17);
    sensitive << ( reg_515 );
    sensitive << ( reg_519 );
    sensitive << ( reg_523 );
    sensitive << ( reg_527 );
    sensitive << ( reg_531 );
    sensitive << ( reg_535 );
    sensitive << ( reg_539 );
    sensitive << ( reg_543 );
    sensitive << ( reg_547 );
    sensitive << ( reg_551 );
    sensitive << ( reg_555 );
    sensitive << ( reg_559 );
    sensitive << ( reg_563 );
    sensitive << ( reg_567 );
    sensitive << ( reg_571 );
    sensitive << ( trunc_ln647_reg_917 );

    SC_METHOD(thread_p_Result_s_fu_739_p4);
    sensitive << ( data_in_V_data_V_0_data_out );

    SC_METHOD(thread_select_ln206_fu_631_p3);
    sensitive << ( icmp_ln879_5_fu_625_p2 );

    SC_METHOD(thread_select_ln74_fu_761_p3);
    sensitive << ( icmp_ln879_3_fu_755_p2 );

    SC_METHOD(thread_select_ln879_1_fu_659_p3);
    sensitive << ( icmp_ln879_1_fu_613_p2 );
    sensitive << ( select_ln879_fu_651_p3 );

    SC_METHOD(thread_select_ln879_2_fu_668_p3);
    sensitive << ( add_ln700_fu_607_p2 );
    sensitive << ( icmp_ln879_1_fu_613_p2 );

    SC_METHOD(thread_select_ln879_fu_651_p3);
    sensitive << ( and_ln879_fu_645_p2 );
    sensitive << ( select_ln206_fu_631_p3 );

    SC_METHOD(thread_tmp_last_V_fu_683_p2);
    sensitive << ( icmp_ln879_1_fu_613_p2 );
    sensitive << ( and_ln879_1_fu_677_p2 );

    SC_METHOD(thread_trunc_ln647_1_fu_689_p1);
    sensitive << ( data_in_V_data_V_0_data_out );

    SC_METHOD(thread_trunc_ln647_2_fu_603_p1);
    sensitive << ( data_in_V_data_V_0_data_out );

    SC_METHOD(thread_trunc_ln647_fu_693_p1);
    sensitive << ( data_in_V_data_V_0_data_out );

    SC_METHOD(thread_xor_ln879_fu_639_p2);
    sensitive << ( icmp_ln879_1_fu_613_p2 );

    SC_METHOD(thread_zext_ln209_fu_723_p1);
    sensitive << ( grp_fu_485_p4 );

    SC_METHOD(thread_ap_NS_iter0_fsm);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_NS_iter1_fsm);
    sensitive << ( data_in_V_data_V_0_vld_out );
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ecpri_msg_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_NS_iter2_fsm);
    sensitive << ( data_out_TREADY );
    sensitive << ( data_out_V_IQ_data_V_1_state );
    sensitive << ( data_out_V_last_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    data_in_V_data_V_0_sel_rd = SC_LOGIC_0;
    data_in_V_data_V_0_sel_wr = SC_LOGIC_0;
    data_in_V_data_V_0_state = "00";
    data_in_V_last_V_0_state = "00";
    data_out_V_IQ_data_V_1_sel_rd = SC_LOGIC_0;
    data_out_V_IQ_data_V_1_sel_wr = SC_LOGIC_0;
    data_out_V_IQ_data_V_1_state = "00";
    data_out_V_last_V_1_sel_rd = SC_LOGIC_0;
    data_out_V_last_V_1_sel_wr = SC_LOGIC_0;
    data_out_V_last_V_1_state = "00";
    ecpri_msg_state = "000";
    PRB_count_V = "000000000000";
    PRB_fragmentation_V = "00000000";
    symbolID_V = "000000";
    ap_CS_iter0_fsm = "0";
    ap_CS_iter1_fsm = "1";
    ap_CS_iter2_fsm = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "uplane_depacketiser_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, data_in_TDATA, "(port)data_in_TDATA");
    sc_trace(mVcdFile, data_in_TVALID, "(port)data_in_TVALID");
    sc_trace(mVcdFile, data_in_TREADY, "(port)data_in_TREADY");
    sc_trace(mVcdFile, data_in_TLAST, "(port)data_in_TLAST");
    sc_trace(mVcdFile, data_out_TDATA, "(port)data_out_TDATA");
    sc_trace(mVcdFile, data_out_TVALID, "(port)data_out_TVALID");
    sc_trace(mVcdFile, data_out_TREADY, "(port)data_out_TREADY");
    sc_trace(mVcdFile, data_out_TLAST, "(port)data_out_TLAST");
    sc_trace(mVcdFile, count_PRBs_V, "(port)count_PRBs_V");
    sc_trace(mVcdFile, PRB_count_each_section_V, "(port)PRB_count_each_section_V");
    sc_trace(mVcdFile, depack_symbol_number_V, "(port)depack_symbol_number_V");
    sc_trace(mVcdFile, iq_msg_state_out_V, "(port)iq_msg_state_out_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, data_in_V_data_V_0_data_out, "data_in_V_data_V_0_data_out");
    sc_trace(mVcdFile, data_in_V_data_V_0_vld_in, "data_in_V_data_V_0_vld_in");
    sc_trace(mVcdFile, data_in_V_data_V_0_vld_out, "data_in_V_data_V_0_vld_out");
    sc_trace(mVcdFile, data_in_V_data_V_0_ack_in, "data_in_V_data_V_0_ack_in");
    sc_trace(mVcdFile, data_in_V_data_V_0_ack_out, "data_in_V_data_V_0_ack_out");
    sc_trace(mVcdFile, data_in_V_data_V_0_payload_A, "data_in_V_data_V_0_payload_A");
    sc_trace(mVcdFile, data_in_V_data_V_0_payload_B, "data_in_V_data_V_0_payload_B");
    sc_trace(mVcdFile, data_in_V_data_V_0_sel_rd, "data_in_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, data_in_V_data_V_0_sel_wr, "data_in_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, data_in_V_data_V_0_sel, "data_in_V_data_V_0_sel");
    sc_trace(mVcdFile, data_in_V_data_V_0_load_A, "data_in_V_data_V_0_load_A");
    sc_trace(mVcdFile, data_in_V_data_V_0_load_B, "data_in_V_data_V_0_load_B");
    sc_trace(mVcdFile, data_in_V_data_V_0_state, "data_in_V_data_V_0_state");
    sc_trace(mVcdFile, data_in_V_data_V_0_state_cmp_full, "data_in_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, data_in_V_last_V_0_vld_in, "data_in_V_last_V_0_vld_in");
    sc_trace(mVcdFile, data_in_V_last_V_0_ack_out, "data_in_V_last_V_0_ack_out");
    sc_trace(mVcdFile, data_in_V_last_V_0_state, "data_in_V_last_V_0_state");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_data_in, "data_out_V_IQ_data_V_1_data_in");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_data_out, "data_out_V_IQ_data_V_1_data_out");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_vld_in, "data_out_V_IQ_data_V_1_vld_in");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_vld_out, "data_out_V_IQ_data_V_1_vld_out");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_ack_in, "data_out_V_IQ_data_V_1_ack_in");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_ack_out, "data_out_V_IQ_data_V_1_ack_out");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_payload_A, "data_out_V_IQ_data_V_1_payload_A");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_payload_B, "data_out_V_IQ_data_V_1_payload_B");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_sel_rd, "data_out_V_IQ_data_V_1_sel_rd");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_sel_wr, "data_out_V_IQ_data_V_1_sel_wr");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_sel, "data_out_V_IQ_data_V_1_sel");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_load_A, "data_out_V_IQ_data_V_1_load_A");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_load_B, "data_out_V_IQ_data_V_1_load_B");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_state, "data_out_V_IQ_data_V_1_state");
    sc_trace(mVcdFile, data_out_V_IQ_data_V_1_state_cmp_full, "data_out_V_IQ_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, data_out_V_last_V_1_data_in, "data_out_V_last_V_1_data_in");
    sc_trace(mVcdFile, data_out_V_last_V_1_data_out, "data_out_V_last_V_1_data_out");
    sc_trace(mVcdFile, data_out_V_last_V_1_vld_in, "data_out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, data_out_V_last_V_1_vld_out, "data_out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, data_out_V_last_V_1_ack_in, "data_out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, data_out_V_last_V_1_ack_out, "data_out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, data_out_V_last_V_1_payload_A, "data_out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, data_out_V_last_V_1_payload_B, "data_out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, data_out_V_last_V_1_sel_rd, "data_out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, data_out_V_last_V_1_sel_wr, "data_out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, data_out_V_last_V_1_sel, "data_out_V_last_V_1_sel");
    sc_trace(mVcdFile, data_out_V_last_V_1_load_A, "data_out_V_last_V_1_load_A");
    sc_trace(mVcdFile, data_out_V_last_V_1_load_B, "data_out_V_last_V_1_load_B");
    sc_trace(mVcdFile, data_out_V_last_V_1_state, "data_out_V_last_V_1_state");
    sc_trace(mVcdFile, data_out_V_last_V_1_state_cmp_full, "data_out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, ecpri_msg_state, "ecpri_msg_state");
    sc_trace(mVcdFile, PRB_count_V, "PRB_count_V");
    sc_trace(mVcdFile, PRB_fragmentation_V, "PRB_fragmentation_V");
    sc_trace(mVcdFile, symbolID_V, "symbolID_V");
    sc_trace(mVcdFile, data_in_TDATA_blk_n, "data_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_iter0_fsm, "ap_CS_iter0_fsm");
    sc_trace(mVcdFile, ap_CS_iter1_fsm, "ap_CS_iter1_fsm");
    sc_trace(mVcdFile, ap_CS_iter2_fsm, "ap_CS_iter2_fsm");
    sc_trace(mVcdFile, ecpri_msg_state_load_load_fu_575_p1, "ecpri_msg_state_load_load_fu_575_p1");
    sc_trace(mVcdFile, data_out_TDATA_blk_n, "data_out_TDATA_blk_n");
    sc_trace(mVcdFile, ecpri_msg_state_load_reg_894, "ecpri_msg_state_load_reg_894");
    sc_trace(mVcdFile, ecpri_msg_state_load_reg_894_pp0_iter1_reg, "ecpri_msg_state_load_reg_894_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, reg_515, "reg_515");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, reg_519, "reg_519");
    sc_trace(mVcdFile, reg_523, "reg_523");
    sc_trace(mVcdFile, reg_527, "reg_527");
    sc_trace(mVcdFile, reg_531, "reg_531");
    sc_trace(mVcdFile, reg_535, "reg_535");
    sc_trace(mVcdFile, reg_539, "reg_539");
    sc_trace(mVcdFile, reg_543, "reg_543");
    sc_trace(mVcdFile, reg_547, "reg_547");
    sc_trace(mVcdFile, reg_551, "reg_551");
    sc_trace(mVcdFile, reg_555, "reg_555");
    sc_trace(mVcdFile, reg_559, "reg_559");
    sc_trace(mVcdFile, grp_fu_485_p4, "grp_fu_485_p4");
    sc_trace(mVcdFile, reg_563, "reg_563");
    sc_trace(mVcdFile, reg_567, "reg_567");
    sc_trace(mVcdFile, grp_fu_505_p4, "grp_fu_505_p4");
    sc_trace(mVcdFile, reg_571, "reg_571");
    sc_trace(mVcdFile, trunc_ln647_2_fu_603_p1, "trunc_ln647_2_fu_603_p1");
    sc_trace(mVcdFile, trunc_ln647_2_reg_902, "trunc_ln647_2_reg_902");
    sc_trace(mVcdFile, tmp_last_V_fu_683_p2, "tmp_last_V_fu_683_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_907, "tmp_last_V_reg_907");
    sc_trace(mVcdFile, trunc_ln647_1_fu_689_p1, "trunc_ln647_1_fu_689_p1");
    sc_trace(mVcdFile, trunc_ln647_1_reg_912, "trunc_ln647_1_reg_912");
    sc_trace(mVcdFile, trunc_ln647_fu_693_p1, "trunc_ln647_fu_693_p1");
    sc_trace(mVcdFile, trunc_ln647_reg_917, "trunc_ln647_reg_917");
    sc_trace(mVcdFile, trunc_ln_reg_922, "trunc_ln_reg_922");
    sc_trace(mVcdFile, trunc_ln_reg_922_pp0_iter1_reg, "trunc_ln_reg_922_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln209_fu_727_p2, "add_ln209_fu_727_p2");
    sc_trace(mVcdFile, add_ln209_reg_927, "add_ln209_reg_927");
    sc_trace(mVcdFile, add_ln209_reg_927_pp0_iter1_reg, "add_ln209_reg_927_pp0_iter1_reg");
    sc_trace(mVcdFile, p_Result_50_fu_782_p17, "p_Result_50_fu_782_p17");
    sc_trace(mVcdFile, p_Result_49_fu_818_p17, "p_Result_49_fu_818_p17");
    sc_trace(mVcdFile, p_Result_s_6_fu_854_p17, "p_Result_s_6_fu_854_p17");
    sc_trace(mVcdFile, ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20, "ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_ecpri_msg_state_flag_1_reg_216, "ap_phi_reg_pp0_iter0_ecpri_msg_state_flag_1_reg_216");
    sc_trace(mVcdFile, icmp_ln879_fu_749_p2, "icmp_ln879_fu_749_p2");
    sc_trace(mVcdFile, icmp_ln879_2_fu_591_p2, "icmp_ln879_2_fu_591_p2");
    sc_trace(mVcdFile, ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20, "ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20");
    sc_trace(mVcdFile, select_ln879_1_fu_659_p3, "select_ln879_1_fu_659_p3");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_ecpri_msg_state_new_1_reg_252, "ap_phi_reg_pp0_iter0_ecpri_msg_state_new_1_reg_252");
    sc_trace(mVcdFile, select_ln74_fu_761_p3, "select_ln74_fu_761_p3");
    sc_trace(mVcdFile, ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20, "ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_PRB_fragmentation_V_s_reg_285, "ap_phi_reg_pp0_iter0_PRB_fragmentation_V_s_reg_285");
    sc_trace(mVcdFile, ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20, "ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20");
    sc_trace(mVcdFile, select_ln879_2_fu_668_p3, "select_ln879_2_fu_668_p3");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_PRB_fragmentation_V_1_reg_321, "ap_phi_reg_pp0_iter0_PRB_fragmentation_V_1_reg_321");
    sc_trace(mVcdFile, add_ln700_fu_607_p2, "add_ln700_fu_607_p2");
    sc_trace(mVcdFile, icmp_ln879_5_fu_625_p2, "icmp_ln879_5_fu_625_p2");
    sc_trace(mVcdFile, icmp_ln879_1_fu_613_p2, "icmp_ln879_1_fu_613_p2");
    sc_trace(mVcdFile, icmp_ln879_4_fu_619_p2, "icmp_ln879_4_fu_619_p2");
    sc_trace(mVcdFile, xor_ln879_fu_639_p2, "xor_ln879_fu_639_p2");
    sc_trace(mVcdFile, and_ln879_fu_645_p2, "and_ln879_fu_645_p2");
    sc_trace(mVcdFile, select_ln206_fu_631_p3, "select_ln206_fu_631_p3");
    sc_trace(mVcdFile, select_ln879_fu_651_p3, "select_ln879_fu_651_p3");
    sc_trace(mVcdFile, and_ln879_1_fu_677_p2, "and_ln879_1_fu_677_p2");
    sc_trace(mVcdFile, zext_ln209_fu_723_p1, "zext_ln209_fu_723_p1");
    sc_trace(mVcdFile, p_Result_s_fu_739_p4, "p_Result_s_fu_739_p4");
    sc_trace(mVcdFile, icmp_ln879_3_fu_755_p2, "icmp_ln879_3_fu_755_p2");
    sc_trace(mVcdFile, ap_NS_iter0_fsm, "ap_NS_iter0_fsm");
    sc_trace(mVcdFile, ap_NS_iter1_fsm, "ap_NS_iter1_fsm");
    sc_trace(mVcdFile, ap_NS_iter2_fsm, "ap_NS_iter2_fsm");
    sc_trace(mVcdFile, ap_condition_576, "ap_condition_576");
    sc_trace(mVcdFile, ap_condition_373, "ap_condition_373");
#endif

    }
    mHdltvinHandle.open("uplane_depacketiser.hdltvin.dat");
    mHdltvoutHandle.open("uplane_depacketiser.hdltvout.dat");
}

uplane_depacketiser::~uplane_depacketiser() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void uplane_depacketiser::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        PRB_count_V = ap_const_lv12_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
             esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
             !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
            PRB_count_V = add_ln209_fu_727_p2.read();
        } else if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                     !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
                     esl_seteq<1,3,3>(ap_const_lv3_0, ecpri_msg_state_load_load_fu_575_p1.read())) || 
                    (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                     !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
                     esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_6) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_2_fu_591_p2.read())))) {
            PRB_count_V = ap_const_lv12_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        PRB_fragmentation_V = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
             !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20.read()))) {
            PRB_fragmentation_V = ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter0_fsm = ap_ST_iter0_fsm_state1;
    } else {
        ap_CS_iter0_fsm = ap_NS_iter0_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter1_fsm = ap_ST_iter1_fsm_state0;
    } else {
        ap_CS_iter1_fsm = ap_NS_iter1_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter2_fsm = ap_ST_iter2_fsm_state0;
    } else {
        ap_CS_iter2_fsm = ap_NS_iter2_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_in_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_vld_out.read()))) {
            data_in_V_data_V_0_sel_rd =  (sc_logic) (~data_in_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_in_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_ack_in.read()))) {
            data_in_V_data_V_0_sel_wr =  (sc_logic) (~data_in_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_in_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(data_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(data_in_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            data_in_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data_in_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            data_in_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(data_in_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(data_in_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(data_in_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_ack_out.read()))))) {
            data_in_V_data_V_0_state = ap_const_lv2_3;
        } else {
            data_in_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_in_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_in_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_in_V_last_V_0_state.read())))) {
            data_in_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_in_V_last_V_0_state.read())))) {
            data_in_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_in_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_last_V_0_ack_out.read()))))) {
            data_in_V_last_V_0_state = ap_const_lv2_3;
        } else {
            data_in_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_IQ_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_vld_out.read()))) {
            data_out_V_IQ_data_V_1_sel_rd =  (sc_logic) (~data_out_V_IQ_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_IQ_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_ack_in.read()))) {
            data_out_V_IQ_data_V_1_sel_wr =  (sc_logic) (~data_out_V_IQ_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_IQ_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_IQ_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_IQ_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_IQ_data_V_1_state.read())))) {
            data_out_V_IQ_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read())))) {
            data_out_V_IQ_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_IQ_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_IQ_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_ack_out.read()))))) {
            data_out_V_IQ_data_V_1_state = ap_const_lv2_3;
        } else {
            data_out_V_IQ_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_out.read()))) {
            data_out_V_last_V_1_sel_rd =  (sc_logic) (~data_out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_in.read()))) {
            data_out_V_last_V_1_sel_wr =  (sc_logic) (~data_out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_last_V_1_state.read())))) {
            data_out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read())))) {
            data_out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_ack_out.read()))))) {
            data_out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            data_out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ecpri_msg_state = ap_const_lv3_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
             !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20.read()))) {
            ecpri_msg_state = ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        symbolID_V = ap_const_lv6_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_373.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2)) {
                symbolID_V = data_in_V_data_V_0_data_out.read().range(77, 72);
            } else if ((esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_6) && 
                        esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_2_fu_591_p2.read()))) {
                symbolID_V = ap_const_lv6_0;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        add_ln209_reg_927 = add_ln209_fu_727_p2.read();
        trunc_ln_reg_922 = data_in_V_data_V_0_data_out.read().range(75, 72);
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        add_ln209_reg_927_pp0_iter1_reg = add_ln209_reg_927.read();
        ecpri_msg_state_load_reg_894_pp0_iter1_reg = ecpri_msg_state_load_reg_894.read();
        trunc_ln_reg_922_pp0_iter1_reg = trunc_ln_reg_922.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_load_A.read())) {
        data_in_V_data_V_0_payload_A = data_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_load_B.read())) {
        data_in_V_data_V_0_payload_B = data_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_load_A.read())) {
        data_out_V_IQ_data_V_1_payload_A = data_out_V_IQ_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_load_B.read())) {
        data_out_V_IQ_data_V_1_payload_B = data_out_V_IQ_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_load_A.read())) {
        data_out_V_last_V_1_payload_A = data_out_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_load_B.read())) {
        data_out_V_last_V_1_payload_B = data_out_V_last_V_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        ecpri_msg_state_load_reg_894 = ecpri_msg_state.read();
    }
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
  esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
  esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
  esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))))) {
        reg_515 = data_in_V_data_V_0_data_out.read().range(15, 8);
        reg_519 = data_in_V_data_V_0_data_out.read().range(23, 16);
        reg_523 = data_in_V_data_V_0_data_out.read().range(31, 24);
        reg_527 = data_in_V_data_V_0_data_out.read().range(39, 32);
        reg_531 = data_in_V_data_V_0_data_out.read().range(47, 40);
        reg_535 = data_in_V_data_V_0_data_out.read().range(55, 48);
        reg_539 = data_in_V_data_V_0_data_out.read().range(63, 56);
        reg_543 = data_in_V_data_V_0_data_out.read().range(71, 64);
        reg_547 = data_in_V_data_V_0_data_out.read().range(79, 72);
        reg_551 = data_in_V_data_V_0_data_out.read().range(87, 80);
        reg_555 = data_in_V_data_V_0_data_out.read().range(95, 88);
        reg_559 = data_in_V_data_V_0_data_out.read().range(103, 96);
        reg_563 = data_in_V_data_V_0_data_out.read().range(111, 104);
        reg_567 = data_in_V_data_V_0_data_out.read().range(119, 112);
        reg_571 = data_in_V_data_V_0_data_out.read().range(127, 120);
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        tmp_last_V_reg_907 = tmp_last_V_fu_683_p2.read();
        trunc_ln647_2_reg_902 = trunc_ln647_2_fu_603_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        trunc_ln647_1_reg_912 = trunc_ln647_1_fu_689_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        trunc_ln647_reg_917 = trunc_ln647_fu_693_p1.read();
    }
}

void uplane_depacketiser::thread_PRB_count_each_section_V() {
    PRB_count_each_section_V = add_ln209_reg_927_pp0_iter1_reg.read();
}

void uplane_depacketiser::thread_add_ln209_fu_727_p2() {
    add_ln209_fu_727_p2 = (!PRB_count_V.read().is_01() || !zext_ln209_fu_723_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(PRB_count_V.read()) + sc_biguint<12>(zext_ln209_fu_723_p1.read()));
}

void uplane_depacketiser::thread_add_ln700_fu_607_p2() {
    add_ln700_fu_607_p2 = (!ap_const_lv8_1.is_01() || !PRB_fragmentation_V.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(PRB_fragmentation_V.read()));
}

void uplane_depacketiser::thread_and_ln879_1_fu_677_p2() {
    and_ln879_1_fu_677_p2 = (and_ln879_fu_645_p2.read() & icmp_ln879_5_fu_625_p2.read());
}

void uplane_depacketiser::thread_and_ln879_fu_645_p2() {
    and_ln879_fu_645_p2 = (icmp_ln879_4_fu_619_p2.read() & xor_ln879_fu_639_p2.read());
}

void uplane_depacketiser::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = ((esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())));
}

void uplane_depacketiser::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,3,3>(ap_const_lv3_5, ecpri_msg_state_load_reg_894.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_IQ_data_V_1_ack_in.read())) || (esl_seteq<1,3,3>(ap_const_lv3_4, ecpri_msg_state_load_reg_894.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_IQ_data_V_1_ack_in.read())) || (esl_seteq<1,3,3>(ap_const_lv3_3, ecpri_msg_state_load_reg_894.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_IQ_data_V_1_ack_in.read())));
}

void uplane_depacketiser::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void uplane_depacketiser::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,3,3>(ap_const_lv3_5, ecpri_msg_state_load_reg_894_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_IQ_data_V_1_ack_in.read())) || (esl_seteq<1,3,3>(ap_const_lv3_4, ecpri_msg_state_load_reg_894_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_IQ_data_V_1_ack_in.read())) || (esl_seteq<1,3,3>(ap_const_lv3_3, ecpri_msg_state_load_reg_894_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_out_V_IQ_data_V_1_ack_in.read())));
}

void uplane_depacketiser::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())));
}

void uplane_depacketiser::thread_ap_condition_373() {
    ap_condition_373 = (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))));
}

void uplane_depacketiser::thread_ap_condition_576() {
    ap_condition_576 = (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && !(esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())))));
}

void uplane_depacketiser::thread_ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_0, ecpri_msg_state_load_load_fu_575_p1.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_6) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_2_fu_591_p2.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_6) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_2_fu_591_p2.read())))) {
        ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5))) {
        ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20 = select_ln879_2_fu_668_p3.read();
    } else {
        ap_phi_mux_PRB_fragmentation_V_1_phi_fu_324_p20 = ap_phi_reg_pp0_iter0_PRB_fragmentation_V_1_reg_321.read();
    }
}

void uplane_depacketiser::thread_ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_0, ecpri_msg_state_load_load_fu_575_p1.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_6) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_2_fu_591_p2.read())))) {
        ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20 = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2)) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3)) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4)) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_7)) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_749_p2.read())) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_fu_749_p2.read())) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_6) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_2_fu_591_p2.read())))) {
        ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20 = ap_const_lv1_0;
    } else {
        ap_phi_mux_PRB_fragmentation_V_s_phi_fu_288_p20 = ap_phi_reg_pp0_iter0_PRB_fragmentation_V_s_reg_285.read();
    }
}

void uplane_depacketiser::thread_ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_0, ecpri_msg_state_load_load_fu_575_p1.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_749_p2.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_fu_749_p2.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_6) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_2_fu_591_p2.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_6) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_2_fu_591_p2.read())))) {
        ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_7))) {
        ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20 = ap_const_lv1_0;
    } else {
        ap_phi_mux_ecpri_msg_state_flag_1_phi_fu_219_p20 = ap_phi_reg_pp0_iter0_ecpri_msg_state_flag_1_reg_216.read();
    }
}

void uplane_depacketiser::thread_ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_6) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_2_fu_591_p2.read()))) {
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_749_p2.read()))) {
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = select_ln74_fu_761_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,3,3>(ap_const_lv3_0, ecpri_msg_state_load_load_fu_575_p1.read())) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_fu_749_p2.read())) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,3,3>(ecpri_msg_state_load_load_fu_575_p1.read(), ap_const_lv3_6) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_2_fu_591_p2.read())))) {
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = ap_const_lv3_1;
    } else if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2))) {
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = ap_const_lv3_3;
    } else if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3))) {
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = ap_const_lv3_4;
    } else if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4))) {
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = ap_const_lv3_5;
    } else if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5))) {
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = select_ln879_1_fu_659_p3.read();
    } else {
        ap_phi_mux_ecpri_msg_state_new_1_phi_fu_255_p20 = ap_phi_reg_pp0_iter0_ecpri_msg_state_new_1_reg_252.read();
    }
}

void uplane_depacketiser::thread_ap_phi_reg_pp0_iter0_PRB_fragmentation_V_1_reg_321() {
    ap_phi_reg_pp0_iter0_PRB_fragmentation_V_1_reg_321 =  (sc_lv<8>) ("XXXXXXXX");
}

void uplane_depacketiser::thread_ap_phi_reg_pp0_iter0_PRB_fragmentation_V_s_reg_285() {
    ap_phi_reg_pp0_iter0_PRB_fragmentation_V_s_reg_285 =  (sc_lv<1>) ("X");
}

void uplane_depacketiser::thread_ap_phi_reg_pp0_iter0_ecpri_msg_state_flag_1_reg_216() {
    ap_phi_reg_pp0_iter0_ecpri_msg_state_flag_1_reg_216 =  (sc_lv<1>) ("X");
}

void uplane_depacketiser::thread_ap_phi_reg_pp0_iter0_ecpri_msg_state_new_1_reg_252() {
    ap_phi_reg_pp0_iter0_ecpri_msg_state_new_1_reg_252 =  (sc_lv<3>) ("XXX");
}

void uplane_depacketiser::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void uplane_depacketiser::thread_data_in_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5)))) {
        data_in_TDATA_blk_n = data_in_V_data_V_0_state.read()[0];
    } else {
        data_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void uplane_depacketiser::thread_data_in_TREADY() {
    data_in_TREADY = data_in_V_last_V_0_state.read()[1];
}

void uplane_depacketiser::thread_data_in_V_data_V_0_ack_in() {
    data_in_V_data_V_0_ack_in = data_in_V_data_V_0_state.read()[1];
}

void uplane_depacketiser::thread_data_in_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
          !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
          !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
          !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
          !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
          !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))))) {
        data_in_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        data_in_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void uplane_depacketiser::thread_data_in_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_in_V_data_V_0_sel.read())) {
        data_in_V_data_V_0_data_out = data_in_V_data_V_0_payload_B.read();
    } else {
        data_in_V_data_V_0_data_out = data_in_V_data_V_0_payload_A.read();
    }
}

void uplane_depacketiser::thread_data_in_V_data_V_0_load_A() {
    data_in_V_data_V_0_load_A = (data_in_V_data_V_0_state_cmp_full.read() & ~data_in_V_data_V_0_sel_wr.read());
}

void uplane_depacketiser::thread_data_in_V_data_V_0_load_B() {
    data_in_V_data_V_0_load_B = (data_in_V_data_V_0_sel_wr.read() & data_in_V_data_V_0_state_cmp_full.read());
}

void uplane_depacketiser::thread_data_in_V_data_V_0_sel() {
    data_in_V_data_V_0_sel = data_in_V_data_V_0_sel_rd.read();
}

void uplane_depacketiser::thread_data_in_V_data_V_0_state_cmp_full() {
    data_in_V_data_V_0_state_cmp_full =  (sc_logic) ((!data_in_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_in_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void uplane_depacketiser::thread_data_in_V_data_V_0_vld_in() {
    data_in_V_data_V_0_vld_in = data_in_TVALID.read();
}

void uplane_depacketiser::thread_data_in_V_data_V_0_vld_out() {
    data_in_V_data_V_0_vld_out = data_in_V_data_V_0_state.read()[0];
}

void uplane_depacketiser::thread_data_in_V_last_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
          !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
          !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
          !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
          !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
          !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))))) {
        data_in_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        data_in_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void uplane_depacketiser::thread_data_in_V_last_V_0_vld_in() {
    data_in_V_last_V_0_vld_in = data_in_TVALID.read();
}

void uplane_depacketiser::thread_data_out_TDATA() {
    data_out_TDATA = data_out_V_IQ_data_V_1_data_out.read();
}

void uplane_depacketiser::thread_data_out_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_3, ecpri_msg_state_load_reg_894.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_3, ecpri_msg_state_load_reg_894_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_4, ecpri_msg_state_load_reg_894.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_4, ecpri_msg_state_load_reg_894_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_5, ecpri_msg_state_load_reg_894.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_5, ecpri_msg_state_load_reg_894_pp0_iter1_reg.read())))) {
        data_out_TDATA_blk_n = data_out_V_IQ_data_V_1_state.read()[1];
    } else {
        data_out_TDATA_blk_n = ap_const_logic_1;
    }
}

void uplane_depacketiser::thread_data_out_TLAST() {
    data_out_TLAST = data_out_V_last_V_1_data_out.read();
}

void uplane_depacketiser::thread_data_out_TVALID() {
    data_out_TVALID = data_out_V_last_V_1_state.read()[0];
}

void uplane_depacketiser::thread_data_out_V_IQ_data_V_1_ack_in() {
    data_out_V_IQ_data_V_1_ack_in = data_out_V_IQ_data_V_1_state.read()[1];
}

void uplane_depacketiser::thread_data_out_V_IQ_data_V_1_ack_out() {
    data_out_V_IQ_data_V_1_ack_out = data_out_TREADY.read();
}

void uplane_depacketiser::thread_data_out_V_IQ_data_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_576.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,3,3>(ap_const_lv3_3, ecpri_msg_state_load_reg_894.read())) {
            data_out_V_IQ_data_V_1_data_in = p_Result_s_6_fu_854_p17.read();
        } else if (esl_seteq<1,3,3>(ap_const_lv3_4, ecpri_msg_state_load_reg_894.read())) {
            data_out_V_IQ_data_V_1_data_in = p_Result_49_fu_818_p17.read();
        } else if (esl_seteq<1,3,3>(ap_const_lv3_5, ecpri_msg_state_load_reg_894.read())) {
            data_out_V_IQ_data_V_1_data_in = p_Result_50_fu_782_p17.read();
        } else {
            data_out_V_IQ_data_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        data_out_V_IQ_data_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void uplane_depacketiser::thread_data_out_V_IQ_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_IQ_data_V_1_sel.read())) {
        data_out_V_IQ_data_V_1_data_out = data_out_V_IQ_data_V_1_payload_B.read();
    } else {
        data_out_V_IQ_data_V_1_data_out = data_out_V_IQ_data_V_1_payload_A.read();
    }
}

void uplane_depacketiser::thread_data_out_V_IQ_data_V_1_load_A() {
    data_out_V_IQ_data_V_1_load_A = (data_out_V_IQ_data_V_1_state_cmp_full.read() & ~data_out_V_IQ_data_V_1_sel_wr.read());
}

void uplane_depacketiser::thread_data_out_V_IQ_data_V_1_load_B() {
    data_out_V_IQ_data_V_1_load_B = (data_out_V_IQ_data_V_1_sel_wr.read() & data_out_V_IQ_data_V_1_state_cmp_full.read());
}

void uplane_depacketiser::thread_data_out_V_IQ_data_V_1_sel() {
    data_out_V_IQ_data_V_1_sel = data_out_V_IQ_data_V_1_sel_rd.read();
}

void uplane_depacketiser::thread_data_out_V_IQ_data_V_1_state_cmp_full() {
    data_out_V_IQ_data_V_1_state_cmp_full =  (sc_logic) ((!data_out_V_IQ_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_out_V_IQ_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void uplane_depacketiser::thread_data_out_V_IQ_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_5, ecpri_msg_state_load_reg_894.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_4, ecpri_msg_state_load_reg_894.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_3, ecpri_msg_state_load_reg_894.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        data_out_V_IQ_data_V_1_vld_in = ap_const_logic_1;
    } else {
        data_out_V_IQ_data_V_1_vld_in = ap_const_logic_0;
    }
}

void uplane_depacketiser::thread_data_out_V_IQ_data_V_1_vld_out() {
    data_out_V_IQ_data_V_1_vld_out = data_out_V_IQ_data_V_1_state.read()[0];
}

void uplane_depacketiser::thread_data_out_V_last_V_1_ack_in() {
    data_out_V_last_V_1_ack_in = data_out_V_last_V_1_state.read()[1];
}

void uplane_depacketiser::thread_data_out_V_last_V_1_ack_out() {
    data_out_V_last_V_1_ack_out = data_out_TREADY.read();
}

void uplane_depacketiser::thread_data_out_V_last_V_1_data_in() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_4, ecpri_msg_state_load_reg_894.read()) && 
          !(esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_3, ecpri_msg_state_load_reg_894.read()) && 
          !(esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read()))))))) {
        data_out_V_last_V_1_data_in = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
                esl_seteq<1,3,3>(ap_const_lv3_5, ecpri_msg_state_load_reg_894.read()) && 
                !(esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())))))) {
        data_out_V_last_V_1_data_in = tmp_last_V_reg_907.read();
    } else {
        data_out_V_last_V_1_data_in =  (sc_lv<1>) ("X");
    }
}

void uplane_depacketiser::thread_data_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, data_out_V_last_V_1_sel.read())) {
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_B.read();
    } else {
        data_out_V_last_V_1_data_out = data_out_V_last_V_1_payload_A.read();
    }
}

void uplane_depacketiser::thread_data_out_V_last_V_1_load_A() {
    data_out_V_last_V_1_load_A = (data_out_V_last_V_1_state_cmp_full.read() & ~data_out_V_last_V_1_sel_wr.read());
}

void uplane_depacketiser::thread_data_out_V_last_V_1_load_B() {
    data_out_V_last_V_1_load_B = (data_out_V_last_V_1_sel_wr.read() & data_out_V_last_V_1_state_cmp_full.read());
}

void uplane_depacketiser::thread_data_out_V_last_V_1_sel() {
    data_out_V_last_V_1_sel = data_out_V_last_V_1_sel_rd.read();
}

void uplane_depacketiser::thread_data_out_V_last_V_1_state_cmp_full() {
    data_out_V_last_V_1_state_cmp_full =  (sc_logic) ((!data_out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(data_out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void uplane_depacketiser::thread_data_out_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_5, ecpri_msg_state_load_reg_894.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_4, ecpri_msg_state_load_reg_894.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,3,3>(ap_const_lv3_3, ecpri_msg_state_load_reg_894.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        data_out_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        data_out_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void uplane_depacketiser::thread_data_out_V_last_V_1_vld_out() {
    data_out_V_last_V_1_vld_out = data_out_V_last_V_1_state.read()[0];
}

void uplane_depacketiser::thread_depack_symbol_number_V() {
    depack_symbol_number_V = trunc_ln_reg_922_pp0_iter1_reg.read();
}

void uplane_depacketiser::thread_ecpri_msg_state_load_load_fu_575_p1() {
    ecpri_msg_state_load_load_fu_575_p1 = ecpri_msg_state.read();
}

void uplane_depacketiser::thread_grp_fu_485_p4() {
    grp_fu_485_p4 = data_in_V_data_V_0_data_out.read().range(111, 104);
}

void uplane_depacketiser::thread_grp_fu_505_p4() {
    grp_fu_505_p4 = data_in_V_data_V_0_data_out.read().range(127, 120);
}

void uplane_depacketiser::thread_icmp_ln879_1_fu_613_p2() {
    icmp_ln879_1_fu_613_p2 = (!add_ln700_fu_607_p2.read().is_01() || !ap_const_lv8_1E.is_01())? sc_lv<1>(): sc_lv<1>(add_ln700_fu_607_p2.read() == ap_const_lv8_1E);
}

void uplane_depacketiser::thread_icmp_ln879_2_fu_591_p2() {
    icmp_ln879_2_fu_591_p2 = (!symbolID_V.read().is_01() || !ap_const_lv6_D.is_01())? sc_lv<1>(): sc_lv<1>(symbolID_V.read() == ap_const_lv6_D);
}

void uplane_depacketiser::thread_icmp_ln879_3_fu_755_p2() {
    icmp_ln879_3_fu_755_p2 = (!grp_fu_505_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_505_p4.read() == ap_const_lv8_0);
}

void uplane_depacketiser::thread_icmp_ln879_4_fu_619_p2() {
    icmp_ln879_4_fu_619_p2 = (!PRB_count_V.read().is_01() || !ap_const_lv12_111.is_01())? sc_lv<1>(): sc_lv<1>(PRB_count_V.read() == ap_const_lv12_111);
}

void uplane_depacketiser::thread_icmp_ln879_5_fu_625_p2() {
    icmp_ln879_5_fu_625_p2 = (!add_ln700_fu_607_p2.read().is_01() || !ap_const_lv8_3.is_01())? sc_lv<1>(): sc_lv<1>(add_ln700_fu_607_p2.read() == ap_const_lv8_3);
}

void uplane_depacketiser::thread_icmp_ln879_fu_749_p2() {
    icmp_ln879_fu_749_p2 = (!p_Result_s_fu_739_p4.read().is_01() || !ap_const_lv16_FEAE.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_739_p4.read() == ap_const_lv16_FEAE);
}

void uplane_depacketiser::thread_iq_msg_state_out_V() {
    iq_msg_state_out_V = esl_zext<8,3>(ecpri_msg_state_load_reg_894_pp0_iter1_reg.read());
}

void uplane_depacketiser::thread_p_Result_49_fu_818_p17() {
    p_Result_49_fu_818_p17 = esl_concat<120,8>(esl_concat<112,8>(esl_concat<104,8>(esl_concat<96,8>(esl_concat<88,8>(esl_concat<80,8>(esl_concat<72,8>(esl_concat<64,8>(esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(trunc_ln647_1_reg_912.read(), reg_515.read()), reg_519.read()), reg_523.read()), reg_527.read()), reg_531.read()), reg_535.read()), reg_539.read()), reg_543.read()), reg_547.read()), reg_551.read()), reg_555.read()), reg_559.read()), reg_563.read()), reg_567.read()), reg_571.read());
}

void uplane_depacketiser::thread_p_Result_50_fu_782_p17() {
    p_Result_50_fu_782_p17 = esl_concat<120,8>(esl_concat<112,8>(esl_concat<104,8>(esl_concat<96,8>(esl_concat<88,8>(esl_concat<80,8>(esl_concat<72,8>(esl_concat<64,8>(esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(trunc_ln647_2_reg_902.read(), reg_515.read()), reg_519.read()), reg_523.read()), reg_527.read()), reg_531.read()), reg_535.read()), reg_539.read()), reg_543.read()), reg_547.read()), reg_551.read()), reg_555.read()), reg_559.read()), reg_563.read()), reg_567.read()), reg_571.read());
}

void uplane_depacketiser::thread_p_Result_s_6_fu_854_p17() {
    p_Result_s_6_fu_854_p17 = esl_concat<120,8>(esl_concat<112,8>(esl_concat<104,8>(esl_concat<96,8>(esl_concat<88,8>(esl_concat<80,8>(esl_concat<72,8>(esl_concat<64,8>(esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(trunc_ln647_reg_917.read(), reg_515.read()), reg_519.read()), reg_523.read()), reg_527.read()), reg_531.read()), reg_535.read()), reg_539.read()), reg_543.read()), reg_547.read()), reg_551.read()), reg_555.read()), reg_559.read()), reg_563.read()), reg_567.read()), reg_571.read());
}

void uplane_depacketiser::thread_p_Result_s_fu_739_p4() {
    p_Result_s_fu_739_p4 = data_in_V_data_V_0_data_out.read().range(111, 96);
}

void uplane_depacketiser::thread_select_ln206_fu_631_p3() {
    select_ln206_fu_631_p3 = (!icmp_ln879_5_fu_625_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln879_5_fu_625_p2.read()[0].to_bool())? ap_const_lv3_6: ap_const_lv3_3);
}

void uplane_depacketiser::thread_select_ln74_fu_761_p3() {
    select_ln74_fu_761_p3 = (!icmp_ln879_3_fu_755_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln879_3_fu_755_p2.read()[0].to_bool())? ap_const_lv3_2: ap_const_lv3_1);
}

void uplane_depacketiser::thread_select_ln879_1_fu_659_p3() {
    select_ln879_1_fu_659_p3 = (!icmp_ln879_1_fu_613_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln879_1_fu_613_p2.read()[0].to_bool())? ap_const_lv3_1: select_ln879_fu_651_p3.read());
}

void uplane_depacketiser::thread_select_ln879_2_fu_668_p3() {
    select_ln879_2_fu_668_p3 = (!icmp_ln879_1_fu_613_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln879_1_fu_613_p2.read()[0].to_bool())? ap_const_lv8_0: add_ln700_fu_607_p2.read());
}

void uplane_depacketiser::thread_select_ln879_fu_651_p3() {
    select_ln879_fu_651_p3 = (!and_ln879_fu_645_p2.read()[0].is_01())? sc_lv<3>(): ((and_ln879_fu_645_p2.read()[0].to_bool())? select_ln206_fu_631_p3.read(): ap_const_lv3_3);
}

void uplane_depacketiser::thread_tmp_last_V_fu_683_p2() {
    tmp_last_V_fu_683_p2 = (icmp_ln879_1_fu_613_p2.read() | and_ln879_1_fu_677_p2.read());
}

void uplane_depacketiser::thread_trunc_ln647_1_fu_689_p1() {
    trunc_ln647_1_fu_689_p1 = data_in_V_data_V_0_data_out.read().range(8-1, 0);
}

void uplane_depacketiser::thread_trunc_ln647_2_fu_603_p1() {
    trunc_ln647_2_fu_603_p1 = data_in_V_data_V_0_data_out.read().range(8-1, 0);
}

void uplane_depacketiser::thread_trunc_ln647_fu_693_p1() {
    trunc_ln647_fu_693_p1 = data_in_V_data_V_0_data_out.read().range(8-1, 0);
}

void uplane_depacketiser::thread_xor_ln879_fu_639_p2() {
    xor_ln879_fu_639_p2 = (icmp_ln879_1_fu_613_p2.read() ^ ap_const_lv1_1);
}

void uplane_depacketiser::thread_zext_ln209_fu_723_p1() {
    zext_ln209_fu_723_p1 = esl_zext<12,8>(grp_fu_485_p4.read());
}

void uplane_depacketiser::thread_ap_NS_iter0_fsm() {
    switch (ap_CS_iter0_fsm.read().to_uint64()) {
        case 0 : 
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
break;
        default : 
            ap_NS_iter0_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void uplane_depacketiser::thread_ap_NS_iter1_fsm() {
    switch (ap_CS_iter1_fsm.read().to_uint64()) {
        case 0 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && !((esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read()))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && (!esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) || 
  (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
   ((esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
     esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || 
    (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
     esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || 
    (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
     esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || 
    (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
     esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || 
    (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
     esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read()))))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,3,3>(ecpri_msg_state.read(), ap_const_lv3_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, data_in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter1_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void uplane_depacketiser::thread_ap_NS_iter2_fsm() {
    switch (ap_CS_iter2_fsm.read().to_uint64()) {
        case 0 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0) && !(esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else if ((((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || 
  !esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read())) && !(esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_IQ_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, data_out_V_last_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_IQ_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, data_out_V_last_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter2_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void uplane_depacketiser::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_TDATA\" :  \"" << data_in_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_TVALID\" :  \"" << data_in_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"data_in_TREADY\" :  \"" << data_in_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_TLAST\" :  \"" << data_in_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_TDATA\" :  \"" << data_out_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_TVALID\" :  \"" << data_out_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_out_TREADY\" :  \"" << data_out_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_TLAST\" :  \"" << data_out_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"count_PRBs_V\" :  \"" << count_PRBs_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"PRB_count_each_section_V\" :  \"" << PRB_count_each_section_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"depack_symbol_number_V\" :  \"" << depack_symbol_number_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"iq_msg_state_out_V\" :  \"" << iq_msg_state_out_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

