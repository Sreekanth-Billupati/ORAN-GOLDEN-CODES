

================================================================
== Vivado HLS Report for 'Userplane_L1_Data_Gen'
================================================================
* Date:           Tue Mar 21 13:07:12 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        12_Dummy_L1_to_UPLANE
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     3.281|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 1
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.28>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%data_src_state_load = load i2* @data_src_state, align 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:31]   --->   Operation 4 'load' 'data_src_state_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%t_V = load i6* @sym_count_V, align 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:43]   --->   Operation 5 'load' 't_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%slot_in_V_read = call i6 @_ssdm_op_Read.ap_none.i6P(i6* %slot_in_V)" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:42]   --->   Operation 6 'read' 'slot_in_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.72ns)   --->   "switch i2 %data_src_state_load, label %._crit_edge580 [
    i2 0, label %0
    i2 1, label %1
    i2 -2, label %4
  ]" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:33]   --->   Operation 7 'switch' <Predicate = true> <Delay = 0.72>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%trunc_ln = call i4 @_ssdm_op_PartSelect.i4.i6.i32.i32(i6 %slot_in_V_read, i32 1, i32 4)" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:91]   --->   Operation 8 'partselect' 'trunc_ln' <Predicate = (data_src_state_load == 2)> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "store i4 %trunc_ln, i4* @subframeID_val_V, align 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:91]   --->   Operation 9 'store' <Predicate = (data_src_state_load == 2)> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.67ns)   --->   "store i2 0, i2* @data_src_state, align 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:92]   --->   Operation 10 'store' <Predicate = (data_src_state_load == 2)> <Delay = 0.67>
ST_1 : Operation 11 [1/1] (0.67ns)   --->   "br label %._crit_edge580" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:93]   --->   Operation 11 'br' <Predicate = (data_src_state_load == 2)> <Delay = 0.67>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%sec_count_V = load i4* @section_count_V, align 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:54]   --->   Operation 12 'load' 'sec_count_V' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.72ns)   --->   "%icmp_ln879 = icmp eq i4 %sec_count_V, -7" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:66]   --->   Operation 13 'icmp' 'icmp_ln879' <Predicate = (data_src_state_load == 1)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879, label %2, label %3" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:66]   --->   Operation 14 'br' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.79ns)   --->   "%add_ln700_1 = add i4 %sec_count_V, 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:81]   --->   Operation 15 'add' 'add_ln700_1' <Predicate = (data_src_state_load == 1 & !icmp_ln879)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.65ns)   --->   "store i4 %add_ln700_1, i4* @section_count_V, align 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:81]   --->   Operation 16 'store' <Predicate = (data_src_state_load == 1 & !icmp_ln879)> <Delay = 0.65>
ST_1 : Operation 17 [1/1] (0.65ns)   --->   "br label %._crit_edge581"   --->   Operation 17 'br' <Predicate = (data_src_state_load == 1 & !icmp_ln879)> <Delay = 0.65>
ST_1 : Operation 18 [1/1] (0.65ns)   --->   "store i4 0, i4* @section_count_V, align 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:68]   --->   Operation 18 'store' <Predicate = (data_src_state_load == 1 & icmp_ln879)> <Delay = 0.65>
ST_1 : Operation 19 [1/1] (0.78ns)   --->   "%add_ln700 = add i6 %t_V, 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:69]   --->   Operation 19 'add' 'add_ln700' <Predicate = (data_src_state_load == 1 & icmp_ln879)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.78ns)   --->   "%icmp_ln879_1 = icmp eq i6 %add_ln700, 14" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70]   --->   Operation 20 'icmp' 'icmp_ln879_1' <Predicate = (data_src_state_load == 1 & icmp_ln879)> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.38ns)   --->   "%select_ln70 = select i1 %icmp_ln879_1, i6 0, i6 %add_ln700" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70]   --->   Operation 21 'select' 'select_ln70' <Predicate = (data_src_state_load == 1 & icmp_ln879)> <Delay = 0.38> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.17ns)   --->   "%select_ln70_1 = select i1 %icmp_ln879_1, i2 -2, i2 0" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70]   --->   Operation 22 'select' 'select_ln70_1' <Predicate = (data_src_state_load == 1 & icmp_ln879)> <Delay = 0.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.65ns)   --->   "br label %._crit_edge581" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70]   --->   Operation 23 'br' <Predicate = (data_src_state_load == 1 & icmp_ln879)> <Delay = 0.65>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%sym_count_V_flag_0 = phi i1 [ false, %3 ], [ true, %2 ]"   --->   Operation 24 'phi' 'sym_count_V_flag_0' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%sym_count_V_new_0 = phi i6 [ undef, %3 ], [ %select_ln70, %2 ]" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70]   --->   Operation 25 'phi' 'sym_count_V_new_0' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%storemerge576 = phi i2 [ 0, %3 ], [ %select_ln70_1, %2 ]" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70]   --->   Operation 26 'phi' 'storemerge576' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.67ns)   --->   "store i2 %storemerge576, i2* @data_src_state, align 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:82]   --->   Operation 27 'store' <Predicate = (data_src_state_load == 1)> <Delay = 0.67>
ST_1 : Operation 28 [1/1] (0.67ns)   --->   "br label %._crit_edge580" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:87]   --->   Operation 28 'br' <Predicate = (data_src_state_load == 1)> <Delay = 0.67>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%frameID_in_V_read = call i8 @_ssdm_op_Read.ap_none.i8P(i8* %frameID_in_V)" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:40]   --->   Operation 29 'read' 'frameID_in_V_read' <Predicate = (data_src_state_load == 0)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.67ns)   --->   "store i2 1, i2* @data_src_state, align 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:48]   --->   Operation 30 'store' <Predicate = (data_src_state_load == 0)> <Delay = 0.67>
ST_1 : Operation 31 [1/1] (0.67ns)   --->   "br label %._crit_edge580" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:50]   --->   Operation 31 'br' <Predicate = (data_src_state_load == 0)> <Delay = 0.67>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%sym_count_V_flag_1 = phi i1 [ false, %codeRepl ], [ true, %4 ], [ %sym_count_V_flag_0, %._crit_edge581 ], [ false, %0 ]"   --->   Operation 32 'phi' 'sym_count_V_flag_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%sym_count_V_new_1 = phi i6 [ undef, %codeRepl ], [ 0, %4 ], [ %sym_count_V_new_0, %._crit_edge581 ], [ undef, %0 ]" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70]   --->   Operation 33 'phi' 'sym_count_V_new_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %sym_count_V_flag_1, label %mergeST, label %._crit_edge580.new"   --->   Operation 34 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "store i6 %sym_count_V_new_1, i6* @sym_count_V, align 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:69]   --->   Operation 35 'store' <Predicate = (sym_count_V_flag_1)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.15>
ST_2 : Operation 36 [1/1] (0.72ns)   --->   "%icmp_ln31 = icmp eq i4 %sec_count_V, 0" [aesl_mux_load.10[5 x i15]P.i4.i64:31->12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 36 'icmp' 'icmp_ln31' <Predicate = (data_src_state_load == 1)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.72ns)   --->   "%icmp_ln31_1 = icmp eq i4 %sec_count_V, 1" [aesl_mux_load.10[5 x i15]P.i4.i64:31->12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 37 'icmp' 'icmp_ln31_1' <Predicate = (data_src_state_load == 1)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.72ns)   --->   "%icmp_ln31_2 = icmp eq i4 %sec_count_V, 2" [aesl_mux_load.10[5 x i15]P.i4.i64:31->12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 38 'icmp' 'icmp_ln31_2' <Predicate = (data_src_state_load == 1)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.72ns)   --->   "%icmp_ln31_3 = icmp eq i4 %sec_count_V, 3" [aesl_mux_load.10[5 x i15]P.i4.i64:31->12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 39 'icmp' 'icmp_ln31_3' <Predicate = (data_src_state_load == 1)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.72ns)   --->   "%icmp_ln31_4 = icmp eq i4 %sec_count_V, 4" [aesl_mux_load.10[5 x i15]P.i4.i64:31->12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 40 'icmp' 'icmp_ln31_4' <Predicate = (data_src_state_load == 1)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.72ns)   --->   "%icmp_ln31_5 = icmp eq i4 %sec_count_V, 5" [aesl_mux_load.10[5 x i15]P.i4.i64:31->12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 41 'icmp' 'icmp_ln31_5' <Predicate = (data_src_state_load == 1)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.72ns)   --->   "%icmp_ln31_6 = icmp eq i4 %sec_count_V, 6" [aesl_mux_load.10[5 x i15]P.i4.i64:31->12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 42 'icmp' 'icmp_ln31_6' <Predicate = (data_src_state_load == 1)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.72ns)   --->   "%icmp_ln31_7 = icmp eq i4 %sec_count_V, 7" [aesl_mux_load.10[5 x i15]P.i4.i64:31->12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 43 'icmp' 'icmp_ln31_7' <Predicate = (data_src_state_load == 1)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.72ns)   --->   "%icmp_ln31_8 = icmp eq i4 %sec_count_V, -8" [aesl_mux_load.10[5 x i15]P.i4.i64:31->12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 44 'icmp' 'icmp_ln31_8' <Predicate = (data_src_state_load == 1)> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_7)   --->   "%select_ln215 = select i1 %icmp_ln31_8, i4 -7, i4 -8" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 45 'select' 'select_ln215' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.28ns)   --->   "%or_ln215 = or i1 %icmp_ln31_8, %icmp_ln31_7" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 46 'or' 'or_ln215' <Predicate = (data_src_state_load == 1)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_7)   --->   "%select_ln215_1 = select i1 %icmp_ln31_6, i4 7, i4 6" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 47 'select' 'select_ln215_1' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node or_ln215_4)   --->   "%or_ln215_1 = or i1 %icmp_ln31_6, %icmp_ln31_5" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 48 'or' 'or_ln215_1' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_6)   --->   "%select_ln215_2 = select i1 %icmp_ln31_4, i3 -3, i3 -4" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 49 'select' 'select_ln215_2' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.28ns)   --->   "%or_ln215_2 = or i1 %icmp_ln31_4, %icmp_ln31_3" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 50 'or' 'or_ln215_2' <Predicate = (data_src_state_load == 1)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_6)   --->   "%select_ln215_3 = select i1 %icmp_ln31_2, i3 3, i3 2" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 51 'select' 'select_ln215_3' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node or_ln215_6)   --->   "%or_ln215_3 = or i1 %icmp_ln31_2, %icmp_ln31_1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 52 'or' 'or_ln215_3' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_8)   --->   "%select_ln215_4 = select i1 %icmp_ln31, i4 1, i4 -6" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 53 'select' 'select_ln215_4' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_7)   --->   "%select_ln215_5 = select i1 %or_ln215, i4 %select_ln215, i4 %select_ln215_1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 54 'select' 'select_ln215_5' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln215_4 = or i1 %or_ln215, %or_ln215_1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 55 'or' 'or_ln215_4' <Predicate = (data_src_state_load == 1)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.20ns) (out node of the LUT)   --->   "%select_ln215_6 = select i1 %or_ln215_2, i3 %select_ln215_2, i3 %select_ln215_3" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 56 'select' 'select_ln215_6' <Predicate = (data_src_state_load == 1)> <Delay = 0.20> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_7)   --->   "%zext_ln215 = zext i3 %select_ln215_6 to i4" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 57 'zext' 'zext_ln215' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node or_ln215_6)   --->   "%or_ln215_5 = or i1 %or_ln215_2, %or_ln215_3" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 58 'or' 'or_ln215_5' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.39ns) (out node of the LUT)   --->   "%select_ln215_7 = select i1 %or_ln215_4, i4 %select_ln215_5, i4 %zext_ln215" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 59 'select' 'select_ln215_7' <Predicate = (data_src_state_load == 1)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln215_6 = or i1 %or_ln215_4, %or_ln215_5" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 60 'or' 'or_ln215_6' <Predicate = (data_src_state_load == 1)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.39ns) (out node of the LUT)   --->   "%select_ln215_8 = select i1 %or_ln215_6, i4 %select_ln215_7, i4 %select_ln215_4" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 61 'select' 'select_ln215_8' <Predicate = (data_src_state_load == 1)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln215_1 = zext i4 %select_ln215_8 to i12" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57]   --->   Operation 62 'zext' 'zext_ln215_1' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_16)   --->   "%select_ln215_9 = select i1 %icmp_ln31_8, i8 -16, i8 -46" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 63 'select' 'select_ln215_9' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_16)   --->   "%select_ln215_10 = select i1 %icmp_ln31_6, i8 -76, i8 -106" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 64 'select' 'select_ln215_10' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_15)   --->   "%select_ln215_11 = select i1 %icmp_ln31_4, i7 -8, i7 -38" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 65 'select' 'select_ln215_11' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_15)   --->   "%select_ln215_12 = select i1 %icmp_ln31_2, i7 60, i7 30" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 66 'select' 'select_ln215_12' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_17)   --->   "%select_ln215_13 = select i1 %icmp_ln31, i9 0, i9 -242" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 67 'select' 'select_ln215_13' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_16)   --->   "%select_ln215_14 = select i1 %or_ln215, i8 %select_ln215_9, i8 %select_ln215_10" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 68 'select' 'select_ln215_14' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln215_15 = select i1 %or_ln215_2, i7 %select_ln215_11, i7 %select_ln215_12" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 69 'select' 'select_ln215_15' <Predicate = (data_src_state_load == 1)> <Delay = 0.36> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_16)   --->   "%zext_ln215_2 = zext i7 %select_ln215_15 to i8" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 70 'zext' 'zext_ln215_2' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.39ns) (out node of the LUT)   --->   "%select_ln215_16 = select i1 %or_ln215_4, i8 %select_ln215_14, i8 %zext_ln215_2" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 71 'select' 'select_ln215_16' <Predicate = (data_src_state_load == 1)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_17)   --->   "%zext_ln215_3 = zext i8 %select_ln215_16 to i9" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 72 'zext' 'zext_ln215_3' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.39ns) (out node of the LUT)   --->   "%select_ln215_17 = select i1 %or_ln215_6, i9 %zext_ln215_3, i9 %select_ln215_13" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 73 'select' 'select_ln215_17' <Predicate = (data_src_state_load == 1)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln215_4 = zext i9 %select_ln215_17 to i10" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60]   --->   Operation 74 'zext' 'zext_ln215_4' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node select_ln215_18)   --->   "%or_ln215_7 = or i1 %or_ln215_6, %icmp_ln31" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:61]   --->   Operation 75 'or' 'or_ln215_7' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.38ns) (out node of the LUT)   --->   "%select_ln215_18 = select i1 %or_ln215_7, i8 30, i8 3" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:61]   --->   Operation 76 'select' 'select_ln215_18' <Predicate = (data_src_state_load == 1)> <Delay = 0.38> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_1 = call i64 @_ssdm_op_BitConcatenate.i64.i12.i12.i2.i10.i8.i20(i12 69, i12 %zext_ln215_1, i2 0, i10 %zext_ln215_4, i8 %select_ln215_18, i20 0)" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:86]   --->   Operation 77 'bitconcatenate' 'tmp_1' <Predicate = (data_src_state_load == 1)> <Delay = 0.00>
ST_2 : Operation 78 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp_1)" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:86]   --->   Operation 78 'write' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%subframeID_val_V_loa = load i4* @subframeID_val_V, align 1" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:41]   --->   Operation 79 'load' 'subframeID_val_V_loa' <Predicate = (data_src_state_load == 0)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%tmp = call i64 @_ssdm_op_BitConcatenate.i64.i20.i8.i4.i6.i6.i20(i20 17552, i8 %frameID_in_V_read, i4 %subframeID_val_V_loa, i6 %slot_in_V_read, i6 %t_V, i20 0)" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:47]   --->   Operation 80 'bitconcatenate' 'tmp' <Predicate = (data_src_state_load == 0)> <Delay = 0.00>
ST_2 : Operation 81 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp)" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:47]   --->   Operation 81 'write' <Predicate = (data_src_state_load == 0)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %L1_data_out_V), !map !82"   --->   Operation 82 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i6* %slot_in_V), !map !89"   --->   Operation 83 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %frameID_in_V), !map !93"   --->   Operation 84 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %st_out_V), !map !97"   --->   Operation 85 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i6* %symbol_number_V), !map !101"   --->   Operation 86 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([22 x i8]* @Userplane_L1_Data_Ge) nounwind"   --->   Operation 87 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 2, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:5]   --->   Operation 88 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %L1_data_out_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:7]   --->   Operation 89 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:8]   --->   Operation 90 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i6* %slot_in_V, [8 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:9]   --->   Operation 91 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %frameID_in_V, [8 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:10]   --->   Operation 92 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i6* %symbol_number_V, [8 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:11]   --->   Operation 93 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i4* %st_out_V, [8 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:12]   --->   Operation 94 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i2* @data_src_state, i32 1, [1 x i8]* @p_str) nounwind" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:17]   --->   Operation 95 'specreset' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln301 = zext i2 %data_src_state_load to i4" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:31]   --->   Operation 96 'zext' 'zext_ln301' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i4P(i4* %st_out_V, i4 %zext_ln301)" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:31]   --->   Operation 97 'write' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp_1)" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:86]   --->   Operation 98 'write' <Predicate = (data_src_state_load == 1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i6P(i6* %symbol_number_V, i6 %t_V)" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:46]   --->   Operation 99 'write' <Predicate = (data_src_state_load == 0)> <Delay = 0.00>
ST_3 : Operation 100 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %L1_data_out_V, i64 %tmp)" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:47]   --->   Operation 100 'write' <Predicate = (data_src_state_load == 0)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "br label %._crit_edge580.new"   --->   Operation 101 'br' <Predicate = (sym_count_V_flag_1)> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "ret void" [12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:95]   --->   Operation 102 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.28ns
The critical path consists of the following:
	'load' operation ('t.V', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:43) on static variable 'sym_count_V' [27]  (0 ns)
	'add' operation ('add_ln700', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:69) [86]  (0.781 ns)
	'icmp' operation ('icmp_ln879_1', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70) [87]  (0.785 ns)
	'select' operation ('select_ln70', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70) [88]  (0.384 ns)
	multiplexor before 'phi' operation ('sym_count_V_new_0', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70) with incoming values : ('select_ln70', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70) [93]  (0.656 ns)
	'phi' operation ('sym_count_V_new_0', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70) with incoming values : ('select_ln70', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70) [93]  (0 ns)
	multiplexor before 'phi' operation ('sym_count_V_new_1', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70) with incoming values : ('select_ln70', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70) [109]  (0.675 ns)
	'phi' operation ('sym_count_V_new_1', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70) with incoming values : ('select_ln70', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70) [109]  (0 ns)
	'store' operation ('store_ln69', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:69) of variable 'sym_count_V_new_1', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:70 on static variable 'sym_count_V' [112]  (0 ns)

 <State 2>: 2.16ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln31_3', aesl_mux_load.10[5 x i15]P.i4.i64:31->12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57) [40]  (0.721 ns)
	'or' operation ('or_ln215_2', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:57) [51]  (0.287 ns)
	'select' operation ('select_ln215_15', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60) [70]  (0.36 ns)
	'select' operation ('select_ln215_16', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60) [72]  (0.393 ns)
	'select' operation ('select_ln215_17', 12_Dummy_L1_to_UPLANE/UP_L1_datagen.cpp:60) [74]  (0.398 ns)

 <State 3>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
