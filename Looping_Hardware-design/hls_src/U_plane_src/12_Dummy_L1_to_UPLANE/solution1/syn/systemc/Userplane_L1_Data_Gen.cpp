// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Userplane_L1_Data_Gen.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Userplane_L1_Data_Gen::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Userplane_L1_Data_Gen::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> Userplane_L1_Data_Gen::ap_ST_iter0_fsm_state1 = "0";
const sc_lv<1> Userplane_L1_Data_Gen::ap_ST_iter1_fsm_state2 = "0";
const sc_lv<1> Userplane_L1_Data_Gen::ap_ST_iter2_fsm_state3 = "0";
const sc_lv<1> Userplane_L1_Data_Gen::ap_ST_iter1_fsm_state0 = "1";
const sc_lv<1> Userplane_L1_Data_Gen::ap_ST_iter2_fsm_state0 = "1";
const bool Userplane_L1_Data_Gen::ap_const_boolean_1 = true;
const sc_lv<1> Userplane_L1_Data_Gen::ap_const_lv1_0 = "0";
const sc_lv<1> Userplane_L1_Data_Gen::ap_const_lv1_1 = "1";
const sc_lv<2> Userplane_L1_Data_Gen::ap_const_lv2_0 = "00";
const sc_lv<2> Userplane_L1_Data_Gen::ap_const_lv2_2 = "10";
const sc_lv<2> Userplane_L1_Data_Gen::ap_const_lv2_3 = "11";
const sc_lv<2> Userplane_L1_Data_Gen::ap_const_lv2_1 = "1";
const sc_lv<6> Userplane_L1_Data_Gen::ap_const_lv6_0 = "000000";
const sc_lv<4> Userplane_L1_Data_Gen::ap_const_lv4_0 = "0000";
const sc_lv<32> Userplane_L1_Data_Gen::ap_const_lv32_1 = "1";
const sc_lv<32> Userplane_L1_Data_Gen::ap_const_lv32_4 = "100";
const sc_lv<4> Userplane_L1_Data_Gen::ap_const_lv4_9 = "1001";
const sc_lv<4> Userplane_L1_Data_Gen::ap_const_lv4_1 = "1";
const sc_lv<6> Userplane_L1_Data_Gen::ap_const_lv6_1 = "1";
const sc_lv<6> Userplane_L1_Data_Gen::ap_const_lv6_E = "1110";
const sc_lv<4> Userplane_L1_Data_Gen::ap_const_lv4_2 = "10";
const sc_lv<4> Userplane_L1_Data_Gen::ap_const_lv4_3 = "11";
const sc_lv<4> Userplane_L1_Data_Gen::ap_const_lv4_4 = "100";
const sc_lv<4> Userplane_L1_Data_Gen::ap_const_lv4_5 = "101";
const sc_lv<4> Userplane_L1_Data_Gen::ap_const_lv4_6 = "110";
const sc_lv<4> Userplane_L1_Data_Gen::ap_const_lv4_7 = "111";
const sc_lv<4> Userplane_L1_Data_Gen::ap_const_lv4_8 = "1000";
const sc_lv<3> Userplane_L1_Data_Gen::ap_const_lv3_5 = "101";
const sc_lv<3> Userplane_L1_Data_Gen::ap_const_lv3_4 = "100";
const sc_lv<3> Userplane_L1_Data_Gen::ap_const_lv3_3 = "11";
const sc_lv<3> Userplane_L1_Data_Gen::ap_const_lv3_2 = "10";
const sc_lv<4> Userplane_L1_Data_Gen::ap_const_lv4_A = "1010";
const sc_lv<8> Userplane_L1_Data_Gen::ap_const_lv8_F0 = "11110000";
const sc_lv<8> Userplane_L1_Data_Gen::ap_const_lv8_D2 = "11010010";
const sc_lv<8> Userplane_L1_Data_Gen::ap_const_lv8_B4 = "10110100";
const sc_lv<8> Userplane_L1_Data_Gen::ap_const_lv8_96 = "10010110";
const sc_lv<7> Userplane_L1_Data_Gen::ap_const_lv7_78 = "1111000";
const sc_lv<7> Userplane_L1_Data_Gen::ap_const_lv7_5A = "1011010";
const sc_lv<7> Userplane_L1_Data_Gen::ap_const_lv7_3C = "111100";
const sc_lv<7> Userplane_L1_Data_Gen::ap_const_lv7_1E = "11110";
const sc_lv<9> Userplane_L1_Data_Gen::ap_const_lv9_0 = "000000000";
const sc_lv<9> Userplane_L1_Data_Gen::ap_const_lv9_10E = "100001110";
const sc_lv<8> Userplane_L1_Data_Gen::ap_const_lv8_1E = "11110";
const sc_lv<8> Userplane_L1_Data_Gen::ap_const_lv8_3 = "11";
const sc_lv<12> Userplane_L1_Data_Gen::ap_const_lv12_45 = "1000101";
const sc_lv<20> Userplane_L1_Data_Gen::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<20> Userplane_L1_Data_Gen::ap_const_lv20_4490 = "100010010010000";
const bool Userplane_L1_Data_Gen::ap_const_boolean_0 = false;

Userplane_L1_Data_Gen::Userplane_L1_Data_Gen(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_L1_data_out_V_1_ack_in);
    sensitive << ( L1_data_out_V_1_state );

    SC_METHOD(thread_L1_data_out_V_1_ack_out);
    sensitive << ( L1_data_out_V_TREADY );

    SC_METHOD(thread_L1_data_out_V_1_data_in);
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( tmp_1_fu_612_p7 );
    sensitive << ( tmp_fu_633_p7 );
    sensitive << ( ap_condition_227 );

    SC_METHOD(thread_L1_data_out_V_1_data_out);
    sensitive << ( L1_data_out_V_1_payload_A );
    sensitive << ( L1_data_out_V_1_payload_B );
    sensitive << ( L1_data_out_V_1_sel );

    SC_METHOD(thread_L1_data_out_V_1_load_A);
    sensitive << ( L1_data_out_V_1_sel_wr );
    sensitive << ( L1_data_out_V_1_state_cmp_full );

    SC_METHOD(thread_L1_data_out_V_1_load_B);
    sensitive << ( L1_data_out_V_1_sel_wr );
    sensitive << ( L1_data_out_V_1_state_cmp_full );

    SC_METHOD(thread_L1_data_out_V_1_sel);
    sensitive << ( L1_data_out_V_1_sel_rd );

    SC_METHOD(thread_L1_data_out_V_1_state_cmp_full);
    sensitive << ( L1_data_out_V_1_state );

    SC_METHOD(thread_L1_data_out_V_1_vld_in);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_L1_data_out_V_1_vld_out);
    sensitive << ( L1_data_out_V_1_state );

    SC_METHOD(thread_L1_data_out_V_TDATA);
    sensitive << ( L1_data_out_V_1_data_out );

    SC_METHOD(thread_L1_data_out_V_TDATA_blk_n);
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( data_src_state_load_reg_651_pp0_iter1_reg );

    SC_METHOD(thread_L1_data_out_V_TVALID);
    sensitive << ( L1_data_out_V_1_state );

    SC_METHOD(thread_add_ln700_1_fu_281_p2);
    sensitive << ( section_count_V );

    SC_METHOD(thread_add_ln700_fu_299_p2);
    sensitive << ( sym_count_V );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( L1_data_out_V_1_ack_in );
    sensitive << ( data_src_state_load_reg_651 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( L1_data_out_V_1_ack_in );
    sensitive << ( data_src_state_load_reg_651_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );

    SC_METHOD(thread_ap_condition_152);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_condition_166);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( data_src_state_load_load_fu_241_p1 );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_condition_227);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );

    SC_METHOD(thread_ap_phi_mux_storemerge576_phi_fu_199_p4);
    sensitive << ( data_src_state_load_load_fu_241_p1 );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( icmp_ln879_fu_275_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_storemerge576_reg_196 );
    sensitive << ( select_ln70_1_fu_320_p3 );

    SC_METHOD(thread_ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4);
    sensitive << ( data_src_state_load_load_fu_241_p1 );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175 );
    sensitive << ( icmp_ln879_fu_275_p2 );

    SC_METHOD(thread_ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8);
    sensitive << ( data_src_state_load_load_fu_241_p1 );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4 );
    sensitive << ( ap_phi_reg_pp0_iter0_sym_count_V_flag_1_reg_206 );

    SC_METHOD(thread_ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4);
    sensitive << ( data_src_state_load_load_fu_241_p1 );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( icmp_ln879_fu_275_p2 );
    sensitive << ( select_ln70_fu_311_p3 );
    sensitive << ( ap_phi_reg_pp0_iter0_sym_count_V_new_0_reg_186 );

    SC_METHOD(thread_ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8);
    sensitive << ( data_src_state_load_load_fu_241_p1 );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4 );
    sensitive << ( ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_storemerge576_reg_196);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_sym_count_V_flag_1_reg_206);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_sym_count_V_new_0_reg_186);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_data_src_state_load_load_fu_241_p1);
    sensitive << ( data_src_state );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_icmp_ln31_1_fu_352_p2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( sec_count_V_reg_667 );

    SC_METHOD(thread_icmp_ln31_2_fu_357_p2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( sec_count_V_reg_667 );

    SC_METHOD(thread_icmp_ln31_3_fu_362_p2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( sec_count_V_reg_667 );

    SC_METHOD(thread_icmp_ln31_4_fu_367_p2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( sec_count_V_reg_667 );

    SC_METHOD(thread_icmp_ln31_5_fu_372_p2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( sec_count_V_reg_667 );

    SC_METHOD(thread_icmp_ln31_6_fu_377_p2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( sec_count_V_reg_667 );

    SC_METHOD(thread_icmp_ln31_7_fu_382_p2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( sec_count_V_reg_667 );

    SC_METHOD(thread_icmp_ln31_8_fu_387_p2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( sec_count_V_reg_667 );

    SC_METHOD(thread_icmp_ln31_fu_347_p2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( sec_count_V_reg_667 );

    SC_METHOD(thread_icmp_ln879_1_fu_305_p2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( data_src_state_load_load_fu_241_p1 );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( icmp_ln879_fu_275_p2 );
    sensitive << ( add_ln700_fu_299_p2 );

    SC_METHOD(thread_icmp_ln879_fu_275_p2);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( section_count_V );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( data_src_state_load_load_fu_241_p1 );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_or_ln215_1_fu_414_p2);
    sensitive << ( icmp_ln31_6_fu_377_p2 );
    sensitive << ( icmp_ln31_5_fu_372_p2 );

    SC_METHOD(thread_or_ln215_2_fu_428_p2);
    sensitive << ( icmp_ln31_4_fu_367_p2 );
    sensitive << ( icmp_ln31_3_fu_362_p2 );

    SC_METHOD(thread_or_ln215_3_fu_442_p2);
    sensitive << ( icmp_ln31_2_fu_357_p2 );
    sensitive << ( icmp_ln31_1_fu_352_p2 );

    SC_METHOD(thread_or_ln215_4_fu_464_p2);
    sensitive << ( or_ln215_fu_400_p2 );
    sensitive << ( or_ln215_1_fu_414_p2 );

    SC_METHOD(thread_or_ln215_5_fu_482_p2);
    sensitive << ( or_ln215_2_fu_428_p2 );
    sensitive << ( or_ln215_3_fu_442_p2 );

    SC_METHOD(thread_or_ln215_6_fu_496_p2);
    sensitive << ( or_ln215_4_fu_464_p2 );
    sensitive << ( or_ln215_5_fu_482_p2 );

    SC_METHOD(thread_or_ln215_7_fu_598_p2);
    sensitive << ( icmp_ln31_fu_347_p2 );
    sensitive << ( or_ln215_6_fu_496_p2 );

    SC_METHOD(thread_or_ln215_fu_400_p2);
    sensitive << ( icmp_ln31_8_fu_387_p2 );
    sensitive << ( icmp_ln31_7_fu_382_p2 );

    SC_METHOD(thread_select_ln215_10_fu_522_p3);
    sensitive << ( icmp_ln31_6_fu_377_p2 );

    SC_METHOD(thread_select_ln215_11_fu_530_p3);
    sensitive << ( icmp_ln31_4_fu_367_p2 );

    SC_METHOD(thread_select_ln215_12_fu_538_p3);
    sensitive << ( icmp_ln31_2_fu_357_p2 );

    SC_METHOD(thread_select_ln215_13_fu_546_p3);
    sensitive << ( icmp_ln31_fu_347_p2 );

    SC_METHOD(thread_select_ln215_14_fu_554_p3);
    sensitive << ( or_ln215_fu_400_p2 );
    sensitive << ( select_ln215_9_fu_514_p3 );
    sensitive << ( select_ln215_10_fu_522_p3 );

    SC_METHOD(thread_select_ln215_15_fu_562_p3);
    sensitive << ( or_ln215_2_fu_428_p2 );
    sensitive << ( select_ln215_11_fu_530_p3 );
    sensitive << ( select_ln215_12_fu_538_p3 );

    SC_METHOD(thread_select_ln215_16_fu_574_p3);
    sensitive << ( or_ln215_4_fu_464_p2 );
    sensitive << ( select_ln215_14_fu_554_p3 );
    sensitive << ( zext_ln215_2_fu_570_p1 );

    SC_METHOD(thread_select_ln215_17_fu_586_p3);
    sensitive << ( or_ln215_6_fu_496_p2 );
    sensitive << ( zext_ln215_3_fu_582_p1 );
    sensitive << ( select_ln215_13_fu_546_p3 );

    SC_METHOD(thread_select_ln215_18_fu_604_p3);
    sensitive << ( or_ln215_7_fu_598_p2 );

    SC_METHOD(thread_select_ln215_1_fu_406_p3);
    sensitive << ( icmp_ln31_6_fu_377_p2 );

    SC_METHOD(thread_select_ln215_2_fu_420_p3);
    sensitive << ( icmp_ln31_4_fu_367_p2 );

    SC_METHOD(thread_select_ln215_3_fu_434_p3);
    sensitive << ( icmp_ln31_2_fu_357_p2 );

    SC_METHOD(thread_select_ln215_4_fu_448_p3);
    sensitive << ( icmp_ln31_fu_347_p2 );

    SC_METHOD(thread_select_ln215_5_fu_456_p3);
    sensitive << ( or_ln215_fu_400_p2 );
    sensitive << ( select_ln215_fu_392_p3 );
    sensitive << ( select_ln215_1_fu_406_p3 );

    SC_METHOD(thread_select_ln215_6_fu_470_p3);
    sensitive << ( or_ln215_2_fu_428_p2 );
    sensitive << ( select_ln215_2_fu_420_p3 );
    sensitive << ( select_ln215_3_fu_434_p3 );

    SC_METHOD(thread_select_ln215_7_fu_488_p3);
    sensitive << ( or_ln215_4_fu_464_p2 );
    sensitive << ( select_ln215_5_fu_456_p3 );
    sensitive << ( zext_ln215_fu_478_p1 );

    SC_METHOD(thread_select_ln215_8_fu_502_p3);
    sensitive << ( or_ln215_6_fu_496_p2 );
    sensitive << ( select_ln215_7_fu_488_p3 );
    sensitive << ( select_ln215_4_fu_448_p3 );

    SC_METHOD(thread_select_ln215_9_fu_514_p3);
    sensitive << ( icmp_ln31_8_fu_387_p2 );

    SC_METHOD(thread_select_ln215_fu_392_p3);
    sensitive << ( icmp_ln31_8_fu_387_p2 );

    SC_METHOD(thread_select_ln70_1_fu_320_p3);
    sensitive << ( icmp_ln879_1_fu_305_p2 );

    SC_METHOD(thread_select_ln70_fu_311_p3);
    sensitive << ( add_ln700_fu_299_p2 );
    sensitive << ( icmp_ln879_1_fu_305_p2 );

    SC_METHOD(thread_st_out_V);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651_pp0_iter1_reg );

    SC_METHOD(thread_symbol_number_V);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( data_src_state_load_reg_651_pp0_iter1_reg );
    sensitive << ( t_V_reg_656_pp0_iter1_reg );

    SC_METHOD(thread_tmp_1_fu_612_p7);
    sensitive << ( zext_ln215_1_fu_510_p1 );
    sensitive << ( zext_ln215_4_fu_594_p1 );
    sensitive << ( select_ln215_18_fu_604_p3 );

    SC_METHOD(thread_tmp_fu_633_p7);
    sensitive << ( subframeID_val_V );
    sensitive << ( t_V_reg_656 );
    sensitive << ( slot_in_V_read_reg_662 );
    sensitive << ( frameID_in_V_read_reg_683 );

    SC_METHOD(thread_zext_ln215_1_fu_510_p1);
    sensitive << ( select_ln215_8_fu_502_p3 );

    SC_METHOD(thread_zext_ln215_2_fu_570_p1);
    sensitive << ( select_ln215_15_fu_562_p3 );

    SC_METHOD(thread_zext_ln215_3_fu_582_p1);
    sensitive << ( select_ln215_16_fu_574_p3 );

    SC_METHOD(thread_zext_ln215_4_fu_594_p1);
    sensitive << ( select_ln215_17_fu_586_p3 );

    SC_METHOD(thread_zext_ln215_fu_478_p1);
    sensitive << ( select_ln215_6_fu_470_p3 );

    SC_METHOD(thread_ap_NS_iter0_fsm);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_NS_iter1_fsm);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_NS_iter2_fsm);
    sensitive << ( L1_data_out_V_TREADY );
    sensitive << ( L1_data_out_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    L1_data_out_V_1_sel_rd = SC_LOGIC_0;
    L1_data_out_V_1_sel_wr = SC_LOGIC_0;
    L1_data_out_V_1_state = "00";
    data_src_state = "00";
    sym_count_V = "000000";
    subframeID_val_V = "0000";
    section_count_V = "0000";
    ap_CS_iter1_fsm = "1";
    ap_CS_iter2_fsm = "1";
    ap_CS_iter0_fsm = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Userplane_L1_Data_Gen_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, L1_data_out_V_TDATA, "(port)L1_data_out_V_TDATA");
    sc_trace(mVcdFile, L1_data_out_V_TVALID, "(port)L1_data_out_V_TVALID");
    sc_trace(mVcdFile, L1_data_out_V_TREADY, "(port)L1_data_out_V_TREADY");
    sc_trace(mVcdFile, slot_in_V, "(port)slot_in_V");
    sc_trace(mVcdFile, frameID_in_V, "(port)frameID_in_V");
    sc_trace(mVcdFile, st_out_V, "(port)st_out_V");
    sc_trace(mVcdFile, symbol_number_V, "(port)symbol_number_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, L1_data_out_V_1_data_in, "L1_data_out_V_1_data_in");
    sc_trace(mVcdFile, L1_data_out_V_1_data_out, "L1_data_out_V_1_data_out");
    sc_trace(mVcdFile, L1_data_out_V_1_vld_in, "L1_data_out_V_1_vld_in");
    sc_trace(mVcdFile, L1_data_out_V_1_vld_out, "L1_data_out_V_1_vld_out");
    sc_trace(mVcdFile, L1_data_out_V_1_ack_in, "L1_data_out_V_1_ack_in");
    sc_trace(mVcdFile, L1_data_out_V_1_ack_out, "L1_data_out_V_1_ack_out");
    sc_trace(mVcdFile, L1_data_out_V_1_payload_A, "L1_data_out_V_1_payload_A");
    sc_trace(mVcdFile, L1_data_out_V_1_payload_B, "L1_data_out_V_1_payload_B");
    sc_trace(mVcdFile, L1_data_out_V_1_sel_rd, "L1_data_out_V_1_sel_rd");
    sc_trace(mVcdFile, L1_data_out_V_1_sel_wr, "L1_data_out_V_1_sel_wr");
    sc_trace(mVcdFile, L1_data_out_V_1_sel, "L1_data_out_V_1_sel");
    sc_trace(mVcdFile, L1_data_out_V_1_load_A, "L1_data_out_V_1_load_A");
    sc_trace(mVcdFile, L1_data_out_V_1_load_B, "L1_data_out_V_1_load_B");
    sc_trace(mVcdFile, L1_data_out_V_1_state, "L1_data_out_V_1_state");
    sc_trace(mVcdFile, L1_data_out_V_1_state_cmp_full, "L1_data_out_V_1_state_cmp_full");
    sc_trace(mVcdFile, data_src_state, "data_src_state");
    sc_trace(mVcdFile, sym_count_V, "sym_count_V");
    sc_trace(mVcdFile, subframeID_val_V, "subframeID_val_V");
    sc_trace(mVcdFile, section_count_V, "section_count_V");
    sc_trace(mVcdFile, L1_data_out_V_TDATA_blk_n, "L1_data_out_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_iter1_fsm, "ap_CS_iter1_fsm");
    sc_trace(mVcdFile, ap_CS_iter2_fsm, "ap_CS_iter2_fsm");
    sc_trace(mVcdFile, data_src_state_load_reg_651, "data_src_state_load_reg_651");
    sc_trace(mVcdFile, data_src_state_load_reg_651_pp0_iter1_reg, "data_src_state_load_reg_651_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, data_src_state_load_load_fu_241_p1, "data_src_state_load_load_fu_241_p1");
    sc_trace(mVcdFile, ap_CS_iter0_fsm, "ap_CS_iter0_fsm");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, t_V_reg_656, "t_V_reg_656");
    sc_trace(mVcdFile, t_V_reg_656_pp0_iter1_reg, "t_V_reg_656_pp0_iter1_reg");
    sc_trace(mVcdFile, slot_in_V_read_reg_662, "slot_in_V_read_reg_662");
    sc_trace(mVcdFile, sec_count_V_reg_667, "sec_count_V_reg_667");
    sc_trace(mVcdFile, frameID_in_V_read_reg_683, "frameID_in_V_read_reg_683");
    sc_trace(mVcdFile, tmp_1_fu_612_p7, "tmp_1_fu_612_p7");
    sc_trace(mVcdFile, tmp_fu_633_p7, "tmp_fu_633_p7");
    sc_trace(mVcdFile, ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4, "ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175, "ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175");
    sc_trace(mVcdFile, icmp_ln879_fu_275_p2, "icmp_ln879_fu_275_p2");
    sc_trace(mVcdFile, ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4, "ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4");
    sc_trace(mVcdFile, select_ln70_fu_311_p3, "select_ln70_fu_311_p3");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_sym_count_V_new_0_reg_186, "ap_phi_reg_pp0_iter0_sym_count_V_new_0_reg_186");
    sc_trace(mVcdFile, ap_phi_mux_storemerge576_phi_fu_199_p4, "ap_phi_mux_storemerge576_phi_fu_199_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_storemerge576_reg_196, "ap_phi_reg_pp0_iter0_storemerge576_reg_196");
    sc_trace(mVcdFile, select_ln70_1_fu_320_p3, "select_ln70_1_fu_320_p3");
    sc_trace(mVcdFile, ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8, "ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_sym_count_V_flag_1_reg_206, "ap_phi_reg_pp0_iter0_sym_count_V_flag_1_reg_206");
    sc_trace(mVcdFile, ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8, "ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224, "ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224");
    sc_trace(mVcdFile, add_ln700_1_fu_281_p2, "add_ln700_1_fu_281_p2");
    sc_trace(mVcdFile, add_ln700_fu_299_p2, "add_ln700_fu_299_p2");
    sc_trace(mVcdFile, icmp_ln879_1_fu_305_p2, "icmp_ln879_1_fu_305_p2");
    sc_trace(mVcdFile, icmp_ln31_8_fu_387_p2, "icmp_ln31_8_fu_387_p2");
    sc_trace(mVcdFile, icmp_ln31_7_fu_382_p2, "icmp_ln31_7_fu_382_p2");
    sc_trace(mVcdFile, icmp_ln31_6_fu_377_p2, "icmp_ln31_6_fu_377_p2");
    sc_trace(mVcdFile, icmp_ln31_5_fu_372_p2, "icmp_ln31_5_fu_372_p2");
    sc_trace(mVcdFile, icmp_ln31_4_fu_367_p2, "icmp_ln31_4_fu_367_p2");
    sc_trace(mVcdFile, icmp_ln31_3_fu_362_p2, "icmp_ln31_3_fu_362_p2");
    sc_trace(mVcdFile, icmp_ln31_2_fu_357_p2, "icmp_ln31_2_fu_357_p2");
    sc_trace(mVcdFile, icmp_ln31_1_fu_352_p2, "icmp_ln31_1_fu_352_p2");
    sc_trace(mVcdFile, icmp_ln31_fu_347_p2, "icmp_ln31_fu_347_p2");
    sc_trace(mVcdFile, or_ln215_fu_400_p2, "or_ln215_fu_400_p2");
    sc_trace(mVcdFile, select_ln215_fu_392_p3, "select_ln215_fu_392_p3");
    sc_trace(mVcdFile, select_ln215_1_fu_406_p3, "select_ln215_1_fu_406_p3");
    sc_trace(mVcdFile, or_ln215_1_fu_414_p2, "or_ln215_1_fu_414_p2");
    sc_trace(mVcdFile, or_ln215_2_fu_428_p2, "or_ln215_2_fu_428_p2");
    sc_trace(mVcdFile, select_ln215_2_fu_420_p3, "select_ln215_2_fu_420_p3");
    sc_trace(mVcdFile, select_ln215_3_fu_434_p3, "select_ln215_3_fu_434_p3");
    sc_trace(mVcdFile, select_ln215_6_fu_470_p3, "select_ln215_6_fu_470_p3");
    sc_trace(mVcdFile, or_ln215_3_fu_442_p2, "or_ln215_3_fu_442_p2");
    sc_trace(mVcdFile, or_ln215_4_fu_464_p2, "or_ln215_4_fu_464_p2");
    sc_trace(mVcdFile, select_ln215_5_fu_456_p3, "select_ln215_5_fu_456_p3");
    sc_trace(mVcdFile, zext_ln215_fu_478_p1, "zext_ln215_fu_478_p1");
    sc_trace(mVcdFile, or_ln215_5_fu_482_p2, "or_ln215_5_fu_482_p2");
    sc_trace(mVcdFile, or_ln215_6_fu_496_p2, "or_ln215_6_fu_496_p2");
    sc_trace(mVcdFile, select_ln215_7_fu_488_p3, "select_ln215_7_fu_488_p3");
    sc_trace(mVcdFile, select_ln215_4_fu_448_p3, "select_ln215_4_fu_448_p3");
    sc_trace(mVcdFile, select_ln215_8_fu_502_p3, "select_ln215_8_fu_502_p3");
    sc_trace(mVcdFile, select_ln215_9_fu_514_p3, "select_ln215_9_fu_514_p3");
    sc_trace(mVcdFile, select_ln215_10_fu_522_p3, "select_ln215_10_fu_522_p3");
    sc_trace(mVcdFile, select_ln215_11_fu_530_p3, "select_ln215_11_fu_530_p3");
    sc_trace(mVcdFile, select_ln215_12_fu_538_p3, "select_ln215_12_fu_538_p3");
    sc_trace(mVcdFile, select_ln215_15_fu_562_p3, "select_ln215_15_fu_562_p3");
    sc_trace(mVcdFile, select_ln215_14_fu_554_p3, "select_ln215_14_fu_554_p3");
    sc_trace(mVcdFile, zext_ln215_2_fu_570_p1, "zext_ln215_2_fu_570_p1");
    sc_trace(mVcdFile, select_ln215_16_fu_574_p3, "select_ln215_16_fu_574_p3");
    sc_trace(mVcdFile, zext_ln215_3_fu_582_p1, "zext_ln215_3_fu_582_p1");
    sc_trace(mVcdFile, select_ln215_13_fu_546_p3, "select_ln215_13_fu_546_p3");
    sc_trace(mVcdFile, select_ln215_17_fu_586_p3, "select_ln215_17_fu_586_p3");
    sc_trace(mVcdFile, or_ln215_7_fu_598_p2, "or_ln215_7_fu_598_p2");
    sc_trace(mVcdFile, zext_ln215_1_fu_510_p1, "zext_ln215_1_fu_510_p1");
    sc_trace(mVcdFile, zext_ln215_4_fu_594_p1, "zext_ln215_4_fu_594_p1");
    sc_trace(mVcdFile, select_ln215_18_fu_604_p3, "select_ln215_18_fu_604_p3");
    sc_trace(mVcdFile, ap_NS_iter0_fsm, "ap_NS_iter0_fsm");
    sc_trace(mVcdFile, ap_NS_iter1_fsm, "ap_NS_iter1_fsm");
    sc_trace(mVcdFile, ap_NS_iter2_fsm, "ap_NS_iter2_fsm");
    sc_trace(mVcdFile, ap_condition_227, "ap_condition_227");
    sc_trace(mVcdFile, ap_condition_152, "ap_condition_152");
    sc_trace(mVcdFile, ap_condition_166, "ap_condition_166");
#endif

    }
    mHdltvinHandle.open("Userplane_L1_Data_Gen.hdltvin.dat");
    mHdltvoutHandle.open("Userplane_L1_Data_Gen.hdltvout.dat");
}

Userplane_L1_Data_Gen::~Userplane_L1_Data_Gen() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void Userplane_L1_Data_Gen::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        L1_data_out_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_vld_out.read()))) {
            L1_data_out_V_1_sel_rd =  (sc_logic) (~L1_data_out_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        L1_data_out_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_ack_in.read()))) {
            L1_data_out_V_1_sel_wr =  (sc_logic) (~L1_data_out_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        L1_data_out_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_2)))) {
            L1_data_out_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1)))) {
            L1_data_out_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_ack_out.read()))))) {
            L1_data_out_V_1_state = ap_const_lv2_3;
        } else {
            L1_data_out_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter0_fsm = ap_ST_iter0_fsm_state1;
    } else {
        ap_CS_iter0_fsm = ap_NS_iter0_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter1_fsm = ap_ST_iter1_fsm_state0;
    } else {
        ap_CS_iter1_fsm = ap_NS_iter1_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter2_fsm = ap_ST_iter2_fsm_state0;
    } else {
        ap_CS_iter2_fsm = ap_NS_iter2_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        data_src_state = ap_const_lv2_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_152.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state_load_load_fu_241_p1.read())) {
                data_src_state = ap_const_lv2_1;
            } else if (esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_load_fu_241_p1.read())) {
                data_src_state = ap_phi_mux_storemerge576_phi_fu_199_p4.read();
            } else if (esl_seteq<1,2,2>(ap_const_lv2_2, data_src_state_load_load_fu_241_p1.read())) {
                data_src_state = ap_const_lv2_0;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        section_count_V = ap_const_lv4_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_166.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_275_p2.read())) {
                section_count_V = ap_const_lv4_0;
            } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_fu_275_p2.read())) {
                section_count_V = add_ln700_1_fu_281_p2.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        subframeID_val_V = ap_const_lv4_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
             !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
             esl_seteq<1,2,2>(ap_const_lv2_2, data_src_state_load_load_fu_241_p1.read()))) {
            subframeID_val_V = slot_in_V.read().range(4, 1);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sym_count_V = ap_const_lv6_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
             !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8.read()))) {
            sym_count_V = ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_load_A.read())) {
        L1_data_out_V_1_payload_A = L1_data_out_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_load_B.read())) {
        L1_data_out_V_1_payload_B = L1_data_out_V_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        data_src_state_load_reg_651 = data_src_state.read();
        slot_in_V_read_reg_662 = slot_in_V.read();
        t_V_reg_656 = sym_count_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        data_src_state_load_reg_651_pp0_iter1_reg = data_src_state_load_reg_651.read();
        t_V_reg_656_pp0_iter1_reg = t_V_reg_656.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state_load_load_fu_241_p1.read()))) {
        frameID_in_V_read_reg_683 = frameID_in_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_load_fu_241_p1.read()))) {
        sec_count_V_reg_667 = section_count_V.read();
    }
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_1_ack_in() {
    L1_data_out_V_1_ack_in = L1_data_out_V_1_state.read()[1];
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_1_ack_out() {
    L1_data_out_V_1_ack_out = L1_data_out_V_TREADY.read();
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_227.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state_load_reg_651.read())) {
            L1_data_out_V_1_data_in = tmp_fu_633_p7.read();
        } else if (esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_reg_651.read())) {
            L1_data_out_V_1_data_in = tmp_1_fu_612_p7.read();
        } else {
            L1_data_out_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        L1_data_out_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, L1_data_out_V_1_sel.read())) {
        L1_data_out_V_1_data_out = L1_data_out_V_1_payload_B.read();
    } else {
        L1_data_out_V_1_data_out = L1_data_out_V_1_payload_A.read();
    }
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_1_load_A() {
    L1_data_out_V_1_load_A = (L1_data_out_V_1_state_cmp_full.read() & ~L1_data_out_V_1_sel_wr.read());
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_1_load_B() {
    L1_data_out_V_1_load_B = (L1_data_out_V_1_sel_wr.read() & L1_data_out_V_1_state_cmp_full.read());
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_1_sel() {
    L1_data_out_V_1_sel = L1_data_out_V_1_sel_rd.read();
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_1_state_cmp_full() {
    L1_data_out_V_1_state_cmp_full =  (sc_logic) ((!L1_data_out_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(L1_data_out_V_1_state.read() != ap_const_lv2_1))[0];
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_reg_651.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state_load_reg_651.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        L1_data_out_V_1_vld_in = ap_const_logic_1;
    } else {
        L1_data_out_V_1_vld_in = ap_const_logic_0;
    }
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_1_vld_out() {
    L1_data_out_V_1_vld_out = L1_data_out_V_1_state.read()[0];
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_TDATA() {
    L1_data_out_V_TDATA = L1_data_out_V_1_data_out.read();
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state_load_reg_651.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state_load_reg_651_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_reg_651.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
          esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_reg_651_pp0_iter1_reg.read())))) {
        L1_data_out_V_TDATA_blk_n = L1_data_out_V_1_state.read()[1];
    } else {
        L1_data_out_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Userplane_L1_Data_Gen::thread_L1_data_out_V_TVALID() {
    L1_data_out_V_TVALID = L1_data_out_V_1_state.read()[0];
}

void Userplane_L1_Data_Gen::thread_add_ln700_1_fu_281_p2() {
    add_ln700_1_fu_281_p2 = (!section_count_V.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(section_count_V.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Userplane_L1_Data_Gen::thread_add_ln700_fu_299_p2() {
    add_ln700_fu_299_p2 = (!sym_count_V.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(sym_count_V.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void Userplane_L1_Data_Gen::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Userplane_L1_Data_Gen::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_reg_651.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_1_ack_in.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state_load_reg_651.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_1_ack_in.read())));
}

void Userplane_L1_Data_Gen::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Userplane_L1_Data_Gen::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_reg_651_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_1_ack_in.read())) || (esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state_load_reg_651_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_1_ack_in.read())));
}

void Userplane_L1_Data_Gen::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)));
}

void Userplane_L1_Data_Gen::thread_ap_condition_152() {
    ap_condition_152 = (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))));
}

void Userplane_L1_Data_Gen::thread_ap_condition_166() {
    ap_condition_166 = (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_load_fu_241_p1.read()));
}

void Userplane_L1_Data_Gen::thread_ap_condition_227() {
    ap_condition_227 = (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && !(esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
   esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)))));
}

void Userplane_L1_Data_Gen::thread_ap_phi_mux_storemerge576_phi_fu_199_p4() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_load_fu_241_p1.read()))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_275_p2.read())) {
            ap_phi_mux_storemerge576_phi_fu_199_p4 = select_ln70_1_fu_320_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_fu_275_p2.read())) {
            ap_phi_mux_storemerge576_phi_fu_199_p4 = ap_const_lv2_0;
        } else {
            ap_phi_mux_storemerge576_phi_fu_199_p4 = ap_phi_reg_pp0_iter0_storemerge576_reg_196.read();
        }
    } else {
        ap_phi_mux_storemerge576_phi_fu_199_p4 = ap_phi_reg_pp0_iter0_storemerge576_reg_196.read();
    }
}

void Userplane_L1_Data_Gen::thread_ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_load_fu_241_p1.read()))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_275_p2.read())) {
            ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4 = ap_const_lv1_1;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_fu_275_p2.read())) {
            ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4 = ap_const_lv1_0;
        } else {
            ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4 = ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175.read();
        }
    } else {
        ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4 = ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175.read();
    }
}

void Userplane_L1_Data_Gen::thread_ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_load_fu_241_p1.read()))) {
        ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8 = ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                esl_seteq<1,2,2>(ap_const_lv2_2, data_src_state_load_load_fu_241_p1.read()))) {
        ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8 = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,2,2>(ap_const_lv2_3, data_src_state_load_load_fu_241_p1.read())) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,2,2>(ap_const_lv2_0, data_src_state_load_load_fu_241_p1.read())))) {
        ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8 = ap_const_lv1_0;
    } else {
        ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8 = ap_phi_reg_pp0_iter0_sym_count_V_flag_1_reg_206.read();
    }
}

void Userplane_L1_Data_Gen::thread_ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_load_fu_241_p1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_fu_275_p2.read()))) {
        ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4 = select_ln70_fu_311_p3.read();
    } else {
        ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4 = ap_phi_reg_pp0_iter0_sym_count_V_new_0_reg_186.read();
    }
}

void Userplane_L1_Data_Gen::thread_ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8() {
    if (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read())) {
        if (esl_seteq<1,2,2>(ap_const_lv2_1, data_src_state_load_load_fu_241_p1.read())) {
            ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8 = ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4.read();
        } else if (esl_seteq<1,2,2>(ap_const_lv2_2, data_src_state_load_load_fu_241_p1.read())) {
            ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8 = ap_const_lv6_0;
        } else {
            ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8 = ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224.read();
        }
    } else {
        ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8 = ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224.read();
    }
}

void Userplane_L1_Data_Gen::thread_ap_phi_reg_pp0_iter0_storemerge576_reg_196() {
    ap_phi_reg_pp0_iter0_storemerge576_reg_196 =  (sc_lv<2>) ("XX");
}

void Userplane_L1_Data_Gen::thread_ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175() {
    ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175 =  (sc_lv<1>) ("X");
}

void Userplane_L1_Data_Gen::thread_ap_phi_reg_pp0_iter0_sym_count_V_flag_1_reg_206() {
    ap_phi_reg_pp0_iter0_sym_count_V_flag_1_reg_206 =  (sc_lv<1>) ("X");
}

void Userplane_L1_Data_Gen::thread_ap_phi_reg_pp0_iter0_sym_count_V_new_0_reg_186() {
    ap_phi_reg_pp0_iter0_sym_count_V_new_0_reg_186 =  (sc_lv<6>) ("XXXXXX");
}

void Userplane_L1_Data_Gen::thread_ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224() {
    ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224 =  (sc_lv<6>) ("XXXXXX");
}

void Userplane_L1_Data_Gen::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void Userplane_L1_Data_Gen::thread_data_src_state_load_load_fu_241_p1() {
    data_src_state_load_load_fu_241_p1 = data_src_state.read();
}

void Userplane_L1_Data_Gen::thread_icmp_ln31_1_fu_352_p2() {
    icmp_ln31_1_fu_352_p2 = (!sec_count_V_reg_667.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<1>(): sc_lv<1>(sec_count_V_reg_667.read() == ap_const_lv4_1);
}

void Userplane_L1_Data_Gen::thread_icmp_ln31_2_fu_357_p2() {
    icmp_ln31_2_fu_357_p2 = (!sec_count_V_reg_667.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<1>(): sc_lv<1>(sec_count_V_reg_667.read() == ap_const_lv4_2);
}

void Userplane_L1_Data_Gen::thread_icmp_ln31_3_fu_362_p2() {
    icmp_ln31_3_fu_362_p2 = (!sec_count_V_reg_667.read().is_01() || !ap_const_lv4_3.is_01())? sc_lv<1>(): sc_lv<1>(sec_count_V_reg_667.read() == ap_const_lv4_3);
}

void Userplane_L1_Data_Gen::thread_icmp_ln31_4_fu_367_p2() {
    icmp_ln31_4_fu_367_p2 = (!sec_count_V_reg_667.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<1>(): sc_lv<1>(sec_count_V_reg_667.read() == ap_const_lv4_4);
}

void Userplane_L1_Data_Gen::thread_icmp_ln31_5_fu_372_p2() {
    icmp_ln31_5_fu_372_p2 = (!sec_count_V_reg_667.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<1>(): sc_lv<1>(sec_count_V_reg_667.read() == ap_const_lv4_5);
}

void Userplane_L1_Data_Gen::thread_icmp_ln31_6_fu_377_p2() {
    icmp_ln31_6_fu_377_p2 = (!sec_count_V_reg_667.read().is_01() || !ap_const_lv4_6.is_01())? sc_lv<1>(): sc_lv<1>(sec_count_V_reg_667.read() == ap_const_lv4_6);
}

void Userplane_L1_Data_Gen::thread_icmp_ln31_7_fu_382_p2() {
    icmp_ln31_7_fu_382_p2 = (!sec_count_V_reg_667.read().is_01() || !ap_const_lv4_7.is_01())? sc_lv<1>(): sc_lv<1>(sec_count_V_reg_667.read() == ap_const_lv4_7);
}

void Userplane_L1_Data_Gen::thread_icmp_ln31_8_fu_387_p2() {
    icmp_ln31_8_fu_387_p2 = (!sec_count_V_reg_667.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(sec_count_V_reg_667.read() == ap_const_lv4_8);
}

void Userplane_L1_Data_Gen::thread_icmp_ln31_fu_347_p2() {
    icmp_ln31_fu_347_p2 = (!sec_count_V_reg_667.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(sec_count_V_reg_667.read() == ap_const_lv4_0);
}

void Userplane_L1_Data_Gen::thread_icmp_ln879_1_fu_305_p2() {
    icmp_ln879_1_fu_305_p2 = (!add_ln700_fu_299_p2.read().is_01() || !ap_const_lv6_E.is_01())? sc_lv<1>(): sc_lv<1>(add_ln700_fu_299_p2.read() == ap_const_lv6_E);
}

void Userplane_L1_Data_Gen::thread_icmp_ln879_fu_275_p2() {
    icmp_ln879_fu_275_p2 = (!section_count_V.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(section_count_V.read() == ap_const_lv4_9);
}

void Userplane_L1_Data_Gen::thread_or_ln215_1_fu_414_p2() {
    or_ln215_1_fu_414_p2 = (icmp_ln31_6_fu_377_p2.read() | icmp_ln31_5_fu_372_p2.read());
}

void Userplane_L1_Data_Gen::thread_or_ln215_2_fu_428_p2() {
    or_ln215_2_fu_428_p2 = (icmp_ln31_4_fu_367_p2.read() | icmp_ln31_3_fu_362_p2.read());
}

void Userplane_L1_Data_Gen::thread_or_ln215_3_fu_442_p2() {
    or_ln215_3_fu_442_p2 = (icmp_ln31_2_fu_357_p2.read() | icmp_ln31_1_fu_352_p2.read());
}

void Userplane_L1_Data_Gen::thread_or_ln215_4_fu_464_p2() {
    or_ln215_4_fu_464_p2 = (or_ln215_fu_400_p2.read() | or_ln215_1_fu_414_p2.read());
}

void Userplane_L1_Data_Gen::thread_or_ln215_5_fu_482_p2() {
    or_ln215_5_fu_482_p2 = (or_ln215_2_fu_428_p2.read() | or_ln215_3_fu_442_p2.read());
}

void Userplane_L1_Data_Gen::thread_or_ln215_6_fu_496_p2() {
    or_ln215_6_fu_496_p2 = (or_ln215_4_fu_464_p2.read() | or_ln215_5_fu_482_p2.read());
}

void Userplane_L1_Data_Gen::thread_or_ln215_7_fu_598_p2() {
    or_ln215_7_fu_598_p2 = (or_ln215_6_fu_496_p2.read() | icmp_ln31_fu_347_p2.read());
}

void Userplane_L1_Data_Gen::thread_or_ln215_fu_400_p2() {
    or_ln215_fu_400_p2 = (icmp_ln31_8_fu_387_p2.read() | icmp_ln31_7_fu_382_p2.read());
}

void Userplane_L1_Data_Gen::thread_select_ln215_10_fu_522_p3() {
    select_ln215_10_fu_522_p3 = (!icmp_ln31_6_fu_377_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln31_6_fu_377_p2.read()[0].to_bool())? ap_const_lv8_B4: ap_const_lv8_96);
}

void Userplane_L1_Data_Gen::thread_select_ln215_11_fu_530_p3() {
    select_ln215_11_fu_530_p3 = (!icmp_ln31_4_fu_367_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln31_4_fu_367_p2.read()[0].to_bool())? ap_const_lv7_78: ap_const_lv7_5A);
}

void Userplane_L1_Data_Gen::thread_select_ln215_12_fu_538_p3() {
    select_ln215_12_fu_538_p3 = (!icmp_ln31_2_fu_357_p2.read()[0].is_01())? sc_lv<7>(): ((icmp_ln31_2_fu_357_p2.read()[0].to_bool())? ap_const_lv7_3C: ap_const_lv7_1E);
}

void Userplane_L1_Data_Gen::thread_select_ln215_13_fu_546_p3() {
    select_ln215_13_fu_546_p3 = (!icmp_ln31_fu_347_p2.read()[0].is_01())? sc_lv<9>(): ((icmp_ln31_fu_347_p2.read()[0].to_bool())? ap_const_lv9_0: ap_const_lv9_10E);
}

void Userplane_L1_Data_Gen::thread_select_ln215_14_fu_554_p3() {
    select_ln215_14_fu_554_p3 = (!or_ln215_fu_400_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln215_fu_400_p2.read()[0].to_bool())? select_ln215_9_fu_514_p3.read(): select_ln215_10_fu_522_p3.read());
}

void Userplane_L1_Data_Gen::thread_select_ln215_15_fu_562_p3() {
    select_ln215_15_fu_562_p3 = (!or_ln215_2_fu_428_p2.read()[0].is_01())? sc_lv<7>(): ((or_ln215_2_fu_428_p2.read()[0].to_bool())? select_ln215_11_fu_530_p3.read(): select_ln215_12_fu_538_p3.read());
}

void Userplane_L1_Data_Gen::thread_select_ln215_16_fu_574_p3() {
    select_ln215_16_fu_574_p3 = (!or_ln215_4_fu_464_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln215_4_fu_464_p2.read()[0].to_bool())? select_ln215_14_fu_554_p3.read(): zext_ln215_2_fu_570_p1.read());
}

void Userplane_L1_Data_Gen::thread_select_ln215_17_fu_586_p3() {
    select_ln215_17_fu_586_p3 = (!or_ln215_6_fu_496_p2.read()[0].is_01())? sc_lv<9>(): ((or_ln215_6_fu_496_p2.read()[0].to_bool())? zext_ln215_3_fu_582_p1.read(): select_ln215_13_fu_546_p3.read());
}

void Userplane_L1_Data_Gen::thread_select_ln215_18_fu_604_p3() {
    select_ln215_18_fu_604_p3 = (!or_ln215_7_fu_598_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln215_7_fu_598_p2.read()[0].to_bool())? ap_const_lv8_1E: ap_const_lv8_3);
}

void Userplane_L1_Data_Gen::thread_select_ln215_1_fu_406_p3() {
    select_ln215_1_fu_406_p3 = (!icmp_ln31_6_fu_377_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln31_6_fu_377_p2.read()[0].to_bool())? ap_const_lv4_7: ap_const_lv4_6);
}

void Userplane_L1_Data_Gen::thread_select_ln215_2_fu_420_p3() {
    select_ln215_2_fu_420_p3 = (!icmp_ln31_4_fu_367_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln31_4_fu_367_p2.read()[0].to_bool())? ap_const_lv3_5: ap_const_lv3_4);
}

void Userplane_L1_Data_Gen::thread_select_ln215_3_fu_434_p3() {
    select_ln215_3_fu_434_p3 = (!icmp_ln31_2_fu_357_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln31_2_fu_357_p2.read()[0].to_bool())? ap_const_lv3_3: ap_const_lv3_2);
}

void Userplane_L1_Data_Gen::thread_select_ln215_4_fu_448_p3() {
    select_ln215_4_fu_448_p3 = (!icmp_ln31_fu_347_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln31_fu_347_p2.read()[0].to_bool())? ap_const_lv4_1: ap_const_lv4_A);
}

void Userplane_L1_Data_Gen::thread_select_ln215_5_fu_456_p3() {
    select_ln215_5_fu_456_p3 = (!or_ln215_fu_400_p2.read()[0].is_01())? sc_lv<4>(): ((or_ln215_fu_400_p2.read()[0].to_bool())? select_ln215_fu_392_p3.read(): select_ln215_1_fu_406_p3.read());
}

void Userplane_L1_Data_Gen::thread_select_ln215_6_fu_470_p3() {
    select_ln215_6_fu_470_p3 = (!or_ln215_2_fu_428_p2.read()[0].is_01())? sc_lv<3>(): ((or_ln215_2_fu_428_p2.read()[0].to_bool())? select_ln215_2_fu_420_p3.read(): select_ln215_3_fu_434_p3.read());
}

void Userplane_L1_Data_Gen::thread_select_ln215_7_fu_488_p3() {
    select_ln215_7_fu_488_p3 = (!or_ln215_4_fu_464_p2.read()[0].is_01())? sc_lv<4>(): ((or_ln215_4_fu_464_p2.read()[0].to_bool())? select_ln215_5_fu_456_p3.read(): zext_ln215_fu_478_p1.read());
}

void Userplane_L1_Data_Gen::thread_select_ln215_8_fu_502_p3() {
    select_ln215_8_fu_502_p3 = (!or_ln215_6_fu_496_p2.read()[0].is_01())? sc_lv<4>(): ((or_ln215_6_fu_496_p2.read()[0].to_bool())? select_ln215_7_fu_488_p3.read(): select_ln215_4_fu_448_p3.read());
}

void Userplane_L1_Data_Gen::thread_select_ln215_9_fu_514_p3() {
    select_ln215_9_fu_514_p3 = (!icmp_ln31_8_fu_387_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln31_8_fu_387_p2.read()[0].to_bool())? ap_const_lv8_F0: ap_const_lv8_D2);
}

void Userplane_L1_Data_Gen::thread_select_ln215_fu_392_p3() {
    select_ln215_fu_392_p3 = (!icmp_ln31_8_fu_387_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln31_8_fu_387_p2.read()[0].to_bool())? ap_const_lv4_9: ap_const_lv4_8);
}

void Userplane_L1_Data_Gen::thread_select_ln70_1_fu_320_p3() {
    select_ln70_1_fu_320_p3 = (!icmp_ln879_1_fu_305_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln879_1_fu_305_p2.read()[0].to_bool())? ap_const_lv2_2: ap_const_lv2_0);
}

void Userplane_L1_Data_Gen::thread_select_ln70_fu_311_p3() {
    select_ln70_fu_311_p3 = (!icmp_ln879_1_fu_305_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln879_1_fu_305_p2.read()[0].to_bool())? ap_const_lv6_0: add_ln700_fu_299_p2.read());
}

void Userplane_L1_Data_Gen::thread_st_out_V() {
    st_out_V = esl_zext<4,2>(data_src_state_load_reg_651_pp0_iter1_reg.read());
}

void Userplane_L1_Data_Gen::thread_symbol_number_V() {
    symbol_number_V = t_V_reg_656_pp0_iter1_reg.read();
}

void Userplane_L1_Data_Gen::thread_tmp_1_fu_612_p7() {
    tmp_1_fu_612_p7 = esl_concat<44,20>(esl_concat<36,8>(esl_concat<26,10>(esl_concat<24,2>(esl_concat<12,12>(ap_const_lv12_45, zext_ln215_1_fu_510_p1.read()), ap_const_lv2_0), zext_ln215_4_fu_594_p1.read()), select_ln215_18_fu_604_p3.read()), ap_const_lv20_0);
}

void Userplane_L1_Data_Gen::thread_tmp_fu_633_p7() {
    tmp_fu_633_p7 = esl_concat<44,20>(esl_concat<38,6>(esl_concat<32,6>(esl_concat<28,4>(esl_concat<20,8>(ap_const_lv20_4490, frameID_in_V_read_reg_683.read()), subframeID_val_V.read()), slot_in_V_read_reg_662.read()), t_V_reg_656.read()), ap_const_lv20_0);
}

void Userplane_L1_Data_Gen::thread_zext_ln215_1_fu_510_p1() {
    zext_ln215_1_fu_510_p1 = esl_zext<12,4>(select_ln215_8_fu_502_p3.read());
}

void Userplane_L1_Data_Gen::thread_zext_ln215_2_fu_570_p1() {
    zext_ln215_2_fu_570_p1 = esl_zext<8,7>(select_ln215_15_fu_562_p3.read());
}

void Userplane_L1_Data_Gen::thread_zext_ln215_3_fu_582_p1() {
    zext_ln215_3_fu_582_p1 = esl_zext<9,8>(select_ln215_16_fu_574_p3.read());
}

void Userplane_L1_Data_Gen::thread_zext_ln215_4_fu_594_p1() {
    zext_ln215_4_fu_594_p1 = esl_zext<10,9>(select_ln215_17_fu_586_p3.read());
}

void Userplane_L1_Data_Gen::thread_zext_ln215_fu_478_p1() {
    zext_ln215_fu_478_p1 = esl_zext<4,3>(select_ln215_6_fu_470_p3.read());
}

void Userplane_L1_Data_Gen::thread_ap_NS_iter0_fsm() {
    switch (ap_CS_iter0_fsm.read().to_uint64()) {
        case 0 : 
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
break;
        default : 
            ap_NS_iter0_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void Userplane_L1_Data_Gen::thread_ap_NS_iter1_fsm() {
    switch (ap_CS_iter1_fsm.read().to_uint64()) {
        case 0 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && !esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter1_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void Userplane_L1_Data_Gen::thread_ap_NS_iter2_fsm() {
    switch (ap_CS_iter2_fsm.read().to_uint64()) {
        case 0 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0) && !(esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else if ((((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || 
  !esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read())) && !(esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_1) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, L1_data_out_V_TREADY.read()) && 
    esl_seteq<1,2,2>(L1_data_out_V_1_state.read(), ap_const_lv2_3)) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter2_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void Userplane_L1_Data_Gen::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"L1_data_out_V_TDATA\" :  \"" << L1_data_out_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"L1_data_out_V_TVALID\" :  \"" << L1_data_out_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"L1_data_out_V_TREADY\" :  \"" << L1_data_out_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"slot_in_V\" :  \"" << slot_in_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"frameID_in_V\" :  \"" << frameID_in_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"st_out_V\" :  \"" << st_out_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"symbol_number_V\" :  \"" << symbol_number_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

