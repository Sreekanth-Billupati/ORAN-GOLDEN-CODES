-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Userplane_L1_Data_Gen is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    L1_data_out_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    L1_data_out_V_TVALID : OUT STD_LOGIC;
    L1_data_out_V_TREADY : IN STD_LOGIC;
    slot_in_V : IN STD_LOGIC_VECTOR (5 downto 0);
    frameID_in_V : IN STD_LOGIC_VECTOR (7 downto 0);
    st_out_V : OUT STD_LOGIC_VECTOR (3 downto 0);
    symbol_number_V : OUT STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of Userplane_L1_Data_Gen is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Userplane_L1_Data_Gen,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.280750,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=185,HLS_SYN_LUT=433,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_ST_iter1_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_ST_iter2_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_iter2_fsm_state0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv8_D2 : STD_LOGIC_VECTOR (7 downto 0) := "11010010";
    constant ap_const_lv8_B4 : STD_LOGIC_VECTOR (7 downto 0) := "10110100";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_5A : STD_LOGIC_VECTOR (6 downto 0) := "1011010";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv7_1E : STD_LOGIC_VECTOR (6 downto 0) := "0011110";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_10E : STD_LOGIC_VECTOR (8 downto 0) := "100001110";
    constant ap_const_lv8_1E : STD_LOGIC_VECTOR (7 downto 0) := "00011110";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv12_45 : STD_LOGIC_VECTOR (11 downto 0) := "000001000101";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv20_4490 : STD_LOGIC_VECTOR (19 downto 0) := "00000100010010010000";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_rst_n_inv : STD_LOGIC;
    signal L1_data_out_V_1_data_in : STD_LOGIC_VECTOR (63 downto 0);
    signal L1_data_out_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal L1_data_out_V_1_vld_in : STD_LOGIC;
    signal L1_data_out_V_1_vld_out : STD_LOGIC;
    signal L1_data_out_V_1_ack_in : STD_LOGIC;
    signal L1_data_out_V_1_ack_out : STD_LOGIC;
    signal L1_data_out_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal L1_data_out_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal L1_data_out_V_1_sel_rd : STD_LOGIC := '0';
    signal L1_data_out_V_1_sel_wr : STD_LOGIC := '0';
    signal L1_data_out_V_1_sel : STD_LOGIC;
    signal L1_data_out_V_1_load_A : STD_LOGIC;
    signal L1_data_out_V_1_load_B : STD_LOGIC;
    signal L1_data_out_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal L1_data_out_V_1_state_cmp_full : STD_LOGIC;
    signal data_src_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal sym_count_V : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal subframeID_val_V : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal section_count_V : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal L1_data_out_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal ap_CS_iter2_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal data_src_state_load_reg_651 : STD_LOGIC_VECTOR (1 downto 0);
    signal data_src_state_load_reg_651_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal data_src_state_load_load_fu_241_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal t_V_reg_656 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_V_reg_656_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal slot_in_V_read_reg_662 : STD_LOGIC_VECTOR (5 downto 0);
    signal sec_count_V_reg_667 : STD_LOGIC_VECTOR (3 downto 0);
    signal frameID_in_V_read_reg_683 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_612_p7 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_633_p7 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln70_fu_311_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_sym_count_V_new_0_reg_186 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_storemerge576_phi_fu_199_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge576_reg_196 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln70_1_fu_320_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_sym_count_V_flag_1_reg_206 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln700_1_fu_281_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln700_fu_299_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln879_1_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_8_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_7_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_6_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_5_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_4_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_3_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_2_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_1_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln215_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_fu_392_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln215_1_fu_406_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln215_1_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln215_2_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_2_fu_420_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln215_3_fu_434_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln215_6_fu_470_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln215_3_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln215_4_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_5_fu_456_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln215_fu_478_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln215_5_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln215_6_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_7_fu_488_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln215_4_fu_448_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln215_8_fu_502_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln215_9_fu_514_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln215_10_fu_522_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln215_11_fu_530_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln215_12_fu_538_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln215_15_fu_562_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln215_14_fu_554_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_2_fu_570_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln215_16_fu_574_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_3_fu_582_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln215_13_fu_546_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln215_17_fu_586_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln215_7_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln215_1_fu_510_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_4_fu_594_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_18_fu_604_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter2_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_227 : BOOLEAN;
    signal ap_condition_152 : BOOLEAN;
    signal ap_condition_166 : BOOLEAN;


begin




    L1_data_out_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                L1_data_out_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = L1_data_out_V_1_ack_out) and (ap_const_logic_1 = L1_data_out_V_1_vld_out))) then 
                                        L1_data_out_V_1_sel_rd <= not(L1_data_out_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    L1_data_out_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                L1_data_out_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = L1_data_out_V_1_ack_in) and (ap_const_logic_1 = L1_data_out_V_1_vld_in))) then 
                                        L1_data_out_V_1_sel_wr <= not(L1_data_out_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    L1_data_out_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                L1_data_out_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = L1_data_out_V_1_vld_in) and (ap_const_lv2_2 = L1_data_out_V_1_state)) or ((ap_const_logic_0 = L1_data_out_V_1_vld_in) and (ap_const_logic_1 = L1_data_out_V_1_ack_out) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) then 
                    L1_data_out_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_1 = L1_data_out_V_1_state)) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_logic_1 = L1_data_out_V_1_vld_in) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) then 
                    L1_data_out_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = L1_data_out_V_1_vld_in) and (ap_const_logic_1 = L1_data_out_V_1_ack_out))) and not(((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_logic_1 = L1_data_out_V_1_vld_in))) and (ap_const_lv2_3 = L1_data_out_V_1_state)) or ((ap_const_logic_1 = L1_data_out_V_1_ack_out) and (ap_const_lv2_1 = L1_data_out_V_1_state)) or ((ap_const_logic_1 = L1_data_out_V_1_vld_in) and (ap_const_lv2_2 = L1_data_out_V_1_state)))) then 
                    L1_data_out_V_1_state <= ap_const_lv2_3;
                else 
                    L1_data_out_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter2_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
            else
                ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
            end if;
        end if;
    end process;


    data_src_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_src_state <= ap_const_lv2_0;
            else
                if ((ap_const_boolean_1 = ap_condition_152)) then
                    if ((data_src_state_load_load_fu_241_p1 = ap_const_lv2_0)) then 
                        data_src_state <= ap_const_lv2_1;
                    elsif ((data_src_state_load_load_fu_241_p1 = ap_const_lv2_1)) then 
                        data_src_state <= ap_phi_mux_storemerge576_phi_fu_199_p4;
                    elsif ((data_src_state_load_load_fu_241_p1 = ap_const_lv2_2)) then 
                        data_src_state <= ap_const_lv2_0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    section_count_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                section_count_V <= ap_const_lv4_0;
            else
                if ((ap_const_boolean_1 = ap_condition_166)) then
                    if ((icmp_ln879_fu_275_p2 = ap_const_lv1_1)) then 
                        section_count_V <= ap_const_lv4_0;
                    elsif ((icmp_ln879_fu_275_p2 = ap_const_lv1_0)) then 
                        section_count_V <= add_ln700_1_fu_281_p2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    subframeID_val_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                subframeID_val_V <= ap_const_lv4_0;
            else
                if ((not((((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) or ((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (data_src_state_load_load_fu_241_p1 = ap_const_lv2_2))) then 
                    subframeID_val_V <= slot_in_V(4 downto 1);
                end if; 
            end if;
        end if;
    end process;


    sym_count_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                sym_count_V <= ap_const_lv6_0;
            else
                if ((not((((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) or ((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8 = ap_const_lv1_1))) then 
                    sym_count_V <= ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = L1_data_out_V_1_load_A)) then
                L1_data_out_V_1_payload_A <= L1_data_out_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = L1_data_out_V_1_load_B)) then
                L1_data_out_V_1_payload_B <= L1_data_out_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) or ((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm))) then
                data_src_state_load_reg_651 <= data_src_state;
                slot_in_V_read_reg_662 <= slot_in_V;
                t_V_reg_656 <= sym_count_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))))) and (ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm))) then
                data_src_state_load_reg_651_pp0_iter1_reg <= data_src_state_load_reg_651;
                t_V_reg_656_pp0_iter1_reg <= t_V_reg_656;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) or ((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (data_src_state_load_load_fu_241_p1 = ap_const_lv2_0))) then
                frameID_in_V_read_reg_683 <= frameID_in_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) or ((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (data_src_state_load_load_fu_241_p1 = ap_const_lv2_1))) then
                sec_count_V_reg_667 <= section_count_V;
            end if;
        end if;
    end process;

    ap_NS_iter0_fsm_assign_proc : process (L1_data_out_V_TREADY, L1_data_out_V_1_state, ap_CS_iter1_fsm, ap_CS_iter2_fsm, ap_block_state2_io, ap_block_state3_io, ap_CS_iter0_fsm)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            when others =>  
                ap_NS_iter0_fsm <= "X";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (L1_data_out_V_TREADY, L1_data_out_V_1_state, ap_CS_iter1_fsm, ap_CS_iter2_fsm, ap_block_state2_io, ap_block_state3_io, ap_CS_iter0_fsm)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state2 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))))) and (ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                elsif ((not((ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm)) and not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))))))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not((((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) or ((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "X";
        end case;
    end process;

    ap_NS_iter2_fsm_assign_proc : process (L1_data_out_V_TREADY, L1_data_out_V_1_state, ap_CS_iter1_fsm, ap_CS_iter2_fsm, ap_block_state2_io, ap_block_state3_io)
    begin
        case ap_CS_iter2_fsm is
            when ap_ST_iter2_fsm_state3 => 
                if ((not(((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) and (ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (ap_const_boolean_0 = ap_block_state2_io))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                elsif ((not(((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) and (not((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm)) or ((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (ap_const_boolean_1 = ap_block_state2_io))))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state0;
                else
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                end if;
            when ap_ST_iter2_fsm_state0 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))))) and (ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                else
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter2_fsm <= "X";
        end case;
    end process;
    L1_data_out_V_1_ack_in <= L1_data_out_V_1_state(1);
    L1_data_out_V_1_ack_out <= L1_data_out_V_TREADY;

    L1_data_out_V_1_data_in_assign_proc : process(data_src_state_load_reg_651, tmp_1_fu_612_p7, tmp_fu_633_p7, ap_condition_227)
    begin
        if ((ap_const_boolean_1 = ap_condition_227)) then
            if ((data_src_state_load_reg_651 = ap_const_lv2_0)) then 
                L1_data_out_V_1_data_in <= tmp_fu_633_p7;
            elsif ((data_src_state_load_reg_651 = ap_const_lv2_1)) then 
                L1_data_out_V_1_data_in <= tmp_1_fu_612_p7;
            else 
                L1_data_out_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            L1_data_out_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    L1_data_out_V_1_data_out_assign_proc : process(L1_data_out_V_1_payload_A, L1_data_out_V_1_payload_B, L1_data_out_V_1_sel)
    begin
        if ((ap_const_logic_1 = L1_data_out_V_1_sel)) then 
            L1_data_out_V_1_data_out <= L1_data_out_V_1_payload_B;
        else 
            L1_data_out_V_1_data_out <= L1_data_out_V_1_payload_A;
        end if; 
    end process;

    L1_data_out_V_1_load_A <= (not(L1_data_out_V_1_sel_wr) and L1_data_out_V_1_state_cmp_full);
    L1_data_out_V_1_load_B <= (L1_data_out_V_1_state_cmp_full and L1_data_out_V_1_sel_wr);
    L1_data_out_V_1_sel <= L1_data_out_V_1_sel_rd;
    L1_data_out_V_1_state_cmp_full <= '0' when (L1_data_out_V_1_state = ap_const_lv2_1) else '1';

    L1_data_out_V_1_vld_in_assign_proc : process(L1_data_out_V_TREADY, L1_data_out_V_1_state, ap_CS_iter1_fsm, ap_CS_iter2_fsm, data_src_state_load_reg_651, ap_block_state2_io, ap_block_state3_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))))) and (ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (data_src_state_load_reg_651 = ap_const_lv2_1)) or (not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))))) and (ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (data_src_state_load_reg_651 = ap_const_lv2_0)))) then 
            L1_data_out_V_1_vld_in <= ap_const_logic_1;
        else 
            L1_data_out_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    L1_data_out_V_1_vld_out <= L1_data_out_V_1_state(0);
    L1_data_out_V_TDATA <= L1_data_out_V_1_data_out;

    L1_data_out_V_TDATA_blk_n_assign_proc : process(L1_data_out_V_1_state, ap_CS_iter1_fsm, ap_CS_iter2_fsm, data_src_state_load_reg_651, data_src_state_load_reg_651_pp0_iter1_reg)
    begin
        if ((((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and (data_src_state_load_reg_651_pp0_iter1_reg = ap_const_lv2_1)) or ((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and (data_src_state_load_reg_651_pp0_iter1_reg = ap_const_lv2_0)) or ((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (data_src_state_load_reg_651 = ap_const_lv2_1)) or ((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (data_src_state_load_reg_651 = ap_const_lv2_0)))) then 
            L1_data_out_V_TDATA_blk_n <= L1_data_out_V_1_state(1);
        else 
            L1_data_out_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    L1_data_out_V_TVALID <= L1_data_out_V_1_state(0);
    add_ln700_1_fu_281_p2 <= std_logic_vector(unsigned(section_count_V) + unsigned(ap_const_lv4_1));
    add_ln700_fu_299_p2 <= std_logic_vector(unsigned(sym_count_V) + unsigned(ap_const_lv6_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(L1_data_out_V_1_ack_in, data_src_state_load_reg_651)
    begin
                ap_block_state2_io <= (((ap_const_logic_0 = L1_data_out_V_1_ack_in) and (data_src_state_load_reg_651 = ap_const_lv2_1)) or ((ap_const_logic_0 = L1_data_out_V_1_ack_in) and (data_src_state_load_reg_651 = ap_const_lv2_0)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(L1_data_out_V_1_ack_in, data_src_state_load_reg_651_pp0_iter1_reg)
    begin
                ap_block_state3_io <= (((ap_const_logic_0 = L1_data_out_V_1_ack_in) and (data_src_state_load_reg_651_pp0_iter1_reg = ap_const_lv2_1)) or ((ap_const_logic_0 = L1_data_out_V_1_ack_in) and (data_src_state_load_reg_651_pp0_iter1_reg = ap_const_lv2_0)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(L1_data_out_V_TREADY, L1_data_out_V_1_state)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)));
    end process;


    ap_condition_152_assign_proc : process(L1_data_out_V_TREADY, L1_data_out_V_1_state, ap_CS_iter1_fsm, ap_CS_iter2_fsm, ap_block_state2_io, ap_block_state3_io, ap_CS_iter0_fsm)
    begin
                ap_condition_152 <= (not((((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) or ((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm));
    end process;


    ap_condition_166_assign_proc : process(L1_data_out_V_TREADY, L1_data_out_V_1_state, ap_CS_iter1_fsm, ap_CS_iter2_fsm, ap_block_state2_io, ap_block_state3_io, data_src_state_load_load_fu_241_p1, ap_CS_iter0_fsm)
    begin
                ap_condition_166 <= (not((((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))) or ((ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (data_src_state_load_load_fu_241_p1 = ap_const_lv2_1));
    end process;


    ap_condition_227_assign_proc : process(L1_data_out_V_TREADY, L1_data_out_V_1_state, ap_CS_iter1_fsm, ap_CS_iter2_fsm)
    begin
                ap_condition_227 <= (not(((ap_ST_iter2_fsm_state3 = ap_CS_iter2_fsm) and ((ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state))))) and (ap_ST_iter1_fsm_state2 = ap_CS_iter1_fsm));
    end process;


    ap_phi_mux_storemerge576_phi_fu_199_p4_assign_proc : process(data_src_state_load_load_fu_241_p1, ap_CS_iter0_fsm, icmp_ln879_fu_275_p2, ap_phi_reg_pp0_iter0_storemerge576_reg_196, select_ln70_1_fu_320_p3)
    begin
        if (((ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (data_src_state_load_load_fu_241_p1 = ap_const_lv2_1))) then
            if ((icmp_ln879_fu_275_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge576_phi_fu_199_p4 <= select_ln70_1_fu_320_p3;
            elsif ((icmp_ln879_fu_275_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge576_phi_fu_199_p4 <= ap_const_lv2_0;
            else 
                ap_phi_mux_storemerge576_phi_fu_199_p4 <= ap_phi_reg_pp0_iter0_storemerge576_reg_196;
            end if;
        else 
            ap_phi_mux_storemerge576_phi_fu_199_p4 <= ap_phi_reg_pp0_iter0_storemerge576_reg_196;
        end if; 
    end process;


    ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4_assign_proc : process(data_src_state_load_load_fu_241_p1, ap_CS_iter0_fsm, ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175, icmp_ln879_fu_275_p2)
    begin
        if (((ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (data_src_state_load_load_fu_241_p1 = ap_const_lv2_1))) then
            if ((icmp_ln879_fu_275_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4 <= ap_const_lv1_1;
            elsif ((icmp_ln879_fu_275_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4 <= ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175;
            end if;
        else 
            ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4 <= ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175;
        end if; 
    end process;


    ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8_assign_proc : process(data_src_state_load_load_fu_241_p1, ap_CS_iter0_fsm, ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4, ap_phi_reg_pp0_iter0_sym_count_V_flag_1_reg_206)
    begin
        if (((ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (data_src_state_load_load_fu_241_p1 = ap_const_lv2_1))) then 
            ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8 <= ap_phi_mux_sym_count_V_flag_0_phi_fu_178_p4;
        elsif (((ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (data_src_state_load_load_fu_241_p1 = ap_const_lv2_2))) then 
            ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8 <= ap_const_lv1_1;
        elsif ((((ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (data_src_state_load_load_fu_241_p1 = ap_const_lv2_3)) or ((ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (data_src_state_load_load_fu_241_p1 = ap_const_lv2_0)))) then 
            ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8 <= ap_const_lv1_0;
        else 
            ap_phi_mux_sym_count_V_flag_1_phi_fu_209_p8 <= ap_phi_reg_pp0_iter0_sym_count_V_flag_1_reg_206;
        end if; 
    end process;


    ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4_assign_proc : process(data_src_state_load_load_fu_241_p1, ap_CS_iter0_fsm, icmp_ln879_fu_275_p2, select_ln70_fu_311_p3, ap_phi_reg_pp0_iter0_sym_count_V_new_0_reg_186)
    begin
        if (((ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm) and (data_src_state_load_load_fu_241_p1 = ap_const_lv2_1) and (icmp_ln879_fu_275_p2 = ap_const_lv1_1))) then 
            ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4 <= select_ln70_fu_311_p3;
        else 
            ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4 <= ap_phi_reg_pp0_iter0_sym_count_V_new_0_reg_186;
        end if; 
    end process;


    ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8_assign_proc : process(data_src_state_load_load_fu_241_p1, ap_CS_iter0_fsm, ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4, ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224)
    begin
        if ((ap_ST_iter0_fsm_state1 = ap_CS_iter0_fsm)) then
            if ((data_src_state_load_load_fu_241_p1 = ap_const_lv2_1)) then 
                ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8 <= ap_phi_mux_sym_count_V_new_0_phi_fu_189_p4;
            elsif ((data_src_state_load_load_fu_241_p1 = ap_const_lv2_2)) then 
                ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8 <= ap_const_lv6_0;
            else 
                ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8 <= ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224;
            end if;
        else 
            ap_phi_mux_sym_count_V_new_1_phi_fu_227_p8 <= ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge576_reg_196 <= "XX";
    ap_phi_reg_pp0_iter0_sym_count_V_flag_0_reg_175 <= "X";
    ap_phi_reg_pp0_iter0_sym_count_V_flag_1_reg_206 <= "X";
    ap_phi_reg_pp0_iter0_sym_count_V_new_0_reg_186 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_sym_count_V_new_1_reg_224 <= "XXXXXX";

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    data_src_state_load_load_fu_241_p1 <= data_src_state;
    icmp_ln31_1_fu_352_p2 <= "1" when (sec_count_V_reg_667 = ap_const_lv4_1) else "0";
    icmp_ln31_2_fu_357_p2 <= "1" when (sec_count_V_reg_667 = ap_const_lv4_2) else "0";
    icmp_ln31_3_fu_362_p2 <= "1" when (sec_count_V_reg_667 = ap_const_lv4_3) else "0";
    icmp_ln31_4_fu_367_p2 <= "1" when (sec_count_V_reg_667 = ap_const_lv4_4) else "0";
    icmp_ln31_5_fu_372_p2 <= "1" when (sec_count_V_reg_667 = ap_const_lv4_5) else "0";
    icmp_ln31_6_fu_377_p2 <= "1" when (sec_count_V_reg_667 = ap_const_lv4_6) else "0";
    icmp_ln31_7_fu_382_p2 <= "1" when (sec_count_V_reg_667 = ap_const_lv4_7) else "0";
    icmp_ln31_8_fu_387_p2 <= "1" when (sec_count_V_reg_667 = ap_const_lv4_8) else "0";
    icmp_ln31_fu_347_p2 <= "1" when (sec_count_V_reg_667 = ap_const_lv4_0) else "0";
    icmp_ln879_1_fu_305_p2 <= "1" when (add_ln700_fu_299_p2 = ap_const_lv6_E) else "0";
    icmp_ln879_fu_275_p2 <= "1" when (section_count_V = ap_const_lv4_9) else "0";
    or_ln215_1_fu_414_p2 <= (icmp_ln31_6_fu_377_p2 or icmp_ln31_5_fu_372_p2);
    or_ln215_2_fu_428_p2 <= (icmp_ln31_4_fu_367_p2 or icmp_ln31_3_fu_362_p2);
    or_ln215_3_fu_442_p2 <= (icmp_ln31_2_fu_357_p2 or icmp_ln31_1_fu_352_p2);
    or_ln215_4_fu_464_p2 <= (or_ln215_fu_400_p2 or or_ln215_1_fu_414_p2);
    or_ln215_5_fu_482_p2 <= (or_ln215_3_fu_442_p2 or or_ln215_2_fu_428_p2);
    or_ln215_6_fu_496_p2 <= (or_ln215_5_fu_482_p2 or or_ln215_4_fu_464_p2);
    or_ln215_7_fu_598_p2 <= (or_ln215_6_fu_496_p2 or icmp_ln31_fu_347_p2);
    or_ln215_fu_400_p2 <= (icmp_ln31_8_fu_387_p2 or icmp_ln31_7_fu_382_p2);
    select_ln215_10_fu_522_p3 <= 
        ap_const_lv8_B4 when (icmp_ln31_6_fu_377_p2(0) = '1') else 
        ap_const_lv8_96;
    select_ln215_11_fu_530_p3 <= 
        ap_const_lv7_78 when (icmp_ln31_4_fu_367_p2(0) = '1') else 
        ap_const_lv7_5A;
    select_ln215_12_fu_538_p3 <= 
        ap_const_lv7_3C when (icmp_ln31_2_fu_357_p2(0) = '1') else 
        ap_const_lv7_1E;
    select_ln215_13_fu_546_p3 <= 
        ap_const_lv9_0 when (icmp_ln31_fu_347_p2(0) = '1') else 
        ap_const_lv9_10E;
    select_ln215_14_fu_554_p3 <= 
        select_ln215_9_fu_514_p3 when (or_ln215_fu_400_p2(0) = '1') else 
        select_ln215_10_fu_522_p3;
    select_ln215_15_fu_562_p3 <= 
        select_ln215_11_fu_530_p3 when (or_ln215_2_fu_428_p2(0) = '1') else 
        select_ln215_12_fu_538_p3;
    select_ln215_16_fu_574_p3 <= 
        select_ln215_14_fu_554_p3 when (or_ln215_4_fu_464_p2(0) = '1') else 
        zext_ln215_2_fu_570_p1;
    select_ln215_17_fu_586_p3 <= 
        zext_ln215_3_fu_582_p1 when (or_ln215_6_fu_496_p2(0) = '1') else 
        select_ln215_13_fu_546_p3;
    select_ln215_18_fu_604_p3 <= 
        ap_const_lv8_1E when (or_ln215_7_fu_598_p2(0) = '1') else 
        ap_const_lv8_3;
    select_ln215_1_fu_406_p3 <= 
        ap_const_lv4_7 when (icmp_ln31_6_fu_377_p2(0) = '1') else 
        ap_const_lv4_6;
    select_ln215_2_fu_420_p3 <= 
        ap_const_lv3_5 when (icmp_ln31_4_fu_367_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln215_3_fu_434_p3 <= 
        ap_const_lv3_3 when (icmp_ln31_2_fu_357_p2(0) = '1') else 
        ap_const_lv3_2;
    select_ln215_4_fu_448_p3 <= 
        ap_const_lv4_1 when (icmp_ln31_fu_347_p2(0) = '1') else 
        ap_const_lv4_A;
    select_ln215_5_fu_456_p3 <= 
        select_ln215_fu_392_p3 when (or_ln215_fu_400_p2(0) = '1') else 
        select_ln215_1_fu_406_p3;
    select_ln215_6_fu_470_p3 <= 
        select_ln215_2_fu_420_p3 when (or_ln215_2_fu_428_p2(0) = '1') else 
        select_ln215_3_fu_434_p3;
    select_ln215_7_fu_488_p3 <= 
        select_ln215_5_fu_456_p3 when (or_ln215_4_fu_464_p2(0) = '1') else 
        zext_ln215_fu_478_p1;
    select_ln215_8_fu_502_p3 <= 
        select_ln215_7_fu_488_p3 when (or_ln215_6_fu_496_p2(0) = '1') else 
        select_ln215_4_fu_448_p3;
    select_ln215_9_fu_514_p3 <= 
        ap_const_lv8_F0 when (icmp_ln31_8_fu_387_p2(0) = '1') else 
        ap_const_lv8_D2;
    select_ln215_fu_392_p3 <= 
        ap_const_lv4_9 when (icmp_ln31_8_fu_387_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln70_1_fu_320_p3 <= 
        ap_const_lv2_2 when (icmp_ln879_1_fu_305_p2(0) = '1') else 
        ap_const_lv2_0;
    select_ln70_fu_311_p3 <= 
        ap_const_lv6_0 when (icmp_ln879_1_fu_305_p2(0) = '1') else 
        add_ln700_fu_299_p2;
    st_out_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(data_src_state_load_reg_651_pp0_iter1_reg),4));
    symbol_number_V <= t_V_reg_656_pp0_iter1_reg;
    tmp_1_fu_612_p7 <= (((((ap_const_lv12_45 & zext_ln215_1_fu_510_p1) & ap_const_lv2_0) & zext_ln215_4_fu_594_p1) & select_ln215_18_fu_604_p3) & ap_const_lv20_0);
    tmp_fu_633_p7 <= (((((ap_const_lv20_4490 & frameID_in_V_read_reg_683) & subframeID_val_V) & slot_in_V_read_reg_662) & t_V_reg_656) & ap_const_lv20_0);
    zext_ln215_1_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_8_fu_502_p3),12));
    zext_ln215_2_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_15_fu_562_p3),8));
    zext_ln215_3_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_16_fu_574_p3),9));
    zext_ln215_4_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_17_fu_586_p3),10));
    zext_ln215_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_6_fu_470_p3),4));
end behav;
