// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "uplane_packetiser.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic uplane_packetiser::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic uplane_packetiser::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> uplane_packetiser::ap_ST_iter0_fsm_state1 = "0";
const sc_lv<1> uplane_packetiser::ap_ST_iter1_fsm_state2 = "0";
const sc_lv<1> uplane_packetiser::ap_ST_iter1_fsm_state0 = "1";
const sc_lv<4> uplane_packetiser::ap_const_lv4_0 = "0000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<12> uplane_packetiser::ap_const_lv12_0 = "000000000000";
const sc_lv<16> uplane_packetiser::ap_const_lv16_0 = "0000000000000000";
const sc_lv<10> uplane_packetiser::ap_const_lv10_0 = "0000000000";
const bool uplane_packetiser::ap_const_boolean_1 = true;
const sc_lv<4> uplane_packetiser::ap_const_lv4_1 = "1";
const sc_lv<4> uplane_packetiser::ap_const_lv4_2 = "10";
const sc_lv<4> uplane_packetiser::ap_const_lv4_3 = "11";
const sc_lv<4> uplane_packetiser::ap_const_lv4_4 = "100";
const sc_lv<4> uplane_packetiser::ap_const_lv4_5 = "101";
const sc_lv<4> uplane_packetiser::ap_const_lv4_6 = "110";
const sc_lv<1> uplane_packetiser::ap_const_lv1_0 = "0";
const sc_lv<1> uplane_packetiser::ap_const_lv1_1 = "1";
const sc_lv<3> uplane_packetiser::ap_const_lv3_1 = "1";
const sc_lv<3> uplane_packetiser::ap_const_lv3_4 = "100";
const bool uplane_packetiser::ap_const_boolean_0 = false;
const sc_lv<128> uplane_packetiser::ap_const_lv128_lc_1 = "1000000000000000010000001010101010100010000110011001000100001000100000000111111111111111111111111111111111111111111111111";
const sc_lv<16> uplane_packetiser::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<16> uplane_packetiser::ap_const_lv16_F = "1111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_78 = "1111000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_7F = "1111111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_70 = "1110000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_77 = "1110111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_68 = "1101000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_6F = "1101111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_60 = "1100000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_67 = "1100111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_58 = "1011000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_5F = "1011111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_50 = "1010000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_57 = "1010111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_48 = "1001000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_4F = "1001111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_40 = "1000000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_47 = "1000111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_38 = "111000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_3F = "111111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_30 = "110000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_37 = "110111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_28 = "101000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_2F = "101111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_20 = "100000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_27 = "100111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_18 = "11000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_1F = "11111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_10 = "10000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_17 = "10111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_8 = "1000";
const sc_lv<32> uplane_packetiser::ap_const_lv32_F = "1111";
const sc_lv<10> uplane_packetiser::ap_const_lv10_1 = "1";
const sc_lv<32> uplane_packetiser::ap_const_lv32_1E = "11110";
const sc_lv<10> uplane_packetiser::ap_const_lv10_111 = "100010001";
const sc_lv<32> uplane_packetiser::ap_const_lv32_1 = "1";
const sc_lv<32> uplane_packetiser::ap_const_lv32_3 = "11";
const sc_lv<32> uplane_packetiser::ap_const_lv32_4 = "100";
const sc_lv<32> uplane_packetiser::ap_const_lv32_7 = "111";
const sc_lv<32> uplane_packetiser::ap_const_lv32_13 = "10011";
const sc_lv<32> uplane_packetiser::ap_const_lv32_1A = "11010";
const sc_lv<32> uplane_packetiser::ap_const_lv32_16 = "10110";
const sc_lv<32> uplane_packetiser::ap_const_lv32_19 = "11001";
const sc_lv<32> uplane_packetiser::ap_const_lv32_14 = "10100";
const sc_lv<32> uplane_packetiser::ap_const_lv32_15 = "10101";
const sc_lv<32> uplane_packetiser::ap_const_lv32_B = "1011";
const sc_lv<32> uplane_packetiser::ap_const_lv32_E = "1110";
const sc_lv<32> uplane_packetiser::ap_const_lv32_D = "1101";
const sc_lv<32> uplane_packetiser::ap_const_lv32_C = "1100";
const sc_lv<32> uplane_packetiser::ap_const_lv32_1D = "11101";
const sc_lv<24> uplane_packetiser::ap_const_lv24_10FEAE = "100001111111010101110";
const sc_lv<128> uplane_packetiser::ap_const_lv128_lc_2 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

uplane_packetiser::uplane_packetiser(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Ethernet_header_V_TDATA_blk_n);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_Ethernet_header_V_TREADY);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( application_header_V_TVALID );
    sensitive << ( section_header_V_TVALID );
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_IQ_data_V_data_V_TDATA_blk_n);
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_IQ_data_V_data_V_TREADY);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( application_header_V_TVALID );
    sensitive << ( section_header_V_TVALID );
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_Total_PRB_count_V);
    sensitive << ( PRB_count_V );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( oran_ctrl_state_load_reg_1134 );
    sensitive << ( zext_ln209_fu_1098_p1 );

    SC_METHOD(thread_add_ln209_fu_1101_p2);
    sensitive << ( PRB_count_V );
    sensitive << ( zext_ln209_fu_1098_p1 );

    SC_METHOD(thread_add_ln214_fu_602_p2);
    sensitive << ( count_value_V );

    SC_METHOD(thread_add_ln219_fu_642_p2);
    sensitive << ( PRB_fragmentation );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( application_header_V_TVALID );
    sensitive << ( section_header_V_TVALID );
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( eth_data_TREADY );
    sensitive << ( oran_ctrl_state_load_reg_1134 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_147);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( application_header_V_TVALID );
    sensitive << ( section_header_V_TVALID );
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_phi_mux_count_value_V_new_0_phi_fu_324_p6);
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( icmp_ln251_fu_610_p2 );
    sensitive << ( icmp_ln879_fu_616_p2 );
    sensitive << ( add_ln214_fu_602_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_count_value_V_new_0_reg_321 );

    SC_METHOD(thread_ap_phi_mux_storemerge2747_phi_fu_336_p6);
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( icmp_ln251_fu_610_p2 );
    sensitive << ( icmp_ln879_fu_616_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_storemerge2747_reg_333 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_count_value_V_new_0_reg_321);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_storemerge2747_reg_333);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_last_V_reg_347);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_application_header_V_TDATA_blk_n);
    sensitive << ( application_header_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_application_header_V_TREADY);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( application_header_V_TVALID );
    sensitive << ( section_header_V_TVALID );
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_eCPRI_header_V_TDATA_blk_n);
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_eCPRI_header_V_TREADY);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( application_header_V_TVALID );
    sensitive << ( section_header_V_TVALID );
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_eth_data_TDATA);
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( oran_ctrl_state_load_reg_1134 );
    sensitive << ( p_Result_56_fu_900_p17 );
    sensitive << ( p_Result_55_fu_936_p17 );
    sensitive << ( p_Result_54_fu_972_p17 );
    sensitive << ( p_Result_53_fu_1062_p21 );
    sensitive << ( p_Result_s_fu_1121_p5 );

    SC_METHOD(thread_eth_data_TDATA_blk_n);
    sensitive << ( eth_data_TREADY );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( oran_ctrl_state_load_reg_1134 );

    SC_METHOD(thread_eth_data_TKEEP);
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( oran_ctrl_state_load_reg_1134 );

    SC_METHOD(thread_eth_data_TLAST);
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( oran_ctrl_state_load_reg_1134 );
    sensitive << ( ap_phi_reg_pp0_iter1_tmp_last_V_reg_347 );

    SC_METHOD(thread_eth_data_TVALID);
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( oran_ctrl_state_load_reg_1134 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_icmp_ln251_fu_610_p2);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( application_header_V_TVALID );
    sensitive << ( section_header_V_TVALID );
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( PRB_fragmentation );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_icmp_ln251_reg_1144_pp0_iter0_reg);
    sensitive << ( icmp_ln251_reg_1144 );

    SC_METHOD(thread_icmp_ln879_fu_616_p2);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( application_header_V_TVALID );
    sensitive << ( section_header_V_TVALID );
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( icmp_ln251_fu_610_p2 );
    sensitive << ( add_ln214_fu_602_p2 );

    SC_METHOD(thread_icmp_ln879_reg_1148_pp0_iter0_reg);
    sensitive << ( icmp_ln879_reg_1148 );

    SC_METHOD(thread_oran_ctrl_state_load_load_fu_586_p1);
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_oran_ctrl_state_load_reg_1134_pp0_iter0_reg);
    sensitive << ( oran_ctrl_state_load_reg_1134 );

    SC_METHOD(thread_p_Result_2_fu_1048_p4);
    sensitive << ( ecpri_header_seqid_V );

    SC_METHOD(thread_p_Result_53_fu_1062_p21);
    sensitive << ( tmp_payloadVersion_V_reg_1162 );
    sensitive << ( tmp_filterIndex_V_lo_reg_1167 );
    sensitive << ( tmp_frameId_V_load_n_reg_1172 );
    sensitive << ( tmp_subframeId_V_loa_reg_1177 );
    sensitive << ( tmp_startsymbolId_V_s_reg_1182 );
    sensitive << ( p_Result_4_reg_1188 );
    sensitive << ( p_Result_5_reg_1193 );
    sensitive << ( p_Result_7_reg_1203 );
    sensitive << ( p_Result_9_reg_1208 );
    sensitive << ( trunc_ln647_3_reg_1213 );
    sensitive << ( p_Result_1_reg_1218 );
    sensitive << ( tmp_5_reg_1223 );
    sensitive << ( tmp_6_reg_1228 );
    sensitive << ( trunc_ln647_2_fu_1058_p1 );
    sensitive << ( p_Result_2_fu_1048_p4 );
    sensitive << ( trunc_ln647_1_fu_1040_p1 );
    sensitive << ( p_Result_s_15_fu_1030_p4 );
    sensitive << ( trunc_ln647_fu_1022_p1 );
    sensitive << ( p_Result_6_fu_1012_p4 );

    SC_METHOD(thread_p_Result_54_fu_972_p17);
    sensitive << ( reg_526 );
    sensitive << ( reg_530 );
    sensitive << ( reg_534 );
    sensitive << ( reg_538 );
    sensitive << ( reg_542 );
    sensitive << ( reg_546 );
    sensitive << ( reg_550 );
    sensitive << ( reg_554 );
    sensitive << ( reg_558 );
    sensitive << ( reg_562 );
    sensitive << ( reg_566 );
    sensitive << ( reg_570 );
    sensitive << ( reg_574 );
    sensitive << ( reg_578 );
    sensitive << ( reg_582 );
    sensitive << ( trunc_ln647_4_reg_1157 );

    SC_METHOD(thread_p_Result_55_fu_936_p17);
    sensitive << ( reg_526 );
    sensitive << ( reg_530 );
    sensitive << ( reg_534 );
    sensitive << ( reg_538 );
    sensitive << ( reg_542 );
    sensitive << ( reg_546 );
    sensitive << ( reg_550 );
    sensitive << ( reg_554 );
    sensitive << ( reg_558 );
    sensitive << ( reg_562 );
    sensitive << ( reg_566 );
    sensitive << ( reg_570 );
    sensitive << ( reg_574 );
    sensitive << ( reg_578 );
    sensitive << ( reg_582 );
    sensitive << ( trunc_ln647_5_reg_1152 );

    SC_METHOD(thread_p_Result_56_fu_900_p17);
    sensitive << ( reg_526 );
    sensitive << ( reg_530 );
    sensitive << ( reg_534 );
    sensitive << ( reg_538 );
    sensitive << ( reg_542 );
    sensitive << ( reg_546 );
    sensitive << ( reg_550 );
    sensitive << ( reg_554 );
    sensitive << ( reg_558 );
    sensitive << ( reg_562 );
    sensitive << ( reg_566 );
    sensitive << ( reg_570 );
    sensitive << ( reg_574 );
    sensitive << ( reg_578 );
    sensitive << ( reg_582 );
    sensitive << ( trunc_ln647_6_reg_1139 );

    SC_METHOD(thread_p_Result_6_fu_1012_p4);
    sensitive << ( ecpri_header_payload );

    SC_METHOD(thread_p_Result_s_15_fu_1030_p4);
    sensitive << ( ecpri_header_pcid1_V );

    SC_METHOD(thread_p_Result_s_fu_1121_p5);
    sensitive << ( tmp_4_fu_1114_p3 );

    SC_METHOD(thread_section_header_V_TDATA_blk_n);
    sensitive << ( section_header_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_section_header_V_TREADY);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( application_header_V_TVALID );
    sensitive << ( section_header_V_TVALID );
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_state_out);
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( oran_ctrl_state_load_reg_1134 );

    SC_METHOD(thread_symbol_id_check_V);
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( oran_ctrl_state_load_reg_1134 );
    sensitive << ( tmp_startsymbolId_V_s_reg_1182 );

    SC_METHOD(thread_symbol_id_check_V_ap_vld);
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( oran_ctrl_state_load_reg_1134 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_symbol_number_V);
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( oran_ctrl_state_load_reg_1134 );
    sensitive << ( trunc_ln_reg_1233 );

    SC_METHOD(thread_tmp_4_fu_1114_p3);
    sensitive << ( tmp_msg_type_V_load_s_reg_1238 );

    SC_METHOD(thread_tmp_6_fu_794_p4);
    sensitive << ( section_header_V_TDATA );

    SC_METHOD(thread_trunc_ln647_1_fu_1040_p1);
    sensitive << ( ecpri_header_pcid1_V );

    SC_METHOD(thread_trunc_ln647_2_fu_1058_p1);
    sensitive << ( ecpri_header_seqid_V );

    SC_METHOD(thread_trunc_ln647_3_fu_770_p1);
    sensitive << ( section_header_V_TDATA );

    SC_METHOD(thread_trunc_ln647_4_fu_660_p1);
    sensitive << ( IQ_data_V_data_V_TDATA );

    SC_METHOD(thread_trunc_ln647_5_fu_638_p1);
    sensitive << ( IQ_data_V_data_V_TDATA );

    SC_METHOD(thread_trunc_ln647_6_fu_594_p1);
    sensitive << ( IQ_data_V_data_V_TDATA );

    SC_METHOD(thread_trunc_ln647_fu_1022_p1);
    sensitive << ( ecpri_header_payload );

    SC_METHOD(thread_zext_ln209_fu_1098_p1);
    sensitive << ( tmp_numPrbu_V_load_n_reg_1198 );

    SC_METHOD(thread_zext_ln255_fu_622_p1);
    sensitive << ( ap_phi_mux_storemerge2747_phi_fu_336_p6 );

    SC_METHOD(thread_ap_NS_iter0_fsm);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( application_header_V_TVALID );
    sensitive << ( section_header_V_TVALID );
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_NS_iter1_fsm);
    sensitive << ( Ethernet_header_V_TVALID );
    sensitive << ( eCPRI_header_V_TVALID );
    sensitive << ( application_header_V_TVALID );
    sensitive << ( section_header_V_TVALID );
    sensitive << ( IQ_data_V_data_V_TVALID );
    sensitive << ( oran_ctrl_state );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_block_state2_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    oran_ctrl_state = "0000";
    PRB_fragmentation = "00000000000000000000000000000000";
    PRB_count_V = "000000000000";
    ecpri_header_payload = "0000000000000000";
    ecpri_header_pcid1_V = "0000000000000000";
    ecpri_header_seqid_V = "0000000000000000";
    count_value_V = "0000000000";
    ap_CS_iter0_fsm = "0";
    ap_CS_iter1_fsm = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "uplane_packetiser_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, Ethernet_header_V_TDATA, "(port)Ethernet_header_V_TDATA");
    sc_trace(mVcdFile, Ethernet_header_V_TVALID, "(port)Ethernet_header_V_TVALID");
    sc_trace(mVcdFile, Ethernet_header_V_TREADY, "(port)Ethernet_header_V_TREADY");
    sc_trace(mVcdFile, eCPRI_header_V_TDATA, "(port)eCPRI_header_V_TDATA");
    sc_trace(mVcdFile, eCPRI_header_V_TVALID, "(port)eCPRI_header_V_TVALID");
    sc_trace(mVcdFile, eCPRI_header_V_TREADY, "(port)eCPRI_header_V_TREADY");
    sc_trace(mVcdFile, application_header_V_TDATA, "(port)application_header_V_TDATA");
    sc_trace(mVcdFile, application_header_V_TVALID, "(port)application_header_V_TVALID");
    sc_trace(mVcdFile, application_header_V_TREADY, "(port)application_header_V_TREADY");
    sc_trace(mVcdFile, section_header_V_TDATA, "(port)section_header_V_TDATA");
    sc_trace(mVcdFile, section_header_V_TVALID, "(port)section_header_V_TVALID");
    sc_trace(mVcdFile, section_header_V_TREADY, "(port)section_header_V_TREADY");
    sc_trace(mVcdFile, IQ_data_V_data_V_TDATA, "(port)IQ_data_V_data_V_TDATA");
    sc_trace(mVcdFile, IQ_data_V_data_V_TVALID, "(port)IQ_data_V_data_V_TVALID");
    sc_trace(mVcdFile, IQ_data_V_data_V_TREADY, "(port)IQ_data_V_data_V_TREADY");
    sc_trace(mVcdFile, eth_data_TDATA, "(port)eth_data_TDATA");
    sc_trace(mVcdFile, eth_data_TVALID, "(port)eth_data_TVALID");
    sc_trace(mVcdFile, eth_data_TREADY, "(port)eth_data_TREADY");
    sc_trace(mVcdFile, eth_data_TKEEP, "(port)eth_data_TKEEP");
    sc_trace(mVcdFile, eth_data_TLAST, "(port)eth_data_TLAST");
    sc_trace(mVcdFile, state_out, "(port)state_out");
    sc_trace(mVcdFile, symbol_number_V, "(port)symbol_number_V");
    sc_trace(mVcdFile, Total_PRB_count_V, "(port)Total_PRB_count_V");
    sc_trace(mVcdFile, symbol_id_check_V, "(port)symbol_id_check_V");
    sc_trace(mVcdFile, symbol_id_check_V_ap_vld, "(port)symbol_id_check_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, oran_ctrl_state, "oran_ctrl_state");
    sc_trace(mVcdFile, PRB_fragmentation, "PRB_fragmentation");
    sc_trace(mVcdFile, PRB_count_V, "PRB_count_V");
    sc_trace(mVcdFile, ecpri_header_payload, "ecpri_header_payload");
    sc_trace(mVcdFile, ecpri_header_pcid1_V, "ecpri_header_pcid1_V");
    sc_trace(mVcdFile, ecpri_header_seqid_V, "ecpri_header_seqid_V");
    sc_trace(mVcdFile, count_value_V, "count_value_V");
    sc_trace(mVcdFile, Ethernet_header_V_TDATA_blk_n, "Ethernet_header_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_iter0_fsm, "ap_CS_iter0_fsm");
    sc_trace(mVcdFile, ap_CS_iter1_fsm, "ap_CS_iter1_fsm");
    sc_trace(mVcdFile, oran_ctrl_state_load_load_fu_586_p1, "oran_ctrl_state_load_load_fu_586_p1");
    sc_trace(mVcdFile, eCPRI_header_V_TDATA_blk_n, "eCPRI_header_V_TDATA_blk_n");
    sc_trace(mVcdFile, application_header_V_TDATA_blk_n, "application_header_V_TDATA_blk_n");
    sc_trace(mVcdFile, section_header_V_TDATA_blk_n, "section_header_V_TDATA_blk_n");
    sc_trace(mVcdFile, IQ_data_V_data_V_TDATA_blk_n, "IQ_data_V_data_V_TDATA_blk_n");
    sc_trace(mVcdFile, eth_data_TDATA_blk_n, "eth_data_TDATA_blk_n");
    sc_trace(mVcdFile, oran_ctrl_state_load_reg_1134, "oran_ctrl_state_load_reg_1134");
    sc_trace(mVcdFile, oran_ctrl_state_load_reg_1134_pp0_iter0_reg, "oran_ctrl_state_load_reg_1134_pp0_iter0_reg");
    sc_trace(mVcdFile, reg_526, "reg_526");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, reg_530, "reg_530");
    sc_trace(mVcdFile, reg_534, "reg_534");
    sc_trace(mVcdFile, reg_538, "reg_538");
    sc_trace(mVcdFile, reg_542, "reg_542");
    sc_trace(mVcdFile, reg_546, "reg_546");
    sc_trace(mVcdFile, reg_550, "reg_550");
    sc_trace(mVcdFile, reg_554, "reg_554");
    sc_trace(mVcdFile, reg_558, "reg_558");
    sc_trace(mVcdFile, reg_562, "reg_562");
    sc_trace(mVcdFile, reg_566, "reg_566");
    sc_trace(mVcdFile, reg_570, "reg_570");
    sc_trace(mVcdFile, reg_574, "reg_574");
    sc_trace(mVcdFile, reg_578, "reg_578");
    sc_trace(mVcdFile, reg_582, "reg_582");
    sc_trace(mVcdFile, trunc_ln647_6_fu_594_p1, "trunc_ln647_6_fu_594_p1");
    sc_trace(mVcdFile, trunc_ln647_6_reg_1139, "trunc_ln647_6_reg_1139");
    sc_trace(mVcdFile, icmp_ln251_fu_610_p2, "icmp_ln251_fu_610_p2");
    sc_trace(mVcdFile, icmp_ln251_reg_1144, "icmp_ln251_reg_1144");
    sc_trace(mVcdFile, icmp_ln251_reg_1144_pp0_iter0_reg, "icmp_ln251_reg_1144_pp0_iter0_reg");
    sc_trace(mVcdFile, icmp_ln879_fu_616_p2, "icmp_ln879_fu_616_p2");
    sc_trace(mVcdFile, icmp_ln879_reg_1148, "icmp_ln879_reg_1148");
    sc_trace(mVcdFile, icmp_ln879_reg_1148_pp0_iter0_reg, "icmp_ln879_reg_1148_pp0_iter0_reg");
    sc_trace(mVcdFile, trunc_ln647_5_fu_638_p1, "trunc_ln647_5_fu_638_p1");
    sc_trace(mVcdFile, trunc_ln647_5_reg_1152, "trunc_ln647_5_reg_1152");
    sc_trace(mVcdFile, trunc_ln647_4_fu_660_p1, "trunc_ln647_4_fu_660_p1");
    sc_trace(mVcdFile, trunc_ln647_4_reg_1157, "trunc_ln647_4_reg_1157");
    sc_trace(mVcdFile, tmp_payloadVersion_V_reg_1162, "tmp_payloadVersion_V_reg_1162");
    sc_trace(mVcdFile, tmp_filterIndex_V_lo_reg_1167, "tmp_filterIndex_V_lo_reg_1167");
    sc_trace(mVcdFile, tmp_frameId_V_load_n_reg_1172, "tmp_frameId_V_load_n_reg_1172");
    sc_trace(mVcdFile, tmp_subframeId_V_loa_reg_1177, "tmp_subframeId_V_loa_reg_1177");
    sc_trace(mVcdFile, tmp_startsymbolId_V_s_reg_1182, "tmp_startsymbolId_V_s_reg_1182");
    sc_trace(mVcdFile, p_Result_4_reg_1188, "p_Result_4_reg_1188");
    sc_trace(mVcdFile, p_Result_5_reg_1193, "p_Result_5_reg_1193");
    sc_trace(mVcdFile, tmp_numPrbu_V_load_n_reg_1198, "tmp_numPrbu_V_load_n_reg_1198");
    sc_trace(mVcdFile, p_Result_7_reg_1203, "p_Result_7_reg_1203");
    sc_trace(mVcdFile, p_Result_9_reg_1208, "p_Result_9_reg_1208");
    sc_trace(mVcdFile, trunc_ln647_3_fu_770_p1, "trunc_ln647_3_fu_770_p1");
    sc_trace(mVcdFile, trunc_ln647_3_reg_1213, "trunc_ln647_3_reg_1213");
    sc_trace(mVcdFile, p_Result_1_reg_1218, "p_Result_1_reg_1218");
    sc_trace(mVcdFile, tmp_5_reg_1223, "tmp_5_reg_1223");
    sc_trace(mVcdFile, tmp_6_fu_794_p4, "tmp_6_fu_794_p4");
    sc_trace(mVcdFile, tmp_6_reg_1228, "tmp_6_reg_1228");
    sc_trace(mVcdFile, trunc_ln_reg_1233, "trunc_ln_reg_1233");
    sc_trace(mVcdFile, tmp_msg_type_V_load_s_reg_1238, "tmp_msg_type_V_load_s_reg_1238");
    sc_trace(mVcdFile, ap_phi_mux_count_value_V_new_0_phi_fu_324_p6, "ap_phi_mux_count_value_V_new_0_phi_fu_324_p6");
    sc_trace(mVcdFile, add_ln214_fu_602_p2, "add_ln214_fu_602_p2");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_count_value_V_new_0_reg_321, "ap_phi_reg_pp0_iter0_count_value_V_new_0_reg_321");
    sc_trace(mVcdFile, ap_phi_mux_storemerge2747_phi_fu_336_p6, "ap_phi_mux_storemerge2747_phi_fu_336_p6");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_storemerge2747_reg_333, "ap_phi_reg_pp0_iter0_storemerge2747_reg_333");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_last_V_reg_347, "ap_phi_reg_pp0_iter0_tmp_last_V_reg_347");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_last_V_reg_347, "ap_phi_reg_pp0_iter1_tmp_last_V_reg_347");
    sc_trace(mVcdFile, zext_ln255_fu_622_p1, "zext_ln255_fu_622_p1");
    sc_trace(mVcdFile, add_ln219_fu_642_p2, "add_ln219_fu_642_p2");
    sc_trace(mVcdFile, add_ln209_fu_1101_p2, "add_ln209_fu_1101_p2");
    sc_trace(mVcdFile, p_Result_56_fu_900_p17, "p_Result_56_fu_900_p17");
    sc_trace(mVcdFile, p_Result_55_fu_936_p17, "p_Result_55_fu_936_p17");
    sc_trace(mVcdFile, p_Result_54_fu_972_p17, "p_Result_54_fu_972_p17");
    sc_trace(mVcdFile, p_Result_53_fu_1062_p21, "p_Result_53_fu_1062_p21");
    sc_trace(mVcdFile, p_Result_s_fu_1121_p5, "p_Result_s_fu_1121_p5");
    sc_trace(mVcdFile, trunc_ln647_2_fu_1058_p1, "trunc_ln647_2_fu_1058_p1");
    sc_trace(mVcdFile, p_Result_2_fu_1048_p4, "p_Result_2_fu_1048_p4");
    sc_trace(mVcdFile, trunc_ln647_1_fu_1040_p1, "trunc_ln647_1_fu_1040_p1");
    sc_trace(mVcdFile, p_Result_s_15_fu_1030_p4, "p_Result_s_15_fu_1030_p4");
    sc_trace(mVcdFile, trunc_ln647_fu_1022_p1, "trunc_ln647_fu_1022_p1");
    sc_trace(mVcdFile, p_Result_6_fu_1012_p4, "p_Result_6_fu_1012_p4");
    sc_trace(mVcdFile, zext_ln209_fu_1098_p1, "zext_ln209_fu_1098_p1");
    sc_trace(mVcdFile, tmp_4_fu_1114_p3, "tmp_4_fu_1114_p3");
    sc_trace(mVcdFile, ap_NS_iter0_fsm, "ap_NS_iter0_fsm");
    sc_trace(mVcdFile, ap_NS_iter1_fsm, "ap_NS_iter1_fsm");
    sc_trace(mVcdFile, ap_condition_147, "ap_condition_147");
#endif

    }
    mHdltvinHandle.open("uplane_packetiser.hdltvin.dat");
    mHdltvoutHandle.open("uplane_packetiser.hdltvout.dat");
}

uplane_packetiser::~uplane_packetiser() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void uplane_packetiser::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        PRB_count_V = ap_const_lv12_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
             esl_seteq<1,4,4>(ap_const_lv4_3, oran_ctrl_state_load_reg_1134.read()) && 
             esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
            PRB_count_V = add_ln209_fu_1101_p2.read();
        } else if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
                     esl_seteq<1,4,4>(ap_const_lv4_6, oran_ctrl_state_load_reg_1134.read()) && 
                     esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0) && 
                     esl_seteq<1,1,1>(icmp_ln251_reg_1144_pp0_iter0_reg.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(icmp_ln879_reg_1148_pp0_iter0_reg.read(), ap_const_lv1_1)) || 
                    (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
                     esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0) && 
                     esl_seteq<1,4,4>(ap_const_lv4_0, oran_ctrl_state_load_reg_1134_pp0_iter0_reg.read())))) {
            PRB_count_V = ap_const_lv12_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        PRB_fragmentation = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
             esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
             !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
            PRB_fragmentation = add_ln219_fu_642_p2.read();
        } else if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                     esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
                     !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
                     esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_1)) || 
                    (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                     esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
                     !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
                     esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(icmp_ln879_fu_616_p2.read(), ap_const_lv1_1)) || 
                    (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                     !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
                     esl_seteq<1,4,4>(ap_const_lv4_0, oran_ctrl_state_load_load_fu_586_p1.read())))) {
            PRB_fragmentation = ap_const_lv32_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter0_fsm = ap_ST_iter0_fsm_state1;
    } else {
        ap_CS_iter0_fsm = ap_NS_iter0_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter1_fsm = ap_ST_iter1_fsm_state0;
    } else {
        ap_CS_iter1_fsm = ap_NS_iter1_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
         !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
         esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(icmp_ln879_fu_616_p2.read(), ap_const_lv1_0))) {
        ap_phi_reg_pp0_iter1_tmp_last_V_reg_347 = ap_const_lv1_0;
    } else if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
                 !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
                 esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
                 !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && 
                 esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln879_fu_616_p2.read(), ap_const_lv1_1)))) {
        ap_phi_reg_pp0_iter1_tmp_last_V_reg_347 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        ap_phi_reg_pp0_iter1_tmp_last_V_reg_347 = ap_phi_reg_pp0_iter0_tmp_last_V_reg_347.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        count_value_V = ap_const_lv10_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
             esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
             !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
            count_value_V = ap_phi_mux_count_value_V_new_0_phi_fu_324_p6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ecpri_header_payload = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
             esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
             !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
            ecpri_header_payload = eCPRI_header_V_TDATA.read().range(31, 16);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ecpri_header_pcid1_V = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
             esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
             !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
            ecpri_header_pcid1_V = eCPRI_header_V_TDATA.read().range(47, 32);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ecpri_header_seqid_V = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
             esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
             !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
            ecpri_header_seqid_V = eCPRI_header_V_TDATA.read().range(63, 48);
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        oran_ctrl_state = ap_const_lv4_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_147.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,4,4>(ap_const_lv4_0, oran_ctrl_state_load_load_fu_586_p1.read())) {
                oran_ctrl_state = ap_const_lv4_1;
            } else if (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1)) {
                oran_ctrl_state = ap_const_lv4_2;
            } else if (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2)) {
                oran_ctrl_state = ap_const_lv4_3;
            } else if (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3)) {
                oran_ctrl_state = ap_const_lv4_4;
            } else if (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4)) {
                oran_ctrl_state = ap_const_lv4_5;
            } else if (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5)) {
                oran_ctrl_state = ap_const_lv4_6;
            } else if (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6)) {
                oran_ctrl_state = zext_ln255_fu_622_p1.read();
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        icmp_ln251_reg_1144 = icmp_ln251_fu_610_p2.read();
        trunc_ln647_6_reg_1139 = trunc_ln647_6_fu_594_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) && esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_0))) {
        icmp_ln879_reg_1148 = icmp_ln879_fu_616_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        oran_ctrl_state_load_reg_1134 = oran_ctrl_state.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        p_Result_1_reg_1218 = section_header_V_TDATA.read().range(21, 14);
        p_Result_4_reg_1188 = application_header_V_TDATA.read().range(25, 22);
        p_Result_5_reg_1193 = application_header_V_TDATA.read().range(21, 20);
        p_Result_7_reg_1203 = section_header_V_TDATA.read().range(11, 4);
        p_Result_9_reg_1208 = section_header_V_TDATA.read().range(23, 22);
        tmp_5_reg_1223 = section_header_V_TDATA.read().range(47, 24);
        tmp_6_reg_1228 = tmp_6_fu_794_p4.read();
        tmp_filterIndex_V_lo_reg_1167 = application_header_V_TDATA.read().range(7, 4);
        tmp_frameId_V_load_n_reg_1172 = application_header_V_TDATA.read().range(15, 8);
        tmp_numPrbu_V_load_n_reg_1198 = section_header_V_TDATA.read().range(31, 24);
        tmp_payloadVersion_V_reg_1162 = application_header_V_TDATA.read().range(3, 1);
        tmp_startsymbolId_V_s_reg_1182 = application_header_V_TDATA.read().range(31, 26);
        tmp_subframeId_V_loa_reg_1177 = application_header_V_TDATA.read().range(19, 16);
        trunc_ln647_3_reg_1213 = trunc_ln647_3_fu_770_p1.read();
        trunc_ln_reg_1233 = application_header_V_TDATA.read().range(29, 26);
    }
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
  esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
  esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
  esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))))) {
        reg_526 = IQ_data_V_data_V_TDATA.read().range(127, 120);
        reg_530 = IQ_data_V_data_V_TDATA.read().range(119, 112);
        reg_534 = IQ_data_V_data_V_TDATA.read().range(111, 104);
        reg_538 = IQ_data_V_data_V_TDATA.read().range(103, 96);
        reg_542 = IQ_data_V_data_V_TDATA.read().range(95, 88);
        reg_546 = IQ_data_V_data_V_TDATA.read().range(87, 80);
        reg_550 = IQ_data_V_data_V_TDATA.read().range(79, 72);
        reg_554 = IQ_data_V_data_V_TDATA.read().range(71, 64);
        reg_558 = IQ_data_V_data_V_TDATA.read().range(63, 56);
        reg_562 = IQ_data_V_data_V_TDATA.read().range(55, 48);
        reg_566 = IQ_data_V_data_V_TDATA.read().range(47, 40);
        reg_570 = IQ_data_V_data_V_TDATA.read().range(39, 32);
        reg_574 = IQ_data_V_data_V_TDATA.read().range(31, 24);
        reg_578 = IQ_data_V_data_V_TDATA.read().range(23, 16);
        reg_582 = IQ_data_V_data_V_TDATA.read().range(15, 8);
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        tmp_msg_type_V_load_s_reg_1238 = eCPRI_header_V_TDATA.read().range(15, 8);
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        trunc_ln647_4_reg_1157 = trunc_ln647_4_fu_660_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        trunc_ln647_5_reg_1152 = trunc_ln647_5_fu_638_p1.read();
    }
}

void uplane_packetiser::thread_Ethernet_header_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1))) {
        Ethernet_header_V_TDATA_blk_n = Ethernet_header_V_TVALID.read();
    } else {
        Ethernet_header_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void uplane_packetiser::thread_Ethernet_header_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
         !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        Ethernet_header_V_TREADY = ap_const_logic_1;
    } else {
        Ethernet_header_V_TREADY = ap_const_logic_0;
    }
}

void uplane_packetiser::thread_IQ_data_V_data_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6)))) {
        IQ_data_V_data_V_TDATA_blk_n = IQ_data_V_data_V_TVALID.read();
    } else {
        IQ_data_V_data_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void uplane_packetiser::thread_IQ_data_V_data_V_TREADY() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
          !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
          !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
          !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))))) {
        IQ_data_V_data_V_TREADY = ap_const_logic_1;
    } else {
        IQ_data_V_data_V_TREADY = ap_const_logic_0;
    }
}

void uplane_packetiser::thread_Total_PRB_count_V() {
    Total_PRB_count_V = (!zext_ln209_fu_1098_p1.read().is_01() || !PRB_count_V.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln209_fu_1098_p1.read()) + sc_biguint<12>(PRB_count_V.read()));
}

void uplane_packetiser::thread_add_ln209_fu_1101_p2() {
    add_ln209_fu_1101_p2 = (!zext_ln209_fu_1098_p1.read().is_01() || !PRB_count_V.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln209_fu_1098_p1.read()) + sc_biguint<12>(PRB_count_V.read()));
}

void uplane_packetiser::thread_add_ln214_fu_602_p2() {
    add_ln214_fu_602_p2 = (!ap_const_lv10_1.is_01() || !count_value_V.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(count_value_V.read()));
}

void uplane_packetiser::thread_add_ln219_fu_642_p2() {
    add_ln219_fu_642_p2 = (!ap_const_lv32_1.is_01() || !PRB_fragmentation.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(PRB_fragmentation.read()));
}

void uplane_packetiser::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = ((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())));
}

void uplane_packetiser::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,4,4>(ap_const_lv4_6, oran_ctrl_state_load_reg_1134.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_TREADY.read())) || (esl_seteq<1,4,4>(ap_const_lv4_5, oran_ctrl_state_load_reg_1134.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_TREADY.read())) || (esl_seteq<1,4,4>(ap_const_lv4_4, oran_ctrl_state_load_reg_1134.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_TREADY.read())) || (esl_seteq<1,4,4>(ap_const_lv4_3, oran_ctrl_state_load_reg_1134.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_TREADY.read())) || (esl_seteq<1,4,4>(ap_const_lv4_2, oran_ctrl_state_load_reg_1134.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_TREADY.read())) || (esl_seteq<1,4,4>(ap_const_lv4_1, oran_ctrl_state_load_reg_1134.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_TREADY.read())));
}

void uplane_packetiser::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void uplane_packetiser::thread_ap_condition_147() {
    ap_condition_147 = (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))));
}

void uplane_packetiser::thread_ap_phi_mux_count_value_V_new_0_phi_fu_324_p6() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
         esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(icmp_ln879_fu_616_p2.read(), ap_const_lv1_1))) {
        ap_phi_mux_count_value_V_new_0_phi_fu_324_p6 = ap_const_lv10_0;
    } else if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
                 esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
                 esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln879_fu_616_p2.read(), ap_const_lv1_0)))) {
        ap_phi_mux_count_value_V_new_0_phi_fu_324_p6 = add_ln214_fu_602_p2.read();
    } else {
        ap_phi_mux_count_value_V_new_0_phi_fu_324_p6 = ap_phi_reg_pp0_iter0_count_value_V_new_0_reg_321.read();
    }
}

void uplane_packetiser::thread_ap_phi_mux_storemerge2747_phi_fu_336_p6() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
         esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(icmp_ln879_fu_616_p2.read(), ap_const_lv1_0))) {
        ap_phi_mux_storemerge2747_phi_fu_336_p6 = ap_const_lv3_4;
    } else if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
                 esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
                 esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
                 esl_seteq<1,1,1>(icmp_ln251_fu_610_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln879_fu_616_p2.read(), ap_const_lv1_1)))) {
        ap_phi_mux_storemerge2747_phi_fu_336_p6 = ap_const_lv3_1;
    } else {
        ap_phi_mux_storemerge2747_phi_fu_336_p6 = ap_phi_reg_pp0_iter0_storemerge2747_reg_333.read();
    }
}

void uplane_packetiser::thread_ap_phi_reg_pp0_iter0_count_value_V_new_0_reg_321() {
    ap_phi_reg_pp0_iter0_count_value_V_new_0_reg_321 =  (sc_lv<10>) ("XXXXXXXXXX");
}

void uplane_packetiser::thread_ap_phi_reg_pp0_iter0_storemerge2747_reg_333() {
    ap_phi_reg_pp0_iter0_storemerge2747_reg_333 =  (sc_lv<3>) ("XXX");
}

void uplane_packetiser::thread_ap_phi_reg_pp0_iter0_tmp_last_V_reg_347() {
    ap_phi_reg_pp0_iter0_tmp_last_V_reg_347 =  (sc_lv<1>) ("X");
}

void uplane_packetiser::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void uplane_packetiser::thread_application_header_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3))) {
        application_header_V_TDATA_blk_n = application_header_V_TVALID.read();
    } else {
        application_header_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void uplane_packetiser::thread_application_header_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
         !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        application_header_V_TREADY = ap_const_logic_1;
    } else {
        application_header_V_TREADY = ap_const_logic_0;
    }
}

void uplane_packetiser::thread_eCPRI_header_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2))) {
        eCPRI_header_V_TDATA_blk_n = eCPRI_header_V_TVALID.read();
    } else {
        eCPRI_header_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void uplane_packetiser::thread_eCPRI_header_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
         !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        eCPRI_header_V_TREADY = ap_const_logic_1;
    } else {
        eCPRI_header_V_TREADY = ap_const_logic_0;
    }
}

void uplane_packetiser::thread_eth_data_TDATA() {
    if (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read())) {
        if (esl_seteq<1,4,4>(ap_const_lv4_1, oran_ctrl_state_load_reg_1134.read())) {
            eth_data_TDATA = ap_const_lv128_lc_1;
        } else if (esl_seteq<1,4,4>(ap_const_lv4_2, oran_ctrl_state_load_reg_1134.read())) {
            eth_data_TDATA = p_Result_s_fu_1121_p5.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_3, oran_ctrl_state_load_reg_1134.read())) {
            eth_data_TDATA = p_Result_53_fu_1062_p21.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_4, oran_ctrl_state_load_reg_1134.read())) {
            eth_data_TDATA = p_Result_54_fu_972_p17.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_5, oran_ctrl_state_load_reg_1134.read())) {
            eth_data_TDATA = p_Result_55_fu_936_p17.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_6, oran_ctrl_state_load_reg_1134.read())) {
            eth_data_TDATA = p_Result_56_fu_900_p17.read();
        } else {
            eth_data_TDATA = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        eth_data_TDATA = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void uplane_packetiser::thread_eth_data_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_1, oran_ctrl_state_load_reg_1134.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_2, oran_ctrl_state_load_reg_1134.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_3, oran_ctrl_state_load_reg_1134.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_4, oran_ctrl_state_load_reg_1134.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_5, oran_ctrl_state_load_reg_1134.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_6, oran_ctrl_state_load_reg_1134.read())))) {
        eth_data_TDATA_blk_n = eth_data_TREADY.read();
    } else {
        eth_data_TDATA_blk_n = ap_const_logic_1;
    }
}

void uplane_packetiser::thread_eth_data_TKEEP() {
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_2, oran_ctrl_state_load_reg_1134.read()))) {
        eth_data_TKEEP = ap_const_lv16_F;
    } else if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
                 esl_seteq<1,4,4>(ap_const_lv4_1, oran_ctrl_state_load_reg_1134.read())) || 
                (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
                 esl_seteq<1,4,4>(ap_const_lv4_3, oran_ctrl_state_load_reg_1134.read())) || 
                (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
                 esl_seteq<1,4,4>(ap_const_lv4_4, oran_ctrl_state_load_reg_1134.read())) || 
                (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
                 esl_seteq<1,4,4>(ap_const_lv4_5, oran_ctrl_state_load_reg_1134.read())) || 
                (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
                 esl_seteq<1,4,4>(ap_const_lv4_6, oran_ctrl_state_load_reg_1134.read())))) {
        eth_data_TKEEP = ap_const_lv16_FFFF;
    } else {
        eth_data_TKEEP =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void uplane_packetiser::thread_eth_data_TLAST() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_1, oran_ctrl_state_load_reg_1134.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_2, oran_ctrl_state_load_reg_1134.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_3, oran_ctrl_state_load_reg_1134.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_4, oran_ctrl_state_load_reg_1134.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_5, oran_ctrl_state_load_reg_1134.read())))) {
        eth_data_TLAST = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
                esl_seteq<1,4,4>(ap_const_lv4_6, oran_ctrl_state_load_reg_1134.read()))) {
        eth_data_TLAST = ap_phi_reg_pp0_iter1_tmp_last_V_reg_347.read();
    } else {
        eth_data_TLAST =  (sc_lv<1>) ("X");
    }
}

void uplane_packetiser::thread_eth_data_TVALID() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_3, oran_ctrl_state_load_reg_1134.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_6, oran_ctrl_state_load_reg_1134.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_5, oran_ctrl_state_load_reg_1134.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_4, oran_ctrl_state_load_reg_1134.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_2, oran_ctrl_state_load_reg_1134.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_1, oran_ctrl_state_load_reg_1134.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0)))) {
        eth_data_TVALID = ap_const_logic_1;
    } else {
        eth_data_TVALID = ap_const_logic_0;
    }
}

void uplane_packetiser::thread_icmp_ln251_fu_610_p2() {
    icmp_ln251_fu_610_p2 = (!PRB_fragmentation.read().is_01() || !ap_const_lv32_1E.is_01())? sc_lv<1>(): sc_lv<1>(PRB_fragmentation.read() == ap_const_lv32_1E);
}

void uplane_packetiser::thread_icmp_ln251_reg_1144_pp0_iter0_reg() {
    icmp_ln251_reg_1144_pp0_iter0_reg = icmp_ln251_reg_1144.read();
}

void uplane_packetiser::thread_icmp_ln879_fu_616_p2() {
    icmp_ln879_fu_616_p2 = (!add_ln214_fu_602_p2.read().is_01() || !ap_const_lv10_111.is_01())? sc_lv<1>(): sc_lv<1>(add_ln214_fu_602_p2.read() == ap_const_lv10_111);
}

void uplane_packetiser::thread_icmp_ln879_reg_1148_pp0_iter0_reg() {
    icmp_ln879_reg_1148_pp0_iter0_reg = icmp_ln879_reg_1148.read();
}

void uplane_packetiser::thread_oran_ctrl_state_load_load_fu_586_p1() {
    oran_ctrl_state_load_load_fu_586_p1 = oran_ctrl_state.read();
}

void uplane_packetiser::thread_oran_ctrl_state_load_reg_1134_pp0_iter0_reg() {
    oran_ctrl_state_load_reg_1134_pp0_iter0_reg = oran_ctrl_state_load_reg_1134.read();
}

void uplane_packetiser::thread_p_Result_2_fu_1048_p4() {
    p_Result_2_fu_1048_p4 = ecpri_header_seqid_V.read().range(15, 8);
}

void uplane_packetiser::thread_p_Result_53_fu_1062_p21() {
    p_Result_53_fu_1062_p21 = esl_concat<120,8>(esl_concat<112,8>(esl_concat<104,8>(esl_concat<96,8>(esl_concat<88,8>(esl_concat<80,8>(esl_concat<76,4>(esl_concat<73,3>(esl_concat<72,1>(esl_concat<64,8>(esl_concat<60,4>(esl_concat<56,4>(esl_concat<50,6>(esl_concat<48,2>(esl_concat<40,8>(esl_concat<38,2>(esl_concat<36,2>(esl_concat<32,4>(esl_concat<24,8>(tmp_5_reg_1223.read(), p_Result_1_reg_1218.read()), trunc_ln647_3_reg_1213.read()), tmp_6_reg_1228.read()), p_Result_9_reg_1208.read()), p_Result_7_reg_1203.read()), p_Result_5_reg_1193.read()), tmp_startsymbolId_V_s_reg_1182.read()), tmp_subframeId_V_loa_reg_1177.read()), p_Result_4_reg_1188.read()), tmp_frameId_V_load_n_reg_1172.read()), ap_const_lv1_0), tmp_payloadVersion_V_reg_1162.read()), tmp_filterIndex_V_lo_reg_1167.read()), trunc_ln647_2_fu_1058_p1.read()), p_Result_2_fu_1048_p4.read()), trunc_ln647_1_fu_1040_p1.read()), p_Result_s_15_fu_1030_p4.read()), trunc_ln647_fu_1022_p1.read()), p_Result_6_fu_1012_p4.read());
}

void uplane_packetiser::thread_p_Result_54_fu_972_p17() {
    p_Result_54_fu_972_p17 = esl_concat<120,8>(esl_concat<112,8>(esl_concat<104,8>(esl_concat<96,8>(esl_concat<88,8>(esl_concat<80,8>(esl_concat<72,8>(esl_concat<64,8>(esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(trunc_ln647_4_reg_1157.read(), reg_582.read()), reg_578.read()), reg_574.read()), reg_570.read()), reg_566.read()), reg_562.read()), reg_558.read()), reg_554.read()), reg_550.read()), reg_546.read()), reg_542.read()), reg_538.read()), reg_534.read()), reg_530.read()), reg_526.read());
}

void uplane_packetiser::thread_p_Result_55_fu_936_p17() {
    p_Result_55_fu_936_p17 = esl_concat<120,8>(esl_concat<112,8>(esl_concat<104,8>(esl_concat<96,8>(esl_concat<88,8>(esl_concat<80,8>(esl_concat<72,8>(esl_concat<64,8>(esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(trunc_ln647_5_reg_1152.read(), reg_582.read()), reg_578.read()), reg_574.read()), reg_570.read()), reg_566.read()), reg_562.read()), reg_558.read()), reg_554.read()), reg_550.read()), reg_546.read()), reg_542.read()), reg_538.read()), reg_534.read()), reg_530.read()), reg_526.read());
}

void uplane_packetiser::thread_p_Result_56_fu_900_p17() {
    p_Result_56_fu_900_p17 = esl_concat<120,8>(esl_concat<112,8>(esl_concat<104,8>(esl_concat<96,8>(esl_concat<88,8>(esl_concat<80,8>(esl_concat<72,8>(esl_concat<64,8>(esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(trunc_ln647_6_reg_1139.read(), reg_582.read()), reg_578.read()), reg_574.read()), reg_570.read()), reg_566.read()), reg_562.read()), reg_558.read()), reg_554.read()), reg_550.read()), reg_546.read()), reg_542.read()), reg_538.read()), reg_534.read()), reg_530.read()), reg_526.read());
}

void uplane_packetiser::thread_p_Result_6_fu_1012_p4() {
    p_Result_6_fu_1012_p4 = ecpri_header_payload.read().range(15, 8);
}

void uplane_packetiser::thread_p_Result_s_15_fu_1030_p4() {
    p_Result_s_15_fu_1030_p4 = ecpri_header_pcid1_V.read().range(15, 8);
}

void uplane_packetiser::thread_p_Result_s_fu_1121_p5() {
    p_Result_s_fu_1121_p5 = esl_partset<128,128,32,32,32>(ap_const_lv128_lc_2, tmp_4_fu_1114_p3.read(), ap_const_lv32_0, ap_const_lv32_1F);
}

void uplane_packetiser::thread_section_header_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3))) {
        section_header_V_TDATA_blk_n = section_header_V_TVALID.read();
    } else {
        section_header_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void uplane_packetiser::thread_section_header_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
         esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
         !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
        section_header_V_TREADY = ap_const_logic_1;
    } else {
        section_header_V_TREADY = ap_const_logic_0;
    }
}

void uplane_packetiser::thread_state_out() {
    state_out = esl_zext<8,4>(oran_ctrl_state_load_reg_1134.read());
}

void uplane_packetiser::thread_symbol_id_check_V() {
    symbol_id_check_V = tmp_startsymbolId_V_s_reg_1182.read();
}

void uplane_packetiser::thread_symbol_id_check_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_3, oran_ctrl_state_load_reg_1134.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0))) {
        symbol_id_check_V_ap_vld = ap_const_logic_1;
    } else {
        symbol_id_check_V_ap_vld = ap_const_logic_0;
    }
}

void uplane_packetiser::thread_symbol_number_V() {
    symbol_number_V = trunc_ln_reg_1233.read();
}

void uplane_packetiser::thread_tmp_4_fu_1114_p3() {
    tmp_4_fu_1114_p3 = esl_concat<8,24>(tmp_msg_type_V_load_s_reg_1238.read(), ap_const_lv24_10FEAE);
}

void uplane_packetiser::thread_tmp_6_fu_794_p4() {
    tmp_6_fu_794_p4 = section_header_V_TDATA.read().range(12, 13);
}

void uplane_packetiser::thread_trunc_ln647_1_fu_1040_p1() {
    trunc_ln647_1_fu_1040_p1 = ecpri_header_pcid1_V.read().range(8-1, 0);
}

void uplane_packetiser::thread_trunc_ln647_2_fu_1058_p1() {
    trunc_ln647_2_fu_1058_p1 = ecpri_header_seqid_V.read().range(8-1, 0);
}

void uplane_packetiser::thread_trunc_ln647_3_fu_770_p1() {
    trunc_ln647_3_fu_770_p1 = section_header_V_TDATA.read().range(4-1, 0);
}

void uplane_packetiser::thread_trunc_ln647_4_fu_660_p1() {
    trunc_ln647_4_fu_660_p1 = IQ_data_V_data_V_TDATA.read().range(8-1, 0);
}

void uplane_packetiser::thread_trunc_ln647_5_fu_638_p1() {
    trunc_ln647_5_fu_638_p1 = IQ_data_V_data_V_TDATA.read().range(8-1, 0);
}

void uplane_packetiser::thread_trunc_ln647_6_fu_594_p1() {
    trunc_ln647_6_fu_594_p1 = IQ_data_V_data_V_TDATA.read().range(8-1, 0);
}

void uplane_packetiser::thread_trunc_ln647_fu_1022_p1() {
    trunc_ln647_fu_1022_p1 = ecpri_header_payload.read().range(8-1, 0);
}

void uplane_packetiser::thread_zext_ln209_fu_1098_p1() {
    zext_ln209_fu_1098_p1 = esl_zext<12,8>(tmp_numPrbu_V_load_n_reg_1198.read());
}

void uplane_packetiser::thread_zext_ln255_fu_622_p1() {
    zext_ln255_fu_622_p1 = esl_zext<4,3>(ap_phi_mux_storemerge2747_phi_fu_336_p6.read());
}

void uplane_packetiser::thread_ap_NS_iter0_fsm() {
    switch (ap_CS_iter0_fsm.read().to_uint64()) {
        case 0 : 
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
break;
        default : 
            ap_NS_iter0_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void uplane_packetiser::thread_ap_NS_iter1_fsm() {
    switch (ap_CS_iter1_fsm.read().to_uint64()) {
        case 0 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0) && !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read()))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0) && (!esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) || 
  (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
   ((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
     esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || 
    (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
     esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || 
    (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
     esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || 
    (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
     esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || 
    (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
     esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || 
    (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
     esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || 
    (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
     esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read()))))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, IQ_data_V_data_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, application_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, section_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eCPRI_header_V_TVALID.read())) || (esl_seteq<1,4,4>(oran_ctrl_state.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, Ethernet_header_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter1_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void uplane_packetiser::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Ethernet_header_V_TDATA\" :  \"" << Ethernet_header_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Ethernet_header_V_TVALID\" :  \"" << Ethernet_header_V_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"Ethernet_header_V_TREADY\" :  \"" << Ethernet_header_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eCPRI_header_V_TDATA\" :  \"" << eCPRI_header_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eCPRI_header_V_TVALID\" :  \"" << eCPRI_header_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"eCPRI_header_V_TREADY\" :  \"" << eCPRI_header_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"application_header_V_TDATA\" :  \"" << application_header_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"application_header_V_TVALID\" :  \"" << application_header_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"application_header_V_TREADY\" :  \"" << application_header_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"section_header_V_TDATA\" :  \"" << section_header_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"section_header_V_TVALID\" :  \"" << section_header_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"section_header_V_TREADY\" :  \"" << section_header_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"IQ_data_V_data_V_TDATA\" :  \"" << IQ_data_V_data_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"IQ_data_V_data_V_TVALID\" :  \"" << IQ_data_V_data_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"IQ_data_V_data_V_TREADY\" :  \"" << IQ_data_V_data_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"eth_data_TDATA\" :  \"" << eth_data_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"eth_data_TVALID\" :  \"" << eth_data_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eth_data_TREADY\" :  \"" << eth_data_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"eth_data_TKEEP\" :  \"" << eth_data_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"eth_data_TLAST\" :  \"" << eth_data_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"state_out\" :  \"" << state_out.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"symbol_number_V\" :  \"" << symbol_number_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Total_PRB_count_V\" :  \"" << Total_PRB_count_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"symbol_id_check_V\" :  \"" << symbol_id_check_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"symbol_id_check_V_ap_vld\" :  \"" << symbol_id_check_V_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

