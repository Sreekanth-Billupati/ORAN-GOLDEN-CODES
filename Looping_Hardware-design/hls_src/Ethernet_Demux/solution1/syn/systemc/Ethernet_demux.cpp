// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Ethernet_demux.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Ethernet_demux::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Ethernet_demux::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> Ethernet_demux::ap_ST_iter0_fsm_state1 = "0";
const sc_lv<1> Ethernet_demux::ap_ST_iter1_fsm_state2 = "0";
const sc_lv<1> Ethernet_demux::ap_ST_iter2_fsm_state3 = "0";
const sc_lv<1> Ethernet_demux::ap_ST_iter1_fsm_state0 = "1";
const sc_lv<1> Ethernet_demux::ap_ST_iter2_fsm_state0 = "1";
const bool Ethernet_demux::ap_const_boolean_1 = true;
const sc_lv<1> Ethernet_demux::ap_const_lv1_0 = "0";
const sc_lv<1> Ethernet_demux::ap_const_lv1_1 = "1";
const sc_lv<2> Ethernet_demux::ap_const_lv2_0 = "00";
const sc_lv<2> Ethernet_demux::ap_const_lv2_2 = "10";
const sc_lv<2> Ethernet_demux::ap_const_lv2_3 = "11";
const sc_lv<2> Ethernet_demux::ap_const_lv2_1 = "1";
const sc_lv<4> Ethernet_demux::ap_const_lv4_0 = "0000";
const sc_lv<4> Ethernet_demux::ap_const_lv4_4 = "100";
const sc_lv<4> Ethernet_demux::ap_const_lv4_5 = "101";
const sc_lv<4> Ethernet_demux::ap_const_lv4_6 = "110";
const sc_lv<4> Ethernet_demux::ap_const_lv4_7 = "111";
const sc_lv<4> Ethernet_demux::ap_const_lv4_3 = "11";
const sc_lv<16> Ethernet_demux::ap_const_lv16_FFF = "111111111111";
const sc_lv<32> Ethernet_demux::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Ethernet_demux::ap_const_boolean_0 = false;

Ethernet_demux::Ethernet_demux(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( eth_data_rx_V_data_V_0_vld_out );
    sensitive << ( state_V );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( cu_data_out_V_data_V_1_ack_in );
    sensitive << ( sync_data_out_V_data_V_1_ack_in );
    sensitive << ( mgmt_data_out_V_data_V_1_ack_in );
    sensitive << ( rx_tstamp_out_V_V_1_ack_in );
    sensitive << ( state_V_load_reg_319 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( cu_data_out_V_data_V_1_ack_in );
    sensitive << ( sync_data_out_V_data_V_1_ack_in );
    sensitive << ( mgmt_data_out_V_data_V_1_ack_in );
    sensitive << ( rx_tstamp_out_V_V_1_ack_in );
    sensitive << ( state_V_load_reg_319_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );

    SC_METHOD(thread_ap_condition_1148);
    sensitive << ( eth_data_rx_V_data_V_0_vld_out );
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_condition_1234);
    sensitive << ( state_V );
    sensitive << ( state_V_load_load_fu_216_p1 );

    SC_METHOD(thread_ap_condition_1249);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_cu_data_out_TDATA);
    sensitive << ( cu_data_out_V_data_V_1_data_out );

    SC_METHOD(thread_cu_data_out_TDATA_blk_n);
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( state_V_load_reg_319_pp0_iter1_reg );

    SC_METHOD(thread_cu_data_out_TKEEP);
    sensitive << ( cu_data_out_V_keep_V_1_data_out );

    SC_METHOD(thread_cu_data_out_TLAST);
    sensitive << ( cu_data_out_V_last_V_1_data_out );

    SC_METHOD(thread_cu_data_out_TUSER);
    sensitive << ( cu_data_out_V_user_V_1_data_out );

    SC_METHOD(thread_cu_data_out_TVALID);
    sensitive << ( cu_data_out_V_last_V_1_state );

    SC_METHOD(thread_cu_data_out_V_data_V_1_ack_in);
    sensitive << ( cu_data_out_V_data_V_1_state );

    SC_METHOD(thread_cu_data_out_V_data_V_1_ack_out);
    sensitive << ( cu_data_out_TREADY );

    SC_METHOD(thread_cu_data_out_V_data_V_1_data_in);
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( reg_202 );
    sensitive << ( p_Result_s_fu_306_p3 );
    sensitive << ( ap_condition_1249 );

    SC_METHOD(thread_cu_data_out_V_data_V_1_data_out);
    sensitive << ( cu_data_out_V_data_V_1_payload_A );
    sensitive << ( cu_data_out_V_data_V_1_payload_B );
    sensitive << ( cu_data_out_V_data_V_1_sel );

    SC_METHOD(thread_cu_data_out_V_data_V_1_load_A);
    sensitive << ( cu_data_out_V_data_V_1_sel_wr );
    sensitive << ( cu_data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_cu_data_out_V_data_V_1_load_B);
    sensitive << ( cu_data_out_V_data_V_1_sel_wr );
    sensitive << ( cu_data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_cu_data_out_V_data_V_1_sel);
    sensitive << ( cu_data_out_V_data_V_1_sel_rd );

    SC_METHOD(thread_cu_data_out_V_data_V_1_state_cmp_full);
    sensitive << ( cu_data_out_V_data_V_1_state );

    SC_METHOD(thread_cu_data_out_V_data_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_cu_data_out_V_data_V_1_vld_out);
    sensitive << ( cu_data_out_V_data_V_1_state );

    SC_METHOD(thread_cu_data_out_V_keep_V_1_ack_in);
    sensitive << ( cu_data_out_V_keep_V_1_state );

    SC_METHOD(thread_cu_data_out_V_keep_V_1_ack_out);
    sensitive << ( cu_data_out_TREADY );

    SC_METHOD(thread_cu_data_out_V_keep_V_1_data_in);
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( reg_209 );
    sensitive << ( ap_condition_1249 );

    SC_METHOD(thread_cu_data_out_V_keep_V_1_data_out);
    sensitive << ( cu_data_out_V_keep_V_1_payload_A );
    sensitive << ( cu_data_out_V_keep_V_1_payload_B );
    sensitive << ( cu_data_out_V_keep_V_1_sel );

    SC_METHOD(thread_cu_data_out_V_keep_V_1_load_A);
    sensitive << ( cu_data_out_V_keep_V_1_sel_wr );
    sensitive << ( cu_data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_cu_data_out_V_keep_V_1_load_B);
    sensitive << ( cu_data_out_V_keep_V_1_sel_wr );
    sensitive << ( cu_data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_cu_data_out_V_keep_V_1_sel);
    sensitive << ( cu_data_out_V_keep_V_1_sel_rd );

    SC_METHOD(thread_cu_data_out_V_keep_V_1_state_cmp_full);
    sensitive << ( cu_data_out_V_keep_V_1_state );

    SC_METHOD(thread_cu_data_out_V_keep_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_cu_data_out_V_keep_V_1_vld_out);
    sensitive << ( cu_data_out_V_keep_V_1_state );

    SC_METHOD(thread_cu_data_out_V_last_V_1_ack_in);
    sensitive << ( cu_data_out_V_last_V_1_state );

    SC_METHOD(thread_cu_data_out_V_last_V_1_ack_out);
    sensitive << ( cu_data_out_TREADY );

    SC_METHOD(thread_cu_data_out_V_last_V_1_data_in);
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( tmp_last_V_reg_358 );
    sensitive << ( ap_condition_1249 );

    SC_METHOD(thread_cu_data_out_V_last_V_1_data_out);
    sensitive << ( cu_data_out_V_last_V_1_payload_A );
    sensitive << ( cu_data_out_V_last_V_1_payload_B );
    sensitive << ( cu_data_out_V_last_V_1_sel );

    SC_METHOD(thread_cu_data_out_V_last_V_1_load_A);
    sensitive << ( cu_data_out_V_last_V_1_sel_wr );
    sensitive << ( cu_data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_cu_data_out_V_last_V_1_load_B);
    sensitive << ( cu_data_out_V_last_V_1_sel_wr );
    sensitive << ( cu_data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_cu_data_out_V_last_V_1_sel);
    sensitive << ( cu_data_out_V_last_V_1_sel_rd );

    SC_METHOD(thread_cu_data_out_V_last_V_1_state_cmp_full);
    sensitive << ( cu_data_out_V_last_V_1_state );

    SC_METHOD(thread_cu_data_out_V_last_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_cu_data_out_V_last_V_1_vld_out);
    sensitive << ( cu_data_out_V_last_V_1_state );

    SC_METHOD(thread_cu_data_out_V_user_V_1_ack_in);
    sensitive << ( cu_data_out_V_user_V_1_state );

    SC_METHOD(thread_cu_data_out_V_user_V_1_ack_out);
    sensitive << ( cu_data_out_TREADY );

    SC_METHOD(thread_cu_data_out_V_user_V_1_data_in);
    sensitive << ( eth_data_in_user_V );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( tmp_user_V_1_reg_353 );
    sensitive << ( ap_condition_1249 );

    SC_METHOD(thread_cu_data_out_V_user_V_1_data_out);
    sensitive << ( cu_data_out_V_user_V_1_payload_A );
    sensitive << ( cu_data_out_V_user_V_1_payload_B );
    sensitive << ( cu_data_out_V_user_V_1_sel );

    SC_METHOD(thread_cu_data_out_V_user_V_1_load_A);
    sensitive << ( cu_data_out_V_user_V_1_sel_wr );
    sensitive << ( cu_data_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_cu_data_out_V_user_V_1_load_B);
    sensitive << ( cu_data_out_V_user_V_1_sel_wr );
    sensitive << ( cu_data_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_cu_data_out_V_user_V_1_sel);
    sensitive << ( cu_data_out_V_user_V_1_sel_rd );

    SC_METHOD(thread_cu_data_out_V_user_V_1_state_cmp_full);
    sensitive << ( cu_data_out_V_user_V_1_state );

    SC_METHOD(thread_cu_data_out_V_user_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_cu_data_out_V_user_V_1_vld_out);
    sensitive << ( cu_data_out_V_user_V_1_state );

    SC_METHOD(thread_eth_data_rx_TDATA_blk_n);
    sensitive << ( eth_data_rx_V_data_V_0_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_eth_data_rx_TREADY);
    sensitive << ( eth_data_rx_V_last_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_data_V_0_ack_in);
    sensitive << ( eth_data_rx_V_data_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_data_V_0_ack_out);
    sensitive << ( eth_data_rx_V_data_V_0_vld_out );
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_eth_data_rx_V_data_V_0_data_out);
    sensitive << ( eth_data_rx_V_data_V_0_payload_A );
    sensitive << ( eth_data_rx_V_data_V_0_payload_B );
    sensitive << ( eth_data_rx_V_data_V_0_sel );

    SC_METHOD(thread_eth_data_rx_V_data_V_0_load_A);
    sensitive << ( eth_data_rx_V_data_V_0_sel_wr );
    sensitive << ( eth_data_rx_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_eth_data_rx_V_data_V_0_load_B);
    sensitive << ( eth_data_rx_V_data_V_0_sel_wr );
    sensitive << ( eth_data_rx_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_eth_data_rx_V_data_V_0_sel);
    sensitive << ( eth_data_rx_V_data_V_0_sel_rd );

    SC_METHOD(thread_eth_data_rx_V_data_V_0_state_cmp_full);
    sensitive << ( eth_data_rx_V_data_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_data_V_0_vld_in);
    sensitive << ( eth_data_rx_TVALID );

    SC_METHOD(thread_eth_data_rx_V_data_V_0_vld_out);
    sensitive << ( eth_data_rx_V_data_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_keep_V_0_ack_in);
    sensitive << ( eth_data_rx_V_keep_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_keep_V_0_ack_out);
    sensitive << ( eth_data_rx_V_data_V_0_vld_out );
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_eth_data_rx_V_keep_V_0_data_out);
    sensitive << ( eth_data_rx_V_keep_V_0_payload_A );
    sensitive << ( eth_data_rx_V_keep_V_0_payload_B );
    sensitive << ( eth_data_rx_V_keep_V_0_sel );

    SC_METHOD(thread_eth_data_rx_V_keep_V_0_load_A);
    sensitive << ( eth_data_rx_V_keep_V_0_sel_wr );
    sensitive << ( eth_data_rx_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_eth_data_rx_V_keep_V_0_load_B);
    sensitive << ( eth_data_rx_V_keep_V_0_sel_wr );
    sensitive << ( eth_data_rx_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_eth_data_rx_V_keep_V_0_sel);
    sensitive << ( eth_data_rx_V_keep_V_0_sel_rd );

    SC_METHOD(thread_eth_data_rx_V_keep_V_0_state_cmp_full);
    sensitive << ( eth_data_rx_V_keep_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_keep_V_0_vld_in);
    sensitive << ( eth_data_rx_TVALID );

    SC_METHOD(thread_eth_data_rx_V_keep_V_0_vld_out);
    sensitive << ( eth_data_rx_V_keep_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_last_V_0_ack_in);
    sensitive << ( eth_data_rx_V_last_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_last_V_0_ack_out);
    sensitive << ( eth_data_rx_V_data_V_0_vld_out );
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_eth_data_rx_V_last_V_0_data_out);
    sensitive << ( eth_data_rx_V_last_V_0_payload_A );
    sensitive << ( eth_data_rx_V_last_V_0_payload_B );
    sensitive << ( eth_data_rx_V_last_V_0_sel );

    SC_METHOD(thread_eth_data_rx_V_last_V_0_load_A);
    sensitive << ( eth_data_rx_V_last_V_0_sel_wr );
    sensitive << ( eth_data_rx_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_eth_data_rx_V_last_V_0_load_B);
    sensitive << ( eth_data_rx_V_last_V_0_sel_wr );
    sensitive << ( eth_data_rx_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_eth_data_rx_V_last_V_0_sel);
    sensitive << ( eth_data_rx_V_last_V_0_sel_rd );

    SC_METHOD(thread_eth_data_rx_V_last_V_0_state_cmp_full);
    sensitive << ( eth_data_rx_V_last_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_last_V_0_vld_in);
    sensitive << ( eth_data_rx_TVALID );

    SC_METHOD(thread_eth_data_rx_V_last_V_0_vld_out);
    sensitive << ( eth_data_rx_V_last_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_user_V_0_ack_in);
    sensitive << ( eth_data_rx_V_user_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_user_V_0_ack_out);
    sensitive << ( eth_data_rx_V_data_V_0_vld_out );
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_eth_data_rx_V_user_V_0_data_out);
    sensitive << ( eth_data_rx_V_user_V_0_payload_A );
    sensitive << ( eth_data_rx_V_user_V_0_payload_B );
    sensitive << ( eth_data_rx_V_user_V_0_sel );

    SC_METHOD(thread_eth_data_rx_V_user_V_0_load_A);
    sensitive << ( eth_data_rx_V_user_V_0_sel_wr );
    sensitive << ( eth_data_rx_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_eth_data_rx_V_user_V_0_load_B);
    sensitive << ( eth_data_rx_V_user_V_0_sel_wr );
    sensitive << ( eth_data_rx_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_eth_data_rx_V_user_V_0_sel);
    sensitive << ( eth_data_rx_V_user_V_0_sel_rd );

    SC_METHOD(thread_eth_data_rx_V_user_V_0_state_cmp_full);
    sensitive << ( eth_data_rx_V_user_V_0_state );

    SC_METHOD(thread_eth_data_rx_V_user_V_0_vld_in);
    sensitive << ( eth_data_rx_TVALID );

    SC_METHOD(thread_eth_data_rx_V_user_V_0_vld_out);
    sensitive << ( eth_data_rx_V_user_V_0_state );

    SC_METHOD(thread_ethernet_demux_state_out_V);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( trunc_ln209_reg_323_pp0_iter1_reg );

    SC_METHOD(thread_mgmt_data_out_TDATA);
    sensitive << ( mgmt_data_out_V_data_V_1_data_out );

    SC_METHOD(thread_mgmt_data_out_TDATA_blk_n);
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( state_V_load_reg_319_pp0_iter1_reg );

    SC_METHOD(thread_mgmt_data_out_TKEEP);
    sensitive << ( mgmt_data_out_V_keep_V_1_data_out );

    SC_METHOD(thread_mgmt_data_out_TLAST);
    sensitive << ( mgmt_data_out_V_last_V_1_data_out );

    SC_METHOD(thread_mgmt_data_out_TUSER);
    sensitive << ( mgmt_data_out_V_user_V_1_data_out );

    SC_METHOD(thread_mgmt_data_out_TVALID);
    sensitive << ( mgmt_data_out_V_last_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_data_V_1_ack_in);
    sensitive << ( mgmt_data_out_V_data_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_data_V_1_ack_out);
    sensitive << ( mgmt_data_out_TREADY );

    SC_METHOD(thread_mgmt_data_out_V_data_V_1_data_out);
    sensitive << ( mgmt_data_out_V_data_V_1_payload_A );
    sensitive << ( mgmt_data_out_V_data_V_1_payload_B );
    sensitive << ( mgmt_data_out_V_data_V_1_sel );

    SC_METHOD(thread_mgmt_data_out_V_data_V_1_load_A);
    sensitive << ( mgmt_data_out_V_data_V_1_sel_wr );
    sensitive << ( mgmt_data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_mgmt_data_out_V_data_V_1_load_B);
    sensitive << ( mgmt_data_out_V_data_V_1_sel_wr );
    sensitive << ( mgmt_data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_mgmt_data_out_V_data_V_1_sel);
    sensitive << ( mgmt_data_out_V_data_V_1_sel_rd );

    SC_METHOD(thread_mgmt_data_out_V_data_V_1_state_cmp_full);
    sensitive << ( mgmt_data_out_V_data_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_data_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_mgmt_data_out_V_data_V_1_vld_out);
    sensitive << ( mgmt_data_out_V_data_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_keep_V_1_ack_in);
    sensitive << ( mgmt_data_out_V_keep_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_keep_V_1_ack_out);
    sensitive << ( mgmt_data_out_TREADY );

    SC_METHOD(thread_mgmt_data_out_V_keep_V_1_data_out);
    sensitive << ( mgmt_data_out_V_keep_V_1_payload_A );
    sensitive << ( mgmt_data_out_V_keep_V_1_payload_B );
    sensitive << ( mgmt_data_out_V_keep_V_1_sel );

    SC_METHOD(thread_mgmt_data_out_V_keep_V_1_load_A);
    sensitive << ( mgmt_data_out_V_keep_V_1_sel_wr );
    sensitive << ( mgmt_data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_mgmt_data_out_V_keep_V_1_load_B);
    sensitive << ( mgmt_data_out_V_keep_V_1_sel_wr );
    sensitive << ( mgmt_data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_mgmt_data_out_V_keep_V_1_sel);
    sensitive << ( mgmt_data_out_V_keep_V_1_sel_rd );

    SC_METHOD(thread_mgmt_data_out_V_keep_V_1_state_cmp_full);
    sensitive << ( mgmt_data_out_V_keep_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_keep_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_mgmt_data_out_V_keep_V_1_vld_out);
    sensitive << ( mgmt_data_out_V_keep_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_last_V_1_ack_in);
    sensitive << ( mgmt_data_out_V_last_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_last_V_1_ack_out);
    sensitive << ( mgmt_data_out_TREADY );

    SC_METHOD(thread_mgmt_data_out_V_last_V_1_data_out);
    sensitive << ( mgmt_data_out_V_last_V_1_payload_A );
    sensitive << ( mgmt_data_out_V_last_V_1_payload_B );
    sensitive << ( mgmt_data_out_V_last_V_1_sel );

    SC_METHOD(thread_mgmt_data_out_V_last_V_1_load_A);
    sensitive << ( mgmt_data_out_V_last_V_1_sel_wr );
    sensitive << ( mgmt_data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_mgmt_data_out_V_last_V_1_load_B);
    sensitive << ( mgmt_data_out_V_last_V_1_sel_wr );
    sensitive << ( mgmt_data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_mgmt_data_out_V_last_V_1_sel);
    sensitive << ( mgmt_data_out_V_last_V_1_sel_rd );

    SC_METHOD(thread_mgmt_data_out_V_last_V_1_state_cmp_full);
    sensitive << ( mgmt_data_out_V_last_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_last_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_mgmt_data_out_V_last_V_1_vld_out);
    sensitive << ( mgmt_data_out_V_last_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_user_V_1_ack_in);
    sensitive << ( mgmt_data_out_V_user_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_user_V_1_ack_out);
    sensitive << ( mgmt_data_out_TREADY );

    SC_METHOD(thread_mgmt_data_out_V_user_V_1_data_out);
    sensitive << ( mgmt_data_out_V_user_V_1_payload_A );
    sensitive << ( mgmt_data_out_V_user_V_1_payload_B );
    sensitive << ( mgmt_data_out_V_user_V_1_sel );

    SC_METHOD(thread_mgmt_data_out_V_user_V_1_load_A);
    sensitive << ( mgmt_data_out_V_user_V_1_sel_wr );
    sensitive << ( mgmt_data_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_mgmt_data_out_V_user_V_1_load_B);
    sensitive << ( mgmt_data_out_V_user_V_1_sel_wr );
    sensitive << ( mgmt_data_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_mgmt_data_out_V_user_V_1_sel);
    sensitive << ( mgmt_data_out_V_user_V_1_sel_rd );

    SC_METHOD(thread_mgmt_data_out_V_user_V_1_state_cmp_full);
    sensitive << ( mgmt_data_out_V_user_V_1_state );

    SC_METHOD(thread_mgmt_data_out_V_user_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_mgmt_data_out_V_user_V_1_vld_out);
    sensitive << ( mgmt_data_out_V_user_V_1_state );

    SC_METHOD(thread_p_Result_s_fu_306_p3);
    sensitive << ( trunc_ln647_reg_363 );

    SC_METHOD(thread_rx_tstamp_out_V_V_1_ack_in);
    sensitive << ( rx_tstamp_out_V_V_1_state );

    SC_METHOD(thread_rx_tstamp_out_V_V_1_ack_out);
    sensitive << ( rx_tstamp_out_V_V_TREADY );

    SC_METHOD(thread_rx_tstamp_out_V_V_1_data_out);
    sensitive << ( rx_tstamp_out_V_V_1_payload_A );
    sensitive << ( rx_tstamp_out_V_V_1_payload_B );
    sensitive << ( rx_tstamp_out_V_V_1_sel );

    SC_METHOD(thread_rx_tstamp_out_V_V_1_load_A);
    sensitive << ( rx_tstamp_out_V_V_1_sel_wr );
    sensitive << ( rx_tstamp_out_V_V_1_state_cmp_full );

    SC_METHOD(thread_rx_tstamp_out_V_V_1_load_B);
    sensitive << ( rx_tstamp_out_V_V_1_sel_wr );
    sensitive << ( rx_tstamp_out_V_V_1_state_cmp_full );

    SC_METHOD(thread_rx_tstamp_out_V_V_1_sel);
    sensitive << ( rx_tstamp_out_V_V_1_sel_rd );

    SC_METHOD(thread_rx_tstamp_out_V_V_1_state_cmp_full);
    sensitive << ( rx_tstamp_out_V_V_1_state );

    SC_METHOD(thread_rx_tstamp_out_V_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_rx_tstamp_out_V_V_1_vld_out);
    sensitive << ( rx_tstamp_out_V_V_1_state );

    SC_METHOD(thread_rx_tstamp_out_V_V_TDATA);
    sensitive << ( rx_tstamp_out_V_V_1_data_out );

    SC_METHOD(thread_rx_tstamp_out_V_V_TDATA_blk_n);
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( state_V_load_reg_319_pp0_iter1_reg );

    SC_METHOD(thread_rx_tstamp_out_V_V_TVALID);
    sensitive << ( rx_tstamp_out_V_V_1_state );

    SC_METHOD(thread_select_ln276_fu_270_p3);
    sensitive << ( eth_data_rx_V_last_V_0_data_out );

    SC_METHOD(thread_select_ln293_fu_256_p3);
    sensitive << ( eth_data_rx_V_last_V_0_data_out );

    SC_METHOD(thread_select_ln304_fu_242_p3);
    sensitive << ( eth_data_rx_V_last_V_0_data_out );

    SC_METHOD(thread_select_ln313_fu_228_p3);
    sensitive << ( eth_data_rx_V_last_V_0_data_out );

    SC_METHOD(thread_state_V_load_load_fu_216_p1);
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_sync_data_out_TDATA);
    sensitive << ( sync_data_out_V_data_V_1_data_out );

    SC_METHOD(thread_sync_data_out_TDATA_blk_n);
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( state_V_load_reg_319_pp0_iter1_reg );

    SC_METHOD(thread_sync_data_out_TKEEP);
    sensitive << ( sync_data_out_V_keep_V_1_data_out );

    SC_METHOD(thread_sync_data_out_TLAST);
    sensitive << ( sync_data_out_V_last_V_1_data_out );

    SC_METHOD(thread_sync_data_out_TUSER);
    sensitive << ( sync_data_out_V_user_V_1_data_out );

    SC_METHOD(thread_sync_data_out_TVALID);
    sensitive << ( sync_data_out_V_last_V_1_state );

    SC_METHOD(thread_sync_data_out_V_data_V_1_ack_in);
    sensitive << ( sync_data_out_V_data_V_1_state );

    SC_METHOD(thread_sync_data_out_V_data_V_1_ack_out);
    sensitive << ( sync_data_out_TREADY );

    SC_METHOD(thread_sync_data_out_V_data_V_1_data_out);
    sensitive << ( sync_data_out_V_data_V_1_payload_A );
    sensitive << ( sync_data_out_V_data_V_1_payload_B );
    sensitive << ( sync_data_out_V_data_V_1_sel );

    SC_METHOD(thread_sync_data_out_V_data_V_1_load_A);
    sensitive << ( sync_data_out_V_data_V_1_sel_wr );
    sensitive << ( sync_data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_sync_data_out_V_data_V_1_load_B);
    sensitive << ( sync_data_out_V_data_V_1_sel_wr );
    sensitive << ( sync_data_out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_sync_data_out_V_data_V_1_sel);
    sensitive << ( sync_data_out_V_data_V_1_sel_rd );

    SC_METHOD(thread_sync_data_out_V_data_V_1_state_cmp_full);
    sensitive << ( sync_data_out_V_data_V_1_state );

    SC_METHOD(thread_sync_data_out_V_data_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_sync_data_out_V_data_V_1_vld_out);
    sensitive << ( sync_data_out_V_data_V_1_state );

    SC_METHOD(thread_sync_data_out_V_keep_V_1_ack_in);
    sensitive << ( sync_data_out_V_keep_V_1_state );

    SC_METHOD(thread_sync_data_out_V_keep_V_1_ack_out);
    sensitive << ( sync_data_out_TREADY );

    SC_METHOD(thread_sync_data_out_V_keep_V_1_data_out);
    sensitive << ( sync_data_out_V_keep_V_1_payload_A );
    sensitive << ( sync_data_out_V_keep_V_1_payload_B );
    sensitive << ( sync_data_out_V_keep_V_1_sel );

    SC_METHOD(thread_sync_data_out_V_keep_V_1_load_A);
    sensitive << ( sync_data_out_V_keep_V_1_sel_wr );
    sensitive << ( sync_data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_sync_data_out_V_keep_V_1_load_B);
    sensitive << ( sync_data_out_V_keep_V_1_sel_wr );
    sensitive << ( sync_data_out_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_sync_data_out_V_keep_V_1_sel);
    sensitive << ( sync_data_out_V_keep_V_1_sel_rd );

    SC_METHOD(thread_sync_data_out_V_keep_V_1_state_cmp_full);
    sensitive << ( sync_data_out_V_keep_V_1_state );

    SC_METHOD(thread_sync_data_out_V_keep_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_sync_data_out_V_keep_V_1_vld_out);
    sensitive << ( sync_data_out_V_keep_V_1_state );

    SC_METHOD(thread_sync_data_out_V_last_V_1_ack_in);
    sensitive << ( sync_data_out_V_last_V_1_state );

    SC_METHOD(thread_sync_data_out_V_last_V_1_ack_out);
    sensitive << ( sync_data_out_TREADY );

    SC_METHOD(thread_sync_data_out_V_last_V_1_data_out);
    sensitive << ( sync_data_out_V_last_V_1_payload_A );
    sensitive << ( sync_data_out_V_last_V_1_payload_B );
    sensitive << ( sync_data_out_V_last_V_1_sel );

    SC_METHOD(thread_sync_data_out_V_last_V_1_load_A);
    sensitive << ( sync_data_out_V_last_V_1_sel_wr );
    sensitive << ( sync_data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_sync_data_out_V_last_V_1_load_B);
    sensitive << ( sync_data_out_V_last_V_1_sel_wr );
    sensitive << ( sync_data_out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_sync_data_out_V_last_V_1_sel);
    sensitive << ( sync_data_out_V_last_V_1_sel_rd );

    SC_METHOD(thread_sync_data_out_V_last_V_1_state_cmp_full);
    sensitive << ( sync_data_out_V_last_V_1_state );

    SC_METHOD(thread_sync_data_out_V_last_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_sync_data_out_V_last_V_1_vld_out);
    sensitive << ( sync_data_out_V_last_V_1_state );

    SC_METHOD(thread_sync_data_out_V_user_V_1_ack_in);
    sensitive << ( sync_data_out_V_user_V_1_state );

    SC_METHOD(thread_sync_data_out_V_user_V_1_ack_out);
    sensitive << ( sync_data_out_TREADY );

    SC_METHOD(thread_sync_data_out_V_user_V_1_data_out);
    sensitive << ( sync_data_out_V_user_V_1_payload_A );
    sensitive << ( sync_data_out_V_user_V_1_payload_B );
    sensitive << ( sync_data_out_V_user_V_1_sel );

    SC_METHOD(thread_sync_data_out_V_user_V_1_load_A);
    sensitive << ( sync_data_out_V_user_V_1_sel_wr );
    sensitive << ( sync_data_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_sync_data_out_V_user_V_1_load_B);
    sensitive << ( sync_data_out_V_user_V_1_sel_wr );
    sensitive << ( sync_data_out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_sync_data_out_V_user_V_1_sel);
    sensitive << ( sync_data_out_V_user_V_1_sel_rd );

    SC_METHOD(thread_sync_data_out_V_user_V_1_state_cmp_full);
    sensitive << ( sync_data_out_V_user_V_1_state );

    SC_METHOD(thread_sync_data_out_V_user_V_1_vld_in);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( state_V_load_reg_319 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_sync_data_out_V_user_V_1_vld_out);
    sensitive << ( sync_data_out_V_user_V_1_state );

    SC_METHOD(thread_trunc_ln209_fu_220_p1);
    sensitive << ( state_V );

    SC_METHOD(thread_trunc_ln647_fu_290_p1);
    sensitive << ( eth_data_rx_V_data_V_0_data_out );

    SC_METHOD(thread_ap_NS_iter0_fsm);
    sensitive << ( eth_data_rx_V_data_V_0_vld_out );
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_NS_iter1_fsm);
    sensitive << ( eth_data_rx_V_data_V_0_vld_out );
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( state_V );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_NS_iter2_fsm);
    sensitive << ( cu_data_out_TREADY );
    sensitive << ( cu_data_out_V_data_V_1_state );
    sensitive << ( cu_data_out_V_user_V_1_state );
    sensitive << ( cu_data_out_V_keep_V_1_state );
    sensitive << ( cu_data_out_V_last_V_1_state );
    sensitive << ( sync_data_out_TREADY );
    sensitive << ( sync_data_out_V_data_V_1_state );
    sensitive << ( sync_data_out_V_user_V_1_state );
    sensitive << ( sync_data_out_V_keep_V_1_state );
    sensitive << ( sync_data_out_V_last_V_1_state );
    sensitive << ( mgmt_data_out_TREADY );
    sensitive << ( mgmt_data_out_V_data_V_1_state );
    sensitive << ( mgmt_data_out_V_user_V_1_state );
    sensitive << ( mgmt_data_out_V_keep_V_1_state );
    sensitive << ( mgmt_data_out_V_last_V_1_state );
    sensitive << ( rx_tstamp_out_V_V_TREADY );
    sensitive << ( rx_tstamp_out_V_V_1_state );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( ap_CS_iter2_fsm );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    eth_data_rx_V_data_V_0_sel_rd = SC_LOGIC_0;
    eth_data_rx_V_data_V_0_sel_wr = SC_LOGIC_0;
    eth_data_rx_V_data_V_0_state = "00";
    eth_data_rx_V_user_V_0_sel_rd = SC_LOGIC_0;
    eth_data_rx_V_user_V_0_sel_wr = SC_LOGIC_0;
    eth_data_rx_V_user_V_0_state = "00";
    eth_data_rx_V_keep_V_0_sel_rd = SC_LOGIC_0;
    eth_data_rx_V_keep_V_0_sel_wr = SC_LOGIC_0;
    eth_data_rx_V_keep_V_0_state = "00";
    eth_data_rx_V_last_V_0_sel_rd = SC_LOGIC_0;
    eth_data_rx_V_last_V_0_sel_wr = SC_LOGIC_0;
    eth_data_rx_V_last_V_0_state = "00";
    cu_data_out_V_data_V_1_sel_rd = SC_LOGIC_0;
    cu_data_out_V_data_V_1_sel_wr = SC_LOGIC_0;
    cu_data_out_V_data_V_1_state = "00";
    cu_data_out_V_user_V_1_sel_rd = SC_LOGIC_0;
    cu_data_out_V_user_V_1_sel_wr = SC_LOGIC_0;
    cu_data_out_V_user_V_1_state = "00";
    cu_data_out_V_keep_V_1_sel_rd = SC_LOGIC_0;
    cu_data_out_V_keep_V_1_sel_wr = SC_LOGIC_0;
    cu_data_out_V_keep_V_1_state = "00";
    cu_data_out_V_last_V_1_sel_rd = SC_LOGIC_0;
    cu_data_out_V_last_V_1_sel_wr = SC_LOGIC_0;
    cu_data_out_V_last_V_1_state = "00";
    sync_data_out_V_data_V_1_sel_rd = SC_LOGIC_0;
    sync_data_out_V_data_V_1_sel_wr = SC_LOGIC_0;
    sync_data_out_V_data_V_1_state = "00";
    sync_data_out_V_user_V_1_sel_rd = SC_LOGIC_0;
    sync_data_out_V_user_V_1_sel_wr = SC_LOGIC_0;
    sync_data_out_V_user_V_1_state = "00";
    sync_data_out_V_keep_V_1_sel_rd = SC_LOGIC_0;
    sync_data_out_V_keep_V_1_sel_wr = SC_LOGIC_0;
    sync_data_out_V_keep_V_1_state = "00";
    sync_data_out_V_last_V_1_sel_rd = SC_LOGIC_0;
    sync_data_out_V_last_V_1_sel_wr = SC_LOGIC_0;
    sync_data_out_V_last_V_1_state = "00";
    mgmt_data_out_V_data_V_1_sel_rd = SC_LOGIC_0;
    mgmt_data_out_V_data_V_1_sel_wr = SC_LOGIC_0;
    mgmt_data_out_V_data_V_1_state = "00";
    mgmt_data_out_V_user_V_1_sel_rd = SC_LOGIC_0;
    mgmt_data_out_V_user_V_1_sel_wr = SC_LOGIC_0;
    mgmt_data_out_V_user_V_1_state = "00";
    mgmt_data_out_V_keep_V_1_sel_rd = SC_LOGIC_0;
    mgmt_data_out_V_keep_V_1_sel_wr = SC_LOGIC_0;
    mgmt_data_out_V_keep_V_1_state = "00";
    mgmt_data_out_V_last_V_1_sel_rd = SC_LOGIC_0;
    mgmt_data_out_V_last_V_1_sel_wr = SC_LOGIC_0;
    mgmt_data_out_V_last_V_1_state = "00";
    rx_tstamp_out_V_V_1_sel_rd = SC_LOGIC_0;
    rx_tstamp_out_V_V_1_sel_wr = SC_LOGIC_0;
    rx_tstamp_out_V_V_1_state = "00";
    state_V = "0000";
    eth_data_in_user_V = "0";
    ap_CS_iter0_fsm = "0";
    ap_CS_iter1_fsm = "1";
    ap_CS_iter2_fsm = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Ethernet_demux_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, eth_data_rx_TDATA, "(port)eth_data_rx_TDATA");
    sc_trace(mVcdFile, eth_data_rx_TVALID, "(port)eth_data_rx_TVALID");
    sc_trace(mVcdFile, eth_data_rx_TREADY, "(port)eth_data_rx_TREADY");
    sc_trace(mVcdFile, eth_data_rx_TUSER, "(port)eth_data_rx_TUSER");
    sc_trace(mVcdFile, eth_data_rx_TKEEP, "(port)eth_data_rx_TKEEP");
    sc_trace(mVcdFile, eth_data_rx_TLAST, "(port)eth_data_rx_TLAST");
    sc_trace(mVcdFile, cu_data_out_TDATA, "(port)cu_data_out_TDATA");
    sc_trace(mVcdFile, cu_data_out_TVALID, "(port)cu_data_out_TVALID");
    sc_trace(mVcdFile, cu_data_out_TREADY, "(port)cu_data_out_TREADY");
    sc_trace(mVcdFile, cu_data_out_TUSER, "(port)cu_data_out_TUSER");
    sc_trace(mVcdFile, cu_data_out_TKEEP, "(port)cu_data_out_TKEEP");
    sc_trace(mVcdFile, cu_data_out_TLAST, "(port)cu_data_out_TLAST");
    sc_trace(mVcdFile, sync_data_out_TDATA, "(port)sync_data_out_TDATA");
    sc_trace(mVcdFile, sync_data_out_TVALID, "(port)sync_data_out_TVALID");
    sc_trace(mVcdFile, sync_data_out_TREADY, "(port)sync_data_out_TREADY");
    sc_trace(mVcdFile, sync_data_out_TUSER, "(port)sync_data_out_TUSER");
    sc_trace(mVcdFile, sync_data_out_TKEEP, "(port)sync_data_out_TKEEP");
    sc_trace(mVcdFile, sync_data_out_TLAST, "(port)sync_data_out_TLAST");
    sc_trace(mVcdFile, mgmt_data_out_TDATA, "(port)mgmt_data_out_TDATA");
    sc_trace(mVcdFile, mgmt_data_out_TVALID, "(port)mgmt_data_out_TVALID");
    sc_trace(mVcdFile, mgmt_data_out_TREADY, "(port)mgmt_data_out_TREADY");
    sc_trace(mVcdFile, mgmt_data_out_TUSER, "(port)mgmt_data_out_TUSER");
    sc_trace(mVcdFile, mgmt_data_out_TKEEP, "(port)mgmt_data_out_TKEEP");
    sc_trace(mVcdFile, mgmt_data_out_TLAST, "(port)mgmt_data_out_TLAST");
    sc_trace(mVcdFile, rx_tstamp_in_V, "(port)rx_tstamp_in_V");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_TDATA, "(port)rx_tstamp_out_V_V_TDATA");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_TVALID, "(port)rx_tstamp_out_V_V_TVALID");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_TREADY, "(port)rx_tstamp_out_V_V_TREADY");
    sc_trace(mVcdFile, ethernet_demux_state_out_V, "(port)ethernet_demux_state_out_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_data_out, "eth_data_rx_V_data_V_0_data_out");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_vld_in, "eth_data_rx_V_data_V_0_vld_in");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_vld_out, "eth_data_rx_V_data_V_0_vld_out");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_ack_in, "eth_data_rx_V_data_V_0_ack_in");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_ack_out, "eth_data_rx_V_data_V_0_ack_out");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_payload_A, "eth_data_rx_V_data_V_0_payload_A");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_payload_B, "eth_data_rx_V_data_V_0_payload_B");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_sel_rd, "eth_data_rx_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_sel_wr, "eth_data_rx_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_sel, "eth_data_rx_V_data_V_0_sel");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_load_A, "eth_data_rx_V_data_V_0_load_A");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_load_B, "eth_data_rx_V_data_V_0_load_B");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_state, "eth_data_rx_V_data_V_0_state");
    sc_trace(mVcdFile, eth_data_rx_V_data_V_0_state_cmp_full, "eth_data_rx_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_data_out, "eth_data_rx_V_user_V_0_data_out");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_vld_in, "eth_data_rx_V_user_V_0_vld_in");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_vld_out, "eth_data_rx_V_user_V_0_vld_out");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_ack_in, "eth_data_rx_V_user_V_0_ack_in");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_ack_out, "eth_data_rx_V_user_V_0_ack_out");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_payload_A, "eth_data_rx_V_user_V_0_payload_A");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_payload_B, "eth_data_rx_V_user_V_0_payload_B");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_sel_rd, "eth_data_rx_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_sel_wr, "eth_data_rx_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_sel, "eth_data_rx_V_user_V_0_sel");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_load_A, "eth_data_rx_V_user_V_0_load_A");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_load_B, "eth_data_rx_V_user_V_0_load_B");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_state, "eth_data_rx_V_user_V_0_state");
    sc_trace(mVcdFile, eth_data_rx_V_user_V_0_state_cmp_full, "eth_data_rx_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_data_out, "eth_data_rx_V_keep_V_0_data_out");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_vld_in, "eth_data_rx_V_keep_V_0_vld_in");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_vld_out, "eth_data_rx_V_keep_V_0_vld_out");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_ack_in, "eth_data_rx_V_keep_V_0_ack_in");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_ack_out, "eth_data_rx_V_keep_V_0_ack_out");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_payload_A, "eth_data_rx_V_keep_V_0_payload_A");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_payload_B, "eth_data_rx_V_keep_V_0_payload_B");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_sel_rd, "eth_data_rx_V_keep_V_0_sel_rd");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_sel_wr, "eth_data_rx_V_keep_V_0_sel_wr");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_sel, "eth_data_rx_V_keep_V_0_sel");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_load_A, "eth_data_rx_V_keep_V_0_load_A");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_load_B, "eth_data_rx_V_keep_V_0_load_B");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_state, "eth_data_rx_V_keep_V_0_state");
    sc_trace(mVcdFile, eth_data_rx_V_keep_V_0_state_cmp_full, "eth_data_rx_V_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_data_out, "eth_data_rx_V_last_V_0_data_out");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_vld_in, "eth_data_rx_V_last_V_0_vld_in");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_vld_out, "eth_data_rx_V_last_V_0_vld_out");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_ack_in, "eth_data_rx_V_last_V_0_ack_in");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_ack_out, "eth_data_rx_V_last_V_0_ack_out");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_payload_A, "eth_data_rx_V_last_V_0_payload_A");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_payload_B, "eth_data_rx_V_last_V_0_payload_B");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_sel_rd, "eth_data_rx_V_last_V_0_sel_rd");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_sel_wr, "eth_data_rx_V_last_V_0_sel_wr");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_sel, "eth_data_rx_V_last_V_0_sel");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_load_A, "eth_data_rx_V_last_V_0_load_A");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_load_B, "eth_data_rx_V_last_V_0_load_B");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_state, "eth_data_rx_V_last_V_0_state");
    sc_trace(mVcdFile, eth_data_rx_V_last_V_0_state_cmp_full, "eth_data_rx_V_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_data_in, "cu_data_out_V_data_V_1_data_in");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_data_out, "cu_data_out_V_data_V_1_data_out");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_vld_in, "cu_data_out_V_data_V_1_vld_in");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_vld_out, "cu_data_out_V_data_V_1_vld_out");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_ack_in, "cu_data_out_V_data_V_1_ack_in");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_ack_out, "cu_data_out_V_data_V_1_ack_out");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_payload_A, "cu_data_out_V_data_V_1_payload_A");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_payload_B, "cu_data_out_V_data_V_1_payload_B");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_sel_rd, "cu_data_out_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_sel_wr, "cu_data_out_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_sel, "cu_data_out_V_data_V_1_sel");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_load_A, "cu_data_out_V_data_V_1_load_A");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_load_B, "cu_data_out_V_data_V_1_load_B");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_state, "cu_data_out_V_data_V_1_state");
    sc_trace(mVcdFile, cu_data_out_V_data_V_1_state_cmp_full, "cu_data_out_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_data_in, "cu_data_out_V_user_V_1_data_in");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_data_out, "cu_data_out_V_user_V_1_data_out");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_vld_in, "cu_data_out_V_user_V_1_vld_in");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_vld_out, "cu_data_out_V_user_V_1_vld_out");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_ack_in, "cu_data_out_V_user_V_1_ack_in");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_ack_out, "cu_data_out_V_user_V_1_ack_out");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_payload_A, "cu_data_out_V_user_V_1_payload_A");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_payload_B, "cu_data_out_V_user_V_1_payload_B");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_sel_rd, "cu_data_out_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_sel_wr, "cu_data_out_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_sel, "cu_data_out_V_user_V_1_sel");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_load_A, "cu_data_out_V_user_V_1_load_A");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_load_B, "cu_data_out_V_user_V_1_load_B");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_state, "cu_data_out_V_user_V_1_state");
    sc_trace(mVcdFile, cu_data_out_V_user_V_1_state_cmp_full, "cu_data_out_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_data_in, "cu_data_out_V_keep_V_1_data_in");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_data_out, "cu_data_out_V_keep_V_1_data_out");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_vld_in, "cu_data_out_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_vld_out, "cu_data_out_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_ack_in, "cu_data_out_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_ack_out, "cu_data_out_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_payload_A, "cu_data_out_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_payload_B, "cu_data_out_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_sel_rd, "cu_data_out_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_sel_wr, "cu_data_out_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_sel, "cu_data_out_V_keep_V_1_sel");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_load_A, "cu_data_out_V_keep_V_1_load_A");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_load_B, "cu_data_out_V_keep_V_1_load_B");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_state, "cu_data_out_V_keep_V_1_state");
    sc_trace(mVcdFile, cu_data_out_V_keep_V_1_state_cmp_full, "cu_data_out_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_data_in, "cu_data_out_V_last_V_1_data_in");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_data_out, "cu_data_out_V_last_V_1_data_out");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_vld_in, "cu_data_out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_vld_out, "cu_data_out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_ack_in, "cu_data_out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_ack_out, "cu_data_out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_payload_A, "cu_data_out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_payload_B, "cu_data_out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_sel_rd, "cu_data_out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_sel_wr, "cu_data_out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_sel, "cu_data_out_V_last_V_1_sel");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_load_A, "cu_data_out_V_last_V_1_load_A");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_load_B, "cu_data_out_V_last_V_1_load_B");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_state, "cu_data_out_V_last_V_1_state");
    sc_trace(mVcdFile, cu_data_out_V_last_V_1_state_cmp_full, "cu_data_out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_data_out, "sync_data_out_V_data_V_1_data_out");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_vld_in, "sync_data_out_V_data_V_1_vld_in");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_vld_out, "sync_data_out_V_data_V_1_vld_out");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_ack_in, "sync_data_out_V_data_V_1_ack_in");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_ack_out, "sync_data_out_V_data_V_1_ack_out");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_payload_A, "sync_data_out_V_data_V_1_payload_A");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_payload_B, "sync_data_out_V_data_V_1_payload_B");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_sel_rd, "sync_data_out_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_sel_wr, "sync_data_out_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_sel, "sync_data_out_V_data_V_1_sel");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_load_A, "sync_data_out_V_data_V_1_load_A");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_load_B, "sync_data_out_V_data_V_1_load_B");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_state, "sync_data_out_V_data_V_1_state");
    sc_trace(mVcdFile, sync_data_out_V_data_V_1_state_cmp_full, "sync_data_out_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_data_out, "sync_data_out_V_user_V_1_data_out");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_vld_in, "sync_data_out_V_user_V_1_vld_in");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_vld_out, "sync_data_out_V_user_V_1_vld_out");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_ack_in, "sync_data_out_V_user_V_1_ack_in");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_ack_out, "sync_data_out_V_user_V_1_ack_out");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_payload_A, "sync_data_out_V_user_V_1_payload_A");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_payload_B, "sync_data_out_V_user_V_1_payload_B");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_sel_rd, "sync_data_out_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_sel_wr, "sync_data_out_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_sel, "sync_data_out_V_user_V_1_sel");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_load_A, "sync_data_out_V_user_V_1_load_A");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_load_B, "sync_data_out_V_user_V_1_load_B");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_state, "sync_data_out_V_user_V_1_state");
    sc_trace(mVcdFile, sync_data_out_V_user_V_1_state_cmp_full, "sync_data_out_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_data_out, "sync_data_out_V_keep_V_1_data_out");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_vld_in, "sync_data_out_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_vld_out, "sync_data_out_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_ack_in, "sync_data_out_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_ack_out, "sync_data_out_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_payload_A, "sync_data_out_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_payload_B, "sync_data_out_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_sel_rd, "sync_data_out_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_sel_wr, "sync_data_out_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_sel, "sync_data_out_V_keep_V_1_sel");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_load_A, "sync_data_out_V_keep_V_1_load_A");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_load_B, "sync_data_out_V_keep_V_1_load_B");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_state, "sync_data_out_V_keep_V_1_state");
    sc_trace(mVcdFile, sync_data_out_V_keep_V_1_state_cmp_full, "sync_data_out_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_data_out, "sync_data_out_V_last_V_1_data_out");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_vld_in, "sync_data_out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_vld_out, "sync_data_out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_ack_in, "sync_data_out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_ack_out, "sync_data_out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_payload_A, "sync_data_out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_payload_B, "sync_data_out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_sel_rd, "sync_data_out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_sel_wr, "sync_data_out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_sel, "sync_data_out_V_last_V_1_sel");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_load_A, "sync_data_out_V_last_V_1_load_A");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_load_B, "sync_data_out_V_last_V_1_load_B");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_state, "sync_data_out_V_last_V_1_state");
    sc_trace(mVcdFile, sync_data_out_V_last_V_1_state_cmp_full, "sync_data_out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_data_out, "mgmt_data_out_V_data_V_1_data_out");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_vld_in, "mgmt_data_out_V_data_V_1_vld_in");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_vld_out, "mgmt_data_out_V_data_V_1_vld_out");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_ack_in, "mgmt_data_out_V_data_V_1_ack_in");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_ack_out, "mgmt_data_out_V_data_V_1_ack_out");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_payload_A, "mgmt_data_out_V_data_V_1_payload_A");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_payload_B, "mgmt_data_out_V_data_V_1_payload_B");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_sel_rd, "mgmt_data_out_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_sel_wr, "mgmt_data_out_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_sel, "mgmt_data_out_V_data_V_1_sel");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_load_A, "mgmt_data_out_V_data_V_1_load_A");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_load_B, "mgmt_data_out_V_data_V_1_load_B");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_state, "mgmt_data_out_V_data_V_1_state");
    sc_trace(mVcdFile, mgmt_data_out_V_data_V_1_state_cmp_full, "mgmt_data_out_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_data_out, "mgmt_data_out_V_user_V_1_data_out");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_vld_in, "mgmt_data_out_V_user_V_1_vld_in");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_vld_out, "mgmt_data_out_V_user_V_1_vld_out");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_ack_in, "mgmt_data_out_V_user_V_1_ack_in");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_ack_out, "mgmt_data_out_V_user_V_1_ack_out");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_payload_A, "mgmt_data_out_V_user_V_1_payload_A");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_payload_B, "mgmt_data_out_V_user_V_1_payload_B");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_sel_rd, "mgmt_data_out_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_sel_wr, "mgmt_data_out_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_sel, "mgmt_data_out_V_user_V_1_sel");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_load_A, "mgmt_data_out_V_user_V_1_load_A");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_load_B, "mgmt_data_out_V_user_V_1_load_B");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_state, "mgmt_data_out_V_user_V_1_state");
    sc_trace(mVcdFile, mgmt_data_out_V_user_V_1_state_cmp_full, "mgmt_data_out_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_data_out, "mgmt_data_out_V_keep_V_1_data_out");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_vld_in, "mgmt_data_out_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_vld_out, "mgmt_data_out_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_ack_in, "mgmt_data_out_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_ack_out, "mgmt_data_out_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_payload_A, "mgmt_data_out_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_payload_B, "mgmt_data_out_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_sel_rd, "mgmt_data_out_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_sel_wr, "mgmt_data_out_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_sel, "mgmt_data_out_V_keep_V_1_sel");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_load_A, "mgmt_data_out_V_keep_V_1_load_A");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_load_B, "mgmt_data_out_V_keep_V_1_load_B");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_state, "mgmt_data_out_V_keep_V_1_state");
    sc_trace(mVcdFile, mgmt_data_out_V_keep_V_1_state_cmp_full, "mgmt_data_out_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_data_out, "mgmt_data_out_V_last_V_1_data_out");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_vld_in, "mgmt_data_out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_vld_out, "mgmt_data_out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_ack_in, "mgmt_data_out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_ack_out, "mgmt_data_out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_payload_A, "mgmt_data_out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_payload_B, "mgmt_data_out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_sel_rd, "mgmt_data_out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_sel_wr, "mgmt_data_out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_sel, "mgmt_data_out_V_last_V_1_sel");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_load_A, "mgmt_data_out_V_last_V_1_load_A");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_load_B, "mgmt_data_out_V_last_V_1_load_B");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_state, "mgmt_data_out_V_last_V_1_state");
    sc_trace(mVcdFile, mgmt_data_out_V_last_V_1_state_cmp_full, "mgmt_data_out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_data_out, "rx_tstamp_out_V_V_1_data_out");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_vld_in, "rx_tstamp_out_V_V_1_vld_in");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_vld_out, "rx_tstamp_out_V_V_1_vld_out");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_ack_in, "rx_tstamp_out_V_V_1_ack_in");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_ack_out, "rx_tstamp_out_V_V_1_ack_out");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_payload_A, "rx_tstamp_out_V_V_1_payload_A");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_payload_B, "rx_tstamp_out_V_V_1_payload_B");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_sel_rd, "rx_tstamp_out_V_V_1_sel_rd");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_sel_wr, "rx_tstamp_out_V_V_1_sel_wr");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_sel, "rx_tstamp_out_V_V_1_sel");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_load_A, "rx_tstamp_out_V_V_1_load_A");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_load_B, "rx_tstamp_out_V_V_1_load_B");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_state, "rx_tstamp_out_V_V_1_state");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_1_state_cmp_full, "rx_tstamp_out_V_V_1_state_cmp_full");
    sc_trace(mVcdFile, state_V, "state_V");
    sc_trace(mVcdFile, eth_data_in_user_V, "eth_data_in_user_V");
    sc_trace(mVcdFile, eth_data_rx_TDATA_blk_n, "eth_data_rx_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_iter0_fsm, "ap_CS_iter0_fsm");
    sc_trace(mVcdFile, ap_CS_iter1_fsm, "ap_CS_iter1_fsm");
    sc_trace(mVcdFile, ap_CS_iter2_fsm, "ap_CS_iter2_fsm");
    sc_trace(mVcdFile, state_V_load_load_fu_216_p1, "state_V_load_load_fu_216_p1");
    sc_trace(mVcdFile, cu_data_out_TDATA_blk_n, "cu_data_out_TDATA_blk_n");
    sc_trace(mVcdFile, state_V_load_reg_319, "state_V_load_reg_319");
    sc_trace(mVcdFile, state_V_load_reg_319_pp0_iter1_reg, "state_V_load_reg_319_pp0_iter1_reg");
    sc_trace(mVcdFile, sync_data_out_TDATA_blk_n, "sync_data_out_TDATA_blk_n");
    sc_trace(mVcdFile, mgmt_data_out_TDATA_blk_n, "mgmt_data_out_TDATA_blk_n");
    sc_trace(mVcdFile, rx_tstamp_out_V_V_TDATA_blk_n, "rx_tstamp_out_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, reg_202, "reg_202");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, reg_209, "reg_209");
    sc_trace(mVcdFile, trunc_ln209_fu_220_p1, "trunc_ln209_fu_220_p1");
    sc_trace(mVcdFile, trunc_ln209_reg_323, "trunc_ln209_reg_323");
    sc_trace(mVcdFile, trunc_ln209_reg_323_pp0_iter1_reg, "trunc_ln209_reg_323_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_user_V_3_reg_328, "tmp_user_V_3_reg_328");
    sc_trace(mVcdFile, tmp_last_V_2_reg_333, "tmp_last_V_2_reg_333");
    sc_trace(mVcdFile, tmp_V_reg_338, "tmp_V_reg_338");
    sc_trace(mVcdFile, tmp_user_V_2_reg_343, "tmp_user_V_2_reg_343");
    sc_trace(mVcdFile, tmp_last_V_1_reg_348, "tmp_last_V_1_reg_348");
    sc_trace(mVcdFile, tmp_user_V_1_reg_353, "tmp_user_V_1_reg_353");
    sc_trace(mVcdFile, tmp_last_V_reg_358, "tmp_last_V_reg_358");
    sc_trace(mVcdFile, trunc_ln647_fu_290_p1, "trunc_ln647_fu_290_p1");
    sc_trace(mVcdFile, trunc_ln647_reg_363, "trunc_ln647_reg_363");
    sc_trace(mVcdFile, p_Result_s_fu_306_p3, "p_Result_s_fu_306_p3");
    sc_trace(mVcdFile, select_ln313_fu_228_p3, "select_ln313_fu_228_p3");
    sc_trace(mVcdFile, select_ln304_fu_242_p3, "select_ln304_fu_242_p3");
    sc_trace(mVcdFile, select_ln293_fu_256_p3, "select_ln293_fu_256_p3");
    sc_trace(mVcdFile, select_ln276_fu_270_p3, "select_ln276_fu_270_p3");
    sc_trace(mVcdFile, ap_NS_iter0_fsm, "ap_NS_iter0_fsm");
    sc_trace(mVcdFile, ap_NS_iter1_fsm, "ap_NS_iter1_fsm");
    sc_trace(mVcdFile, ap_NS_iter2_fsm, "ap_NS_iter2_fsm");
    sc_trace(mVcdFile, ap_condition_1249, "ap_condition_1249");
    sc_trace(mVcdFile, ap_condition_1234, "ap_condition_1234");
    sc_trace(mVcdFile, ap_condition_1148, "ap_condition_1148");
#endif

    }
    mHdltvinHandle.open("Ethernet_demux.hdltvin.dat");
    mHdltvoutHandle.open("Ethernet_demux.hdltvout.dat");
}

Ethernet_demux::~Ethernet_demux() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void Ethernet_demux::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter0_fsm = ap_ST_iter0_fsm_state1;
    } else {
        ap_CS_iter0_fsm = ap_NS_iter0_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter1_fsm = ap_ST_iter1_fsm_state0;
    } else {
        ap_CS_iter1_fsm = ap_NS_iter1_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_iter2_fsm = ap_ST_iter2_fsm_state0;
    } else {
        ap_CS_iter2_fsm = ap_NS_iter2_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_vld_out.read()))) {
            cu_data_out_V_data_V_1_sel_rd =  (sc_logic) (~cu_data_out_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_ack_in.read()))) {
            cu_data_out_V_data_V_1_sel_wr =  (sc_logic) (~cu_data_out_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, cu_data_out_V_data_V_1_state.read())))) {
            cu_data_out_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read())))) {
            cu_data_out_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, cu_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_ack_out.read()))))) {
            cu_data_out_V_data_V_1_state = ap_const_lv2_3;
        } else {
            cu_data_out_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_vld_out.read()))) {
            cu_data_out_V_keep_V_1_sel_rd =  (sc_logic) (~cu_data_out_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_ack_in.read()))) {
            cu_data_out_V_keep_V_1_sel_wr =  (sc_logic) (~cu_data_out_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, cu_data_out_V_keep_V_1_state.read())))) {
            cu_data_out_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read())))) {
            cu_data_out_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, cu_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_ack_out.read()))))) {
            cu_data_out_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            cu_data_out_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_vld_out.read()))) {
            cu_data_out_V_last_V_1_sel_rd =  (sc_logic) (~cu_data_out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_ack_in.read()))) {
            cu_data_out_V_last_V_1_sel_wr =  (sc_logic) (~cu_data_out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, cu_data_out_V_last_V_1_state.read())))) {
            cu_data_out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read())))) {
            cu_data_out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, cu_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_ack_out.read()))))) {
            cu_data_out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            cu_data_out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_vld_out.read()))) {
            cu_data_out_V_user_V_1_sel_rd =  (sc_logic) (~cu_data_out_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_ack_in.read()))) {
            cu_data_out_V_user_V_1_sel_wr =  (sc_logic) (~cu_data_out_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        cu_data_out_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, cu_data_out_V_user_V_1_state.read())))) {
            cu_data_out_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read())))) {
            cu_data_out_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, cu_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_ack_out.read()))))) {
            cu_data_out_V_user_V_1_state = ap_const_lv2_3;
        } else {
            cu_data_out_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_in_user_V = ap_const_lv1_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
              esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
              !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
             (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
              esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
              !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
             (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
              esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
              !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
             (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
              esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
              !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
            eth_data_in_user_V = eth_data_rx_V_user_V_0_data_out.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_vld_out.read()))) {
            eth_data_rx_V_data_V_0_sel_rd =  (sc_logic) (~eth_data_rx_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_ack_in.read()))) {
            eth_data_rx_V_data_V_0_sel_wr =  (sc_logic) (~eth_data_rx_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(eth_data_rx_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(eth_data_rx_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            eth_data_rx_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(eth_data_rx_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(eth_data_rx_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            eth_data_rx_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(eth_data_rx_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(eth_data_rx_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(eth_data_rx_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_ack_out.read()))))) {
            eth_data_rx_V_data_V_0_state = ap_const_lv2_3;
        } else {
            eth_data_rx_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_vld_out.read()))) {
            eth_data_rx_V_keep_V_0_sel_rd =  (sc_logic) (~eth_data_rx_V_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_ack_in.read()))) {
            eth_data_rx_V_keep_V_0_sel_wr =  (sc_logic) (~eth_data_rx_V_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, eth_data_rx_V_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, eth_data_rx_V_keep_V_0_state.read())))) {
            eth_data_rx_V_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, eth_data_rx_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, eth_data_rx_V_keep_V_0_state.read())))) {
            eth_data_rx_V_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, eth_data_rx_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, eth_data_rx_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, eth_data_rx_V_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_ack_out.read()))))) {
            eth_data_rx_V_keep_V_0_state = ap_const_lv2_3;
        } else {
            eth_data_rx_V_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_vld_out.read()))) {
            eth_data_rx_V_last_V_0_sel_rd =  (sc_logic) (~eth_data_rx_V_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_ack_in.read()))) {
            eth_data_rx_V_last_V_0_sel_wr =  (sc_logic) (~eth_data_rx_V_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, eth_data_rx_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, eth_data_rx_V_last_V_0_state.read())))) {
            eth_data_rx_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, eth_data_rx_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, eth_data_rx_V_last_V_0_state.read())))) {
            eth_data_rx_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, eth_data_rx_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, eth_data_rx_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, eth_data_rx_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_ack_out.read()))))) {
            eth_data_rx_V_last_V_0_state = ap_const_lv2_3;
        } else {
            eth_data_rx_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_vld_out.read()))) {
            eth_data_rx_V_user_V_0_sel_rd =  (sc_logic) (~eth_data_rx_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_ack_in.read()))) {
            eth_data_rx_V_user_V_0_sel_wr =  (sc_logic) (~eth_data_rx_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        eth_data_rx_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, eth_data_rx_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, eth_data_rx_V_user_V_0_state.read())))) {
            eth_data_rx_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, eth_data_rx_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, eth_data_rx_V_user_V_0_state.read())))) {
            eth_data_rx_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, eth_data_rx_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, eth_data_rx_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, eth_data_rx_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_ack_out.read()))))) {
            eth_data_rx_V_user_V_0_state = ap_const_lv2_3;
        } else {
            eth_data_rx_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_vld_out.read()))) {
            mgmt_data_out_V_data_V_1_sel_rd =  (sc_logic) (~mgmt_data_out_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_ack_in.read()))) {
            mgmt_data_out_V_data_V_1_sel_wr =  (sc_logic) (~mgmt_data_out_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, mgmt_data_out_V_data_V_1_state.read())))) {
            mgmt_data_out_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read())))) {
            mgmt_data_out_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, mgmt_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_ack_out.read()))))) {
            mgmt_data_out_V_data_V_1_state = ap_const_lv2_3;
        } else {
            mgmt_data_out_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_vld_out.read()))) {
            mgmt_data_out_V_keep_V_1_sel_rd =  (sc_logic) (~mgmt_data_out_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_ack_in.read()))) {
            mgmt_data_out_V_keep_V_1_sel_wr =  (sc_logic) (~mgmt_data_out_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, mgmt_data_out_V_keep_V_1_state.read())))) {
            mgmt_data_out_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read())))) {
            mgmt_data_out_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, mgmt_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_ack_out.read()))))) {
            mgmt_data_out_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            mgmt_data_out_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_vld_out.read()))) {
            mgmt_data_out_V_last_V_1_sel_rd =  (sc_logic) (~mgmt_data_out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_ack_in.read()))) {
            mgmt_data_out_V_last_V_1_sel_wr =  (sc_logic) (~mgmt_data_out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, mgmt_data_out_V_last_V_1_state.read())))) {
            mgmt_data_out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read())))) {
            mgmt_data_out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, mgmt_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_ack_out.read()))))) {
            mgmt_data_out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            mgmt_data_out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_vld_out.read()))) {
            mgmt_data_out_V_user_V_1_sel_rd =  (sc_logic) (~mgmt_data_out_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_ack_in.read()))) {
            mgmt_data_out_V_user_V_1_sel_wr =  (sc_logic) (~mgmt_data_out_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        mgmt_data_out_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, mgmt_data_out_V_user_V_1_state.read())))) {
            mgmt_data_out_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read())))) {
            mgmt_data_out_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, mgmt_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_ack_out.read()))))) {
            mgmt_data_out_V_user_V_1_state = ap_const_lv2_3;
        } else {
            mgmt_data_out_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        rx_tstamp_out_V_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_vld_out.read()))) {
            rx_tstamp_out_V_V_1_sel_rd =  (sc_logic) (~rx_tstamp_out_V_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        rx_tstamp_out_V_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_ack_in.read()))) {
            rx_tstamp_out_V_V_1_sel_wr =  (sc_logic) (~rx_tstamp_out_V_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        rx_tstamp_out_V_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, rx_tstamp_out_V_V_1_state.read())))) {
            rx_tstamp_out_V_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read())))) {
            rx_tstamp_out_V_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, rx_tstamp_out_V_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_ack_out.read()))))) {
            rx_tstamp_out_V_V_1_state = ap_const_lv2_3;
        } else {
            rx_tstamp_out_V_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        state_V = ap_const_lv4_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_1148.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_condition_1234.read(), ap_const_boolean_1)) {
                state_V = ap_const_lv4_0;
            } else if (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read())) {
                state_V = ap_const_lv4_3;
            } else if (esl_seteq<1,4,4>(state_V_load_load_fu_216_p1.read(), ap_const_lv4_3)) {
                state_V = ap_const_lv4_4;
            } else if (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4)) {
                state_V = select_ln276_fu_270_p3.read();
            } else if (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5)) {
                state_V = select_ln293_fu_256_p3.read();
            } else if (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6)) {
                state_V = select_ln304_fu_242_p3.read();
            } else if (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7)) {
                state_V = select_ln313_fu_228_p3.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_vld_out.read()))) {
            sync_data_out_V_data_V_1_sel_rd =  (sc_logic) (~sync_data_out_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_ack_in.read()))) {
            sync_data_out_V_data_V_1_sel_wr =  (sc_logic) (~sync_data_out_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sync_data_out_V_data_V_1_state.read())))) {
            sync_data_out_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read())))) {
            sync_data_out_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sync_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_ack_out.read()))))) {
            sync_data_out_V_data_V_1_state = ap_const_lv2_3;
        } else {
            sync_data_out_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_vld_out.read()))) {
            sync_data_out_V_keep_V_1_sel_rd =  (sc_logic) (~sync_data_out_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_ack_in.read()))) {
            sync_data_out_V_keep_V_1_sel_wr =  (sc_logic) (~sync_data_out_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sync_data_out_V_keep_V_1_state.read())))) {
            sync_data_out_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read())))) {
            sync_data_out_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sync_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_ack_out.read()))))) {
            sync_data_out_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            sync_data_out_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_vld_out.read()))) {
            sync_data_out_V_last_V_1_sel_rd =  (sc_logic) (~sync_data_out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_ack_in.read()))) {
            sync_data_out_V_last_V_1_sel_wr =  (sc_logic) (~sync_data_out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sync_data_out_V_last_V_1_state.read())))) {
            sync_data_out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read())))) {
            sync_data_out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sync_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_ack_out.read()))))) {
            sync_data_out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            sync_data_out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_vld_out.read()))) {
            sync_data_out_V_user_V_1_sel_rd =  (sc_logic) (~sync_data_out_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_ack_in.read()))) {
            sync_data_out_V_user_V_1_sel_wr =  (sc_logic) (~sync_data_out_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        sync_data_out_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, sync_data_out_V_user_V_1_state.read())))) {
            sync_data_out_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read())))) {
            sync_data_out_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, sync_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_ack_out.read()))))) {
            sync_data_out_V_user_V_1_state = ap_const_lv2_3;
        } else {
            sync_data_out_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_load_A.read())) {
        cu_data_out_V_data_V_1_payload_A = cu_data_out_V_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_load_B.read())) {
        cu_data_out_V_data_V_1_payload_B = cu_data_out_V_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_load_A.read())) {
        cu_data_out_V_keep_V_1_payload_A = cu_data_out_V_keep_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_load_B.read())) {
        cu_data_out_V_keep_V_1_payload_B = cu_data_out_V_keep_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_load_A.read())) {
        cu_data_out_V_last_V_1_payload_A = cu_data_out_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_load_B.read())) {
        cu_data_out_V_last_V_1_payload_B = cu_data_out_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_load_A.read())) {
        cu_data_out_V_user_V_1_payload_A = cu_data_out_V_user_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_load_B.read())) {
        cu_data_out_V_user_V_1_payload_B = cu_data_out_V_user_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_load_A.read())) {
        eth_data_rx_V_data_V_0_payload_A = eth_data_rx_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_load_B.read())) {
        eth_data_rx_V_data_V_0_payload_B = eth_data_rx_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_load_A.read())) {
        eth_data_rx_V_keep_V_0_payload_A = eth_data_rx_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_load_B.read())) {
        eth_data_rx_V_keep_V_0_payload_B = eth_data_rx_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_load_A.read())) {
        eth_data_rx_V_last_V_0_payload_A = eth_data_rx_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_load_B.read())) {
        eth_data_rx_V_last_V_0_payload_B = eth_data_rx_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_load_A.read())) {
        eth_data_rx_V_user_V_0_payload_A = eth_data_rx_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_load_B.read())) {
        eth_data_rx_V_user_V_0_payload_B = eth_data_rx_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_load_A.read())) {
        mgmt_data_out_V_data_V_1_payload_A = reg_202.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_load_B.read())) {
        mgmt_data_out_V_data_V_1_payload_B = reg_202.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_load_A.read())) {
        mgmt_data_out_V_keep_V_1_payload_A = reg_209.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_load_B.read())) {
        mgmt_data_out_V_keep_V_1_payload_B = reg_209.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_load_A.read())) {
        mgmt_data_out_V_last_V_1_payload_A = tmp_last_V_1_reg_348.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_load_B.read())) {
        mgmt_data_out_V_last_V_1_payload_B = tmp_last_V_1_reg_348.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_load_A.read())) {
        mgmt_data_out_V_user_V_1_payload_A = tmp_user_V_2_reg_343.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_load_B.read())) {
        mgmt_data_out_V_user_V_1_payload_B = tmp_user_V_2_reg_343.read();
    }
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
  esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
  esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
  esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        reg_202 = eth_data_rx_V_data_V_0_data_out.read();
        reg_209 = eth_data_rx_V_keep_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_load_A.read())) {
        rx_tstamp_out_V_V_1_payload_A = tmp_V_reg_338.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_load_B.read())) {
        rx_tstamp_out_V_V_1_payload_B = tmp_V_reg_338.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        state_V_load_reg_319 = state_V.read();
        trunc_ln209_reg_323 = trunc_ln209_fu_220_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        state_V_load_reg_319_pp0_iter1_reg = state_V_load_reg_319.read();
        trunc_ln209_reg_323_pp0_iter1_reg = trunc_ln209_reg_323.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_load_A.read())) {
        sync_data_out_V_data_V_1_payload_A = reg_202.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_load_B.read())) {
        sync_data_out_V_data_V_1_payload_B = reg_202.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_load_A.read())) {
        sync_data_out_V_keep_V_1_payload_A = reg_209.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_load_B.read())) {
        sync_data_out_V_keep_V_1_payload_B = reg_209.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_load_A.read())) {
        sync_data_out_V_last_V_1_payload_A = tmp_last_V_2_reg_333.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_load_B.read())) {
        sync_data_out_V_last_V_1_payload_B = tmp_last_V_2_reg_333.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_load_A.read())) {
        sync_data_out_V_user_V_1_payload_A = tmp_user_V_3_reg_328.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_load_B.read())) {
        sync_data_out_V_user_V_1_payload_B = tmp_user_V_3_reg_328.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        tmp_V_reg_338 = rx_tstamp_in_V.read();
        tmp_last_V_2_reg_333 = eth_data_rx_V_last_V_0_data_out.read();
        tmp_user_V_3_reg_328 = eth_data_rx_V_user_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        tmp_last_V_1_reg_348 = eth_data_rx_V_last_V_0_data_out.read();
        tmp_user_V_2_reg_343 = eth_data_rx_V_user_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        tmp_last_V_reg_358 = eth_data_rx_V_last_V_0_data_out.read();
        tmp_user_V_1_reg_353 = eth_data_rx_V_user_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        trunc_ln647_reg_363 = trunc_ln647_fu_290_p1.read();
    }
}

void Ethernet_demux::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = ((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())));
}

void Ethernet_demux::thread_ap_block_state2_io() {
    ap_block_state2_io = ((esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_data_V_1_ack_in.read())) || (esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_1_ack_in.read())) || (esl_seteq<1,4,4>(ap_const_lv4_5, state_V_load_reg_319.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_data_V_1_ack_in.read())) || (esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_data_V_1_ack_in.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_data_V_1_ack_in.read())));
}

void Ethernet_demux::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Ethernet_demux::thread_ap_block_state3_io() {
    ap_block_state3_io = ((esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_V_data_V_1_ack_in.read())) || (esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_1_ack_in.read())) || (esl_seteq<1,4,4>(ap_const_lv4_5, state_V_load_reg_319_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_V_data_V_1_ack_in.read())) || (esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_data_V_1_ack_in.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_V_data_V_1_ack_in.read())));
}

void Ethernet_demux::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())));
}

void Ethernet_demux::thread_ap_condition_1148() {
    ap_condition_1148 = (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))));
}

void Ethernet_demux::thread_ap_condition_1234() {
    ap_condition_1234 = (!esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && !esl_seteq<1,4,4>(state_V_load_load_fu_216_p1.read(), ap_const_lv4_3) && !esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && !esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && !esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && !esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7));
}

void Ethernet_demux::thread_ap_condition_1249() {
    ap_condition_1249 = (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && !(esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
  esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
   esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())))));
}

void Ethernet_demux::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void Ethernet_demux::thread_cu_data_out_TDATA() {
    cu_data_out_TDATA = cu_data_out_V_data_V_1_data_out.read();
}

void Ethernet_demux::thread_cu_data_out_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319_pp0_iter1_reg.read())))) {
        cu_data_out_TDATA_blk_n = cu_data_out_V_data_V_1_state.read()[1];
    } else {
        cu_data_out_TDATA_blk_n = ap_const_logic_1;
    }
}

void Ethernet_demux::thread_cu_data_out_TKEEP() {
    cu_data_out_TKEEP = cu_data_out_V_keep_V_1_data_out.read();
}

void Ethernet_demux::thread_cu_data_out_TLAST() {
    cu_data_out_TLAST = cu_data_out_V_last_V_1_data_out.read();
}

void Ethernet_demux::thread_cu_data_out_TUSER() {
    cu_data_out_TUSER = cu_data_out_V_user_V_1_data_out.read();
}

void Ethernet_demux::thread_cu_data_out_TVALID() {
    cu_data_out_TVALID = cu_data_out_V_last_V_1_state.read()[0];
}

void Ethernet_demux::thread_cu_data_out_V_data_V_1_ack_in() {
    cu_data_out_V_data_V_1_ack_in = cu_data_out_V_data_V_1_state.read()[1];
}

void Ethernet_demux::thread_cu_data_out_V_data_V_1_ack_out() {
    cu_data_out_V_data_V_1_ack_out = cu_data_out_TREADY.read();
}

void Ethernet_demux::thread_cu_data_out_V_data_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_1249.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319.read())) {
            cu_data_out_V_data_V_1_data_in = p_Result_s_fu_306_p3.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319.read())) {
            cu_data_out_V_data_V_1_data_in = reg_202.read();
        } else {
            cu_data_out_V_data_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        cu_data_out_V_data_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Ethernet_demux::thread_cu_data_out_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_data_V_1_sel.read())) {
        cu_data_out_V_data_V_1_data_out = cu_data_out_V_data_V_1_payload_B.read();
    } else {
        cu_data_out_V_data_V_1_data_out = cu_data_out_V_data_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_cu_data_out_V_data_V_1_load_A() {
    cu_data_out_V_data_V_1_load_A = (cu_data_out_V_data_V_1_state_cmp_full.read() & ~cu_data_out_V_data_V_1_sel_wr.read());
}

void Ethernet_demux::thread_cu_data_out_V_data_V_1_load_B() {
    cu_data_out_V_data_V_1_load_B = (cu_data_out_V_data_V_1_sel_wr.read() & cu_data_out_V_data_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_cu_data_out_V_data_V_1_sel() {
    cu_data_out_V_data_V_1_sel = cu_data_out_V_data_V_1_sel_rd.read();
}

void Ethernet_demux::thread_cu_data_out_V_data_V_1_state_cmp_full() {
    cu_data_out_V_data_V_1_state_cmp_full =  (sc_logic) ((!cu_data_out_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(cu_data_out_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_cu_data_out_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        cu_data_out_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        cu_data_out_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_cu_data_out_V_data_V_1_vld_out() {
    cu_data_out_V_data_V_1_vld_out = cu_data_out_V_data_V_1_state.read()[0];
}

void Ethernet_demux::thread_cu_data_out_V_keep_V_1_ack_in() {
    cu_data_out_V_keep_V_1_ack_in = cu_data_out_V_keep_V_1_state.read()[1];
}

void Ethernet_demux::thread_cu_data_out_V_keep_V_1_ack_out() {
    cu_data_out_V_keep_V_1_ack_out = cu_data_out_TREADY.read();
}

void Ethernet_demux::thread_cu_data_out_V_keep_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_1249.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319.read())) {
            cu_data_out_V_keep_V_1_data_in = ap_const_lv16_FFF;
        } else if (esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319.read())) {
            cu_data_out_V_keep_V_1_data_in = reg_209.read();
        } else {
            cu_data_out_V_keep_V_1_data_in =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
        }
    } else {
        cu_data_out_V_keep_V_1_data_in =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void Ethernet_demux::thread_cu_data_out_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_keep_V_1_sel.read())) {
        cu_data_out_V_keep_V_1_data_out = cu_data_out_V_keep_V_1_payload_B.read();
    } else {
        cu_data_out_V_keep_V_1_data_out = cu_data_out_V_keep_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_cu_data_out_V_keep_V_1_load_A() {
    cu_data_out_V_keep_V_1_load_A = (cu_data_out_V_keep_V_1_state_cmp_full.read() & ~cu_data_out_V_keep_V_1_sel_wr.read());
}

void Ethernet_demux::thread_cu_data_out_V_keep_V_1_load_B() {
    cu_data_out_V_keep_V_1_load_B = (cu_data_out_V_keep_V_1_sel_wr.read() & cu_data_out_V_keep_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_cu_data_out_V_keep_V_1_sel() {
    cu_data_out_V_keep_V_1_sel = cu_data_out_V_keep_V_1_sel_rd.read();
}

void Ethernet_demux::thread_cu_data_out_V_keep_V_1_state_cmp_full() {
    cu_data_out_V_keep_V_1_state_cmp_full =  (sc_logic) ((!cu_data_out_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(cu_data_out_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_cu_data_out_V_keep_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        cu_data_out_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        cu_data_out_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_cu_data_out_V_keep_V_1_vld_out() {
    cu_data_out_V_keep_V_1_vld_out = cu_data_out_V_keep_V_1_state.read()[0];
}

void Ethernet_demux::thread_cu_data_out_V_last_V_1_ack_in() {
    cu_data_out_V_last_V_1_ack_in = cu_data_out_V_last_V_1_state.read()[1];
}

void Ethernet_demux::thread_cu_data_out_V_last_V_1_ack_out() {
    cu_data_out_V_last_V_1_ack_out = cu_data_out_TREADY.read();
}

void Ethernet_demux::thread_cu_data_out_V_last_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_1249.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319.read())) {
            cu_data_out_V_last_V_1_data_in = ap_const_lv1_0;
        } else if (esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319.read())) {
            cu_data_out_V_last_V_1_data_in = tmp_last_V_reg_358.read();
        } else {
            cu_data_out_V_last_V_1_data_in =  (sc_lv<1>) ("X");
        }
    } else {
        cu_data_out_V_last_V_1_data_in =  (sc_lv<1>) ("X");
    }
}

void Ethernet_demux::thread_cu_data_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_last_V_1_sel.read())) {
        cu_data_out_V_last_V_1_data_out = cu_data_out_V_last_V_1_payload_B.read();
    } else {
        cu_data_out_V_last_V_1_data_out = cu_data_out_V_last_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_cu_data_out_V_last_V_1_load_A() {
    cu_data_out_V_last_V_1_load_A = (cu_data_out_V_last_V_1_state_cmp_full.read() & ~cu_data_out_V_last_V_1_sel_wr.read());
}

void Ethernet_demux::thread_cu_data_out_V_last_V_1_load_B() {
    cu_data_out_V_last_V_1_load_B = (cu_data_out_V_last_V_1_sel_wr.read() & cu_data_out_V_last_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_cu_data_out_V_last_V_1_sel() {
    cu_data_out_V_last_V_1_sel = cu_data_out_V_last_V_1_sel_rd.read();
}

void Ethernet_demux::thread_cu_data_out_V_last_V_1_state_cmp_full() {
    cu_data_out_V_last_V_1_state_cmp_full =  (sc_logic) ((!cu_data_out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(cu_data_out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_cu_data_out_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        cu_data_out_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        cu_data_out_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_cu_data_out_V_last_V_1_vld_out() {
    cu_data_out_V_last_V_1_vld_out = cu_data_out_V_last_V_1_state.read()[0];
}

void Ethernet_demux::thread_cu_data_out_V_user_V_1_ack_in() {
    cu_data_out_V_user_V_1_ack_in = cu_data_out_V_user_V_1_state.read()[1];
}

void Ethernet_demux::thread_cu_data_out_V_user_V_1_ack_out() {
    cu_data_out_V_user_V_1_ack_out = cu_data_out_TREADY.read();
}

void Ethernet_demux::thread_cu_data_out_V_user_V_1_data_in() {
    if (esl_seteq<1,1,1>(ap_condition_1249.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319.read())) {
            cu_data_out_V_user_V_1_data_in = eth_data_in_user_V.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319.read())) {
            cu_data_out_V_user_V_1_data_in = tmp_user_V_1_reg_353.read();
        } else {
            cu_data_out_V_user_V_1_data_in =  (sc_lv<1>) ("X");
        }
    } else {
        cu_data_out_V_user_V_1_data_in =  (sc_lv<1>) ("X");
    }
}

void Ethernet_demux::thread_cu_data_out_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, cu_data_out_V_user_V_1_sel.read())) {
        cu_data_out_V_user_V_1_data_out = cu_data_out_V_user_V_1_payload_B.read();
    } else {
        cu_data_out_V_user_V_1_data_out = cu_data_out_V_user_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_cu_data_out_V_user_V_1_load_A() {
    cu_data_out_V_user_V_1_load_A = (cu_data_out_V_user_V_1_state_cmp_full.read() & ~cu_data_out_V_user_V_1_sel_wr.read());
}

void Ethernet_demux::thread_cu_data_out_V_user_V_1_load_B() {
    cu_data_out_V_user_V_1_load_B = (cu_data_out_V_user_V_1_sel_wr.read() & cu_data_out_V_user_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_cu_data_out_V_user_V_1_sel() {
    cu_data_out_V_user_V_1_sel = cu_data_out_V_user_V_1_sel_rd.read();
}

void Ethernet_demux::thread_cu_data_out_V_user_V_1_state_cmp_full() {
    cu_data_out_V_user_V_1_state_cmp_full =  (sc_logic) ((!cu_data_out_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(cu_data_out_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_cu_data_out_V_user_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_V_load_reg_319.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_4, state_V_load_reg_319.read()) && 
          !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        cu_data_out_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        cu_data_out_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_cu_data_out_V_user_V_1_vld_out() {
    cu_data_out_V_user_V_1_vld_out = cu_data_out_V_user_V_1_state.read()[0];
}

void Ethernet_demux::thread_eth_data_rx_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6)) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7)))) {
        eth_data_rx_TDATA_blk_n = eth_data_rx_V_data_V_0_state.read()[0];
    } else {
        eth_data_rx_TDATA_blk_n = ap_const_logic_1;
    }
}

void Ethernet_demux::thread_eth_data_rx_TREADY() {
    eth_data_rx_TREADY = eth_data_rx_V_last_V_0_state.read()[1];
}

void Ethernet_demux::thread_eth_data_rx_V_data_V_0_ack_in() {
    eth_data_rx_V_data_V_0_ack_in = eth_data_rx_V_data_V_0_state.read()[1];
}

void Ethernet_demux::thread_eth_data_rx_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        eth_data_rx_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        eth_data_rx_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_eth_data_rx_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_data_V_0_sel.read())) {
        eth_data_rx_V_data_V_0_data_out = eth_data_rx_V_data_V_0_payload_B.read();
    } else {
        eth_data_rx_V_data_V_0_data_out = eth_data_rx_V_data_V_0_payload_A.read();
    }
}

void Ethernet_demux::thread_eth_data_rx_V_data_V_0_load_A() {
    eth_data_rx_V_data_V_0_load_A = (eth_data_rx_V_data_V_0_state_cmp_full.read() & ~eth_data_rx_V_data_V_0_sel_wr.read());
}

void Ethernet_demux::thread_eth_data_rx_V_data_V_0_load_B() {
    eth_data_rx_V_data_V_0_load_B = (eth_data_rx_V_data_V_0_sel_wr.read() & eth_data_rx_V_data_V_0_state_cmp_full.read());
}

void Ethernet_demux::thread_eth_data_rx_V_data_V_0_sel() {
    eth_data_rx_V_data_V_0_sel = eth_data_rx_V_data_V_0_sel_rd.read();
}

void Ethernet_demux::thread_eth_data_rx_V_data_V_0_state_cmp_full() {
    eth_data_rx_V_data_V_0_state_cmp_full =  (sc_logic) ((!eth_data_rx_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(eth_data_rx_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_eth_data_rx_V_data_V_0_vld_in() {
    eth_data_rx_V_data_V_0_vld_in = eth_data_rx_TVALID.read();
}

void Ethernet_demux::thread_eth_data_rx_V_data_V_0_vld_out() {
    eth_data_rx_V_data_V_0_vld_out = eth_data_rx_V_data_V_0_state.read()[0];
}

void Ethernet_demux::thread_eth_data_rx_V_keep_V_0_ack_in() {
    eth_data_rx_V_keep_V_0_ack_in = eth_data_rx_V_keep_V_0_state.read()[1];
}

void Ethernet_demux::thread_eth_data_rx_V_keep_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        eth_data_rx_V_keep_V_0_ack_out = ap_const_logic_1;
    } else {
        eth_data_rx_V_keep_V_0_ack_out = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_eth_data_rx_V_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_keep_V_0_sel.read())) {
        eth_data_rx_V_keep_V_0_data_out = eth_data_rx_V_keep_V_0_payload_B.read();
    } else {
        eth_data_rx_V_keep_V_0_data_out = eth_data_rx_V_keep_V_0_payload_A.read();
    }
}

void Ethernet_demux::thread_eth_data_rx_V_keep_V_0_load_A() {
    eth_data_rx_V_keep_V_0_load_A = (eth_data_rx_V_keep_V_0_state_cmp_full.read() & ~eth_data_rx_V_keep_V_0_sel_wr.read());
}

void Ethernet_demux::thread_eth_data_rx_V_keep_V_0_load_B() {
    eth_data_rx_V_keep_V_0_load_B = (eth_data_rx_V_keep_V_0_sel_wr.read() & eth_data_rx_V_keep_V_0_state_cmp_full.read());
}

void Ethernet_demux::thread_eth_data_rx_V_keep_V_0_sel() {
    eth_data_rx_V_keep_V_0_sel = eth_data_rx_V_keep_V_0_sel_rd.read();
}

void Ethernet_demux::thread_eth_data_rx_V_keep_V_0_state_cmp_full() {
    eth_data_rx_V_keep_V_0_state_cmp_full =  (sc_logic) ((!eth_data_rx_V_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(eth_data_rx_V_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_eth_data_rx_V_keep_V_0_vld_in() {
    eth_data_rx_V_keep_V_0_vld_in = eth_data_rx_TVALID.read();
}

void Ethernet_demux::thread_eth_data_rx_V_keep_V_0_vld_out() {
    eth_data_rx_V_keep_V_0_vld_out = eth_data_rx_V_keep_V_0_state.read()[0];
}

void Ethernet_demux::thread_eth_data_rx_V_last_V_0_ack_in() {
    eth_data_rx_V_last_V_0_ack_in = eth_data_rx_V_last_V_0_state.read()[1];
}

void Ethernet_demux::thread_eth_data_rx_V_last_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        eth_data_rx_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        eth_data_rx_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_eth_data_rx_V_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_last_V_0_sel.read())) {
        eth_data_rx_V_last_V_0_data_out = eth_data_rx_V_last_V_0_payload_B.read();
    } else {
        eth_data_rx_V_last_V_0_data_out = eth_data_rx_V_last_V_0_payload_A.read();
    }
}

void Ethernet_demux::thread_eth_data_rx_V_last_V_0_load_A() {
    eth_data_rx_V_last_V_0_load_A = (eth_data_rx_V_last_V_0_state_cmp_full.read() & ~eth_data_rx_V_last_V_0_sel_wr.read());
}

void Ethernet_demux::thread_eth_data_rx_V_last_V_0_load_B() {
    eth_data_rx_V_last_V_0_load_B = (eth_data_rx_V_last_V_0_sel_wr.read() & eth_data_rx_V_last_V_0_state_cmp_full.read());
}

void Ethernet_demux::thread_eth_data_rx_V_last_V_0_sel() {
    eth_data_rx_V_last_V_0_sel = eth_data_rx_V_last_V_0_sel_rd.read();
}

void Ethernet_demux::thread_eth_data_rx_V_last_V_0_state_cmp_full() {
    eth_data_rx_V_last_V_0_state_cmp_full =  (sc_logic) ((!eth_data_rx_V_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(eth_data_rx_V_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_eth_data_rx_V_last_V_0_vld_in() {
    eth_data_rx_V_last_V_0_vld_in = eth_data_rx_TVALID.read();
}

void Ethernet_demux::thread_eth_data_rx_V_last_V_0_vld_out() {
    eth_data_rx_V_last_V_0_vld_out = eth_data_rx_V_last_V_0_state.read()[0];
}

void Ethernet_demux::thread_eth_data_rx_V_user_V_0_ack_in() {
    eth_data_rx_V_user_V_0_ack_in = eth_data_rx_V_user_V_0_state.read()[1];
}

void Ethernet_demux::thread_eth_data_rx_V_user_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))) || 
         (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
          esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
          !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))))))) {
        eth_data_rx_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        eth_data_rx_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_eth_data_rx_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, eth_data_rx_V_user_V_0_sel.read())) {
        eth_data_rx_V_user_V_0_data_out = eth_data_rx_V_user_V_0_payload_B.read();
    } else {
        eth_data_rx_V_user_V_0_data_out = eth_data_rx_V_user_V_0_payload_A.read();
    }
}

void Ethernet_demux::thread_eth_data_rx_V_user_V_0_load_A() {
    eth_data_rx_V_user_V_0_load_A = (eth_data_rx_V_user_V_0_state_cmp_full.read() & ~eth_data_rx_V_user_V_0_sel_wr.read());
}

void Ethernet_demux::thread_eth_data_rx_V_user_V_0_load_B() {
    eth_data_rx_V_user_V_0_load_B = (eth_data_rx_V_user_V_0_sel_wr.read() & eth_data_rx_V_user_V_0_state_cmp_full.read());
}

void Ethernet_demux::thread_eth_data_rx_V_user_V_0_sel() {
    eth_data_rx_V_user_V_0_sel = eth_data_rx_V_user_V_0_sel_rd.read();
}

void Ethernet_demux::thread_eth_data_rx_V_user_V_0_state_cmp_full() {
    eth_data_rx_V_user_V_0_state_cmp_full =  (sc_logic) ((!eth_data_rx_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(eth_data_rx_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_eth_data_rx_V_user_V_0_vld_in() {
    eth_data_rx_V_user_V_0_vld_in = eth_data_rx_TVALID.read();
}

void Ethernet_demux::thread_eth_data_rx_V_user_V_0_vld_out() {
    eth_data_rx_V_user_V_0_vld_out = eth_data_rx_V_user_V_0_state.read()[0];
}

void Ethernet_demux::thread_ethernet_demux_state_out_V() {
    ethernet_demux_state_out_V = trunc_ln209_reg_323_pp0_iter1_reg.read();
}

void Ethernet_demux::thread_mgmt_data_out_TDATA() {
    mgmt_data_out_TDATA = mgmt_data_out_V_data_V_1_data_out.read();
}

void Ethernet_demux::thread_mgmt_data_out_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_5, state_V_load_reg_319.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_5, state_V_load_reg_319_pp0_iter1_reg.read())))) {
        mgmt_data_out_TDATA_blk_n = mgmt_data_out_V_data_V_1_state.read()[1];
    } else {
        mgmt_data_out_TDATA_blk_n = ap_const_logic_1;
    }
}

void Ethernet_demux::thread_mgmt_data_out_TKEEP() {
    mgmt_data_out_TKEEP = mgmt_data_out_V_keep_V_1_data_out.read();
}

void Ethernet_demux::thread_mgmt_data_out_TLAST() {
    mgmt_data_out_TLAST = mgmt_data_out_V_last_V_1_data_out.read();
}

void Ethernet_demux::thread_mgmt_data_out_TUSER() {
    mgmt_data_out_TUSER = mgmt_data_out_V_user_V_1_data_out.read();
}

void Ethernet_demux::thread_mgmt_data_out_TVALID() {
    mgmt_data_out_TVALID = mgmt_data_out_V_last_V_1_state.read()[0];
}

void Ethernet_demux::thread_mgmt_data_out_V_data_V_1_ack_in() {
    mgmt_data_out_V_data_V_1_ack_in = mgmt_data_out_V_data_V_1_state.read()[1];
}

void Ethernet_demux::thread_mgmt_data_out_V_data_V_1_ack_out() {
    mgmt_data_out_V_data_V_1_ack_out = mgmt_data_out_TREADY.read();
}

void Ethernet_demux::thread_mgmt_data_out_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_data_V_1_sel.read())) {
        mgmt_data_out_V_data_V_1_data_out = mgmt_data_out_V_data_V_1_payload_B.read();
    } else {
        mgmt_data_out_V_data_V_1_data_out = mgmt_data_out_V_data_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_mgmt_data_out_V_data_V_1_load_A() {
    mgmt_data_out_V_data_V_1_load_A = (mgmt_data_out_V_data_V_1_state_cmp_full.read() & ~mgmt_data_out_V_data_V_1_sel_wr.read());
}

void Ethernet_demux::thread_mgmt_data_out_V_data_V_1_load_B() {
    mgmt_data_out_V_data_V_1_load_B = (mgmt_data_out_V_data_V_1_sel_wr.read() & mgmt_data_out_V_data_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_mgmt_data_out_V_data_V_1_sel() {
    mgmt_data_out_V_data_V_1_sel = mgmt_data_out_V_data_V_1_sel_rd.read();
}

void Ethernet_demux::thread_mgmt_data_out_V_data_V_1_state_cmp_full() {
    mgmt_data_out_V_data_V_1_state_cmp_full =  (sc_logic) ((!mgmt_data_out_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(mgmt_data_out_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_mgmt_data_out_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_5, state_V_load_reg_319.read()) && 
         !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        mgmt_data_out_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        mgmt_data_out_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_mgmt_data_out_V_data_V_1_vld_out() {
    mgmt_data_out_V_data_V_1_vld_out = mgmt_data_out_V_data_V_1_state.read()[0];
}

void Ethernet_demux::thread_mgmt_data_out_V_keep_V_1_ack_in() {
    mgmt_data_out_V_keep_V_1_ack_in = mgmt_data_out_V_keep_V_1_state.read()[1];
}

void Ethernet_demux::thread_mgmt_data_out_V_keep_V_1_ack_out() {
    mgmt_data_out_V_keep_V_1_ack_out = mgmt_data_out_TREADY.read();
}

void Ethernet_demux::thread_mgmt_data_out_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_keep_V_1_sel.read())) {
        mgmt_data_out_V_keep_V_1_data_out = mgmt_data_out_V_keep_V_1_payload_B.read();
    } else {
        mgmt_data_out_V_keep_V_1_data_out = mgmt_data_out_V_keep_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_mgmt_data_out_V_keep_V_1_load_A() {
    mgmt_data_out_V_keep_V_1_load_A = (mgmt_data_out_V_keep_V_1_state_cmp_full.read() & ~mgmt_data_out_V_keep_V_1_sel_wr.read());
}

void Ethernet_demux::thread_mgmt_data_out_V_keep_V_1_load_B() {
    mgmt_data_out_V_keep_V_1_load_B = (mgmt_data_out_V_keep_V_1_sel_wr.read() & mgmt_data_out_V_keep_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_mgmt_data_out_V_keep_V_1_sel() {
    mgmt_data_out_V_keep_V_1_sel = mgmt_data_out_V_keep_V_1_sel_rd.read();
}

void Ethernet_demux::thread_mgmt_data_out_V_keep_V_1_state_cmp_full() {
    mgmt_data_out_V_keep_V_1_state_cmp_full =  (sc_logic) ((!mgmt_data_out_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(mgmt_data_out_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_mgmt_data_out_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_5, state_V_load_reg_319.read()) && 
         !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        mgmt_data_out_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        mgmt_data_out_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_mgmt_data_out_V_keep_V_1_vld_out() {
    mgmt_data_out_V_keep_V_1_vld_out = mgmt_data_out_V_keep_V_1_state.read()[0];
}

void Ethernet_demux::thread_mgmt_data_out_V_last_V_1_ack_in() {
    mgmt_data_out_V_last_V_1_ack_in = mgmt_data_out_V_last_V_1_state.read()[1];
}

void Ethernet_demux::thread_mgmt_data_out_V_last_V_1_ack_out() {
    mgmt_data_out_V_last_V_1_ack_out = mgmt_data_out_TREADY.read();
}

void Ethernet_demux::thread_mgmt_data_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_last_V_1_sel.read())) {
        mgmt_data_out_V_last_V_1_data_out = mgmt_data_out_V_last_V_1_payload_B.read();
    } else {
        mgmt_data_out_V_last_V_1_data_out = mgmt_data_out_V_last_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_mgmt_data_out_V_last_V_1_load_A() {
    mgmt_data_out_V_last_V_1_load_A = (mgmt_data_out_V_last_V_1_state_cmp_full.read() & ~mgmt_data_out_V_last_V_1_sel_wr.read());
}

void Ethernet_demux::thread_mgmt_data_out_V_last_V_1_load_B() {
    mgmt_data_out_V_last_V_1_load_B = (mgmt_data_out_V_last_V_1_sel_wr.read() & mgmt_data_out_V_last_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_mgmt_data_out_V_last_V_1_sel() {
    mgmt_data_out_V_last_V_1_sel = mgmt_data_out_V_last_V_1_sel_rd.read();
}

void Ethernet_demux::thread_mgmt_data_out_V_last_V_1_state_cmp_full() {
    mgmt_data_out_V_last_V_1_state_cmp_full =  (sc_logic) ((!mgmt_data_out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(mgmt_data_out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_mgmt_data_out_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_5, state_V_load_reg_319.read()) && 
         !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        mgmt_data_out_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        mgmt_data_out_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_mgmt_data_out_V_last_V_1_vld_out() {
    mgmt_data_out_V_last_V_1_vld_out = mgmt_data_out_V_last_V_1_state.read()[0];
}

void Ethernet_demux::thread_mgmt_data_out_V_user_V_1_ack_in() {
    mgmt_data_out_V_user_V_1_ack_in = mgmt_data_out_V_user_V_1_state.read()[1];
}

void Ethernet_demux::thread_mgmt_data_out_V_user_V_1_ack_out() {
    mgmt_data_out_V_user_V_1_ack_out = mgmt_data_out_TREADY.read();
}

void Ethernet_demux::thread_mgmt_data_out_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, mgmt_data_out_V_user_V_1_sel.read())) {
        mgmt_data_out_V_user_V_1_data_out = mgmt_data_out_V_user_V_1_payload_B.read();
    } else {
        mgmt_data_out_V_user_V_1_data_out = mgmt_data_out_V_user_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_mgmt_data_out_V_user_V_1_load_A() {
    mgmt_data_out_V_user_V_1_load_A = (mgmt_data_out_V_user_V_1_state_cmp_full.read() & ~mgmt_data_out_V_user_V_1_sel_wr.read());
}

void Ethernet_demux::thread_mgmt_data_out_V_user_V_1_load_B() {
    mgmt_data_out_V_user_V_1_load_B = (mgmt_data_out_V_user_V_1_sel_wr.read() & mgmt_data_out_V_user_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_mgmt_data_out_V_user_V_1_sel() {
    mgmt_data_out_V_user_V_1_sel = mgmt_data_out_V_user_V_1_sel_rd.read();
}

void Ethernet_demux::thread_mgmt_data_out_V_user_V_1_state_cmp_full() {
    mgmt_data_out_V_user_V_1_state_cmp_full =  (sc_logic) ((!mgmt_data_out_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(mgmt_data_out_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_mgmt_data_out_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_5, state_V_load_reg_319.read()) && 
         !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        mgmt_data_out_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        mgmt_data_out_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_mgmt_data_out_V_user_V_1_vld_out() {
    mgmt_data_out_V_user_V_1_vld_out = mgmt_data_out_V_user_V_1_state.read()[0];
}

void Ethernet_demux::thread_p_Result_s_fu_306_p3() {
    p_Result_s_fu_306_p3 = esl_concat<32,96>(ap_const_lv32_0, trunc_ln647_reg_363.read());
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_1_ack_in() {
    rx_tstamp_out_V_V_1_ack_in = rx_tstamp_out_V_V_1_state.read()[1];
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_1_ack_out() {
    rx_tstamp_out_V_V_1_ack_out = rx_tstamp_out_V_V_TREADY.read();
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, rx_tstamp_out_V_V_1_sel.read())) {
        rx_tstamp_out_V_V_1_data_out = rx_tstamp_out_V_V_1_payload_B.read();
    } else {
        rx_tstamp_out_V_V_1_data_out = rx_tstamp_out_V_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_1_load_A() {
    rx_tstamp_out_V_V_1_load_A = (rx_tstamp_out_V_V_1_state_cmp_full.read() & ~rx_tstamp_out_V_V_1_sel_wr.read());
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_1_load_B() {
    rx_tstamp_out_V_V_1_load_B = (rx_tstamp_out_V_V_1_sel_wr.read() & rx_tstamp_out_V_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_1_sel() {
    rx_tstamp_out_V_V_1_sel = rx_tstamp_out_V_V_1_sel_rd.read();
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_1_state_cmp_full() {
    rx_tstamp_out_V_V_1_state_cmp_full =  (sc_logic) ((!rx_tstamp_out_V_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(rx_tstamp_out_V_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319.read()) && 
         !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        rx_tstamp_out_V_V_1_vld_in = ap_const_logic_1;
    } else {
        rx_tstamp_out_V_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_1_vld_out() {
    rx_tstamp_out_V_V_1_vld_out = rx_tstamp_out_V_V_1_state.read()[0];
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_TDATA() {
    rx_tstamp_out_V_V_TDATA = rx_tstamp_out_V_V_1_data_out.read();
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319_pp0_iter1_reg.read())))) {
        rx_tstamp_out_V_V_TDATA_blk_n = rx_tstamp_out_V_V_1_state.read()[1];
    } else {
        rx_tstamp_out_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Ethernet_demux::thread_rx_tstamp_out_V_V_TVALID() {
    rx_tstamp_out_V_V_TVALID = rx_tstamp_out_V_V_1_state.read()[0];
}

void Ethernet_demux::thread_select_ln276_fu_270_p3() {
    select_ln276_fu_270_p3 = (!eth_data_rx_V_last_V_0_data_out.read()[0].is_01())? sc_lv<4>(): ((eth_data_rx_V_last_V_0_data_out.read()[0].to_bool())? ap_const_lv4_0: ap_const_lv4_4);
}

void Ethernet_demux::thread_select_ln293_fu_256_p3() {
    select_ln293_fu_256_p3 = (!eth_data_rx_V_last_V_0_data_out.read()[0].is_01())? sc_lv<4>(): ((eth_data_rx_V_last_V_0_data_out.read()[0].to_bool())? ap_const_lv4_0: ap_const_lv4_5);
}

void Ethernet_demux::thread_select_ln304_fu_242_p3() {
    select_ln304_fu_242_p3 = (!eth_data_rx_V_last_V_0_data_out.read()[0].is_01())? sc_lv<4>(): ((eth_data_rx_V_last_V_0_data_out.read()[0].to_bool())? ap_const_lv4_0: ap_const_lv4_6);
}

void Ethernet_demux::thread_select_ln313_fu_228_p3() {
    select_ln313_fu_228_p3 = (!eth_data_rx_V_last_V_0_data_out.read()[0].is_01())? sc_lv<4>(): ((eth_data_rx_V_last_V_0_data_out.read()[0].to_bool())? ap_const_lv4_0: ap_const_lv4_7);
}

void Ethernet_demux::thread_state_V_load_load_fu_216_p1() {
    state_V_load_load_fu_216_p1 = state_V.read();
}

void Ethernet_demux::thread_sync_data_out_TDATA() {
    sync_data_out_TDATA = sync_data_out_V_data_V_1_data_out.read();
}

void Ethernet_demux::thread_sync_data_out_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319.read())) || 
         (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
          esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319_pp0_iter1_reg.read())))) {
        sync_data_out_TDATA_blk_n = sync_data_out_V_data_V_1_state.read()[1];
    } else {
        sync_data_out_TDATA_blk_n = ap_const_logic_1;
    }
}

void Ethernet_demux::thread_sync_data_out_TKEEP() {
    sync_data_out_TKEEP = sync_data_out_V_keep_V_1_data_out.read();
}

void Ethernet_demux::thread_sync_data_out_TLAST() {
    sync_data_out_TLAST = sync_data_out_V_last_V_1_data_out.read();
}

void Ethernet_demux::thread_sync_data_out_TUSER() {
    sync_data_out_TUSER = sync_data_out_V_user_V_1_data_out.read();
}

void Ethernet_demux::thread_sync_data_out_TVALID() {
    sync_data_out_TVALID = sync_data_out_V_last_V_1_state.read()[0];
}

void Ethernet_demux::thread_sync_data_out_V_data_V_1_ack_in() {
    sync_data_out_V_data_V_1_ack_in = sync_data_out_V_data_V_1_state.read()[1];
}

void Ethernet_demux::thread_sync_data_out_V_data_V_1_ack_out() {
    sync_data_out_V_data_V_1_ack_out = sync_data_out_TREADY.read();
}

void Ethernet_demux::thread_sync_data_out_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_data_V_1_sel.read())) {
        sync_data_out_V_data_V_1_data_out = sync_data_out_V_data_V_1_payload_B.read();
    } else {
        sync_data_out_V_data_V_1_data_out = sync_data_out_V_data_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_sync_data_out_V_data_V_1_load_A() {
    sync_data_out_V_data_V_1_load_A = (sync_data_out_V_data_V_1_state_cmp_full.read() & ~sync_data_out_V_data_V_1_sel_wr.read());
}

void Ethernet_demux::thread_sync_data_out_V_data_V_1_load_B() {
    sync_data_out_V_data_V_1_load_B = (sync_data_out_V_data_V_1_sel_wr.read() & sync_data_out_V_data_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_sync_data_out_V_data_V_1_sel() {
    sync_data_out_V_data_V_1_sel = sync_data_out_V_data_V_1_sel_rd.read();
}

void Ethernet_demux::thread_sync_data_out_V_data_V_1_state_cmp_full() {
    sync_data_out_V_data_V_1_state_cmp_full =  (sc_logic) ((!sync_data_out_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(sync_data_out_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_sync_data_out_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319.read()) && 
         !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        sync_data_out_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        sync_data_out_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_sync_data_out_V_data_V_1_vld_out() {
    sync_data_out_V_data_V_1_vld_out = sync_data_out_V_data_V_1_state.read()[0];
}

void Ethernet_demux::thread_sync_data_out_V_keep_V_1_ack_in() {
    sync_data_out_V_keep_V_1_ack_in = sync_data_out_V_keep_V_1_state.read()[1];
}

void Ethernet_demux::thread_sync_data_out_V_keep_V_1_ack_out() {
    sync_data_out_V_keep_V_1_ack_out = sync_data_out_TREADY.read();
}

void Ethernet_demux::thread_sync_data_out_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_keep_V_1_sel.read())) {
        sync_data_out_V_keep_V_1_data_out = sync_data_out_V_keep_V_1_payload_B.read();
    } else {
        sync_data_out_V_keep_V_1_data_out = sync_data_out_V_keep_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_sync_data_out_V_keep_V_1_load_A() {
    sync_data_out_V_keep_V_1_load_A = (sync_data_out_V_keep_V_1_state_cmp_full.read() & ~sync_data_out_V_keep_V_1_sel_wr.read());
}

void Ethernet_demux::thread_sync_data_out_V_keep_V_1_load_B() {
    sync_data_out_V_keep_V_1_load_B = (sync_data_out_V_keep_V_1_sel_wr.read() & sync_data_out_V_keep_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_sync_data_out_V_keep_V_1_sel() {
    sync_data_out_V_keep_V_1_sel = sync_data_out_V_keep_V_1_sel_rd.read();
}

void Ethernet_demux::thread_sync_data_out_V_keep_V_1_state_cmp_full() {
    sync_data_out_V_keep_V_1_state_cmp_full =  (sc_logic) ((!sync_data_out_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(sync_data_out_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_sync_data_out_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319.read()) && 
         !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        sync_data_out_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        sync_data_out_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_sync_data_out_V_keep_V_1_vld_out() {
    sync_data_out_V_keep_V_1_vld_out = sync_data_out_V_keep_V_1_state.read()[0];
}

void Ethernet_demux::thread_sync_data_out_V_last_V_1_ack_in() {
    sync_data_out_V_last_V_1_ack_in = sync_data_out_V_last_V_1_state.read()[1];
}

void Ethernet_demux::thread_sync_data_out_V_last_V_1_ack_out() {
    sync_data_out_V_last_V_1_ack_out = sync_data_out_TREADY.read();
}

void Ethernet_demux::thread_sync_data_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_last_V_1_sel.read())) {
        sync_data_out_V_last_V_1_data_out = sync_data_out_V_last_V_1_payload_B.read();
    } else {
        sync_data_out_V_last_V_1_data_out = sync_data_out_V_last_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_sync_data_out_V_last_V_1_load_A() {
    sync_data_out_V_last_V_1_load_A = (sync_data_out_V_last_V_1_state_cmp_full.read() & ~sync_data_out_V_last_V_1_sel_wr.read());
}

void Ethernet_demux::thread_sync_data_out_V_last_V_1_load_B() {
    sync_data_out_V_last_V_1_load_B = (sync_data_out_V_last_V_1_sel_wr.read() & sync_data_out_V_last_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_sync_data_out_V_last_V_1_sel() {
    sync_data_out_V_last_V_1_sel = sync_data_out_V_last_V_1_sel_rd.read();
}

void Ethernet_demux::thread_sync_data_out_V_last_V_1_state_cmp_full() {
    sync_data_out_V_last_V_1_state_cmp_full =  (sc_logic) ((!sync_data_out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(sync_data_out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_sync_data_out_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319.read()) && 
         !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        sync_data_out_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        sync_data_out_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_sync_data_out_V_last_V_1_vld_out() {
    sync_data_out_V_last_V_1_vld_out = sync_data_out_V_last_V_1_state.read()[0];
}

void Ethernet_demux::thread_sync_data_out_V_user_V_1_ack_in() {
    sync_data_out_V_user_V_1_ack_in = sync_data_out_V_user_V_1_state.read()[1];
}

void Ethernet_demux::thread_sync_data_out_V_user_V_1_ack_out() {
    sync_data_out_V_user_V_1_ack_out = sync_data_out_TREADY.read();
}

void Ethernet_demux::thread_sync_data_out_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, sync_data_out_V_user_V_1_sel.read())) {
        sync_data_out_V_user_V_1_data_out = sync_data_out_V_user_V_1_payload_B.read();
    } else {
        sync_data_out_V_user_V_1_data_out = sync_data_out_V_user_V_1_payload_A.read();
    }
}

void Ethernet_demux::thread_sync_data_out_V_user_V_1_load_A() {
    sync_data_out_V_user_V_1_load_A = (sync_data_out_V_user_V_1_state_cmp_full.read() & ~sync_data_out_V_user_V_1_sel_wr.read());
}

void Ethernet_demux::thread_sync_data_out_V_user_V_1_load_B() {
    sync_data_out_V_user_V_1_load_B = (sync_data_out_V_user_V_1_sel_wr.read() & sync_data_out_V_user_V_1_state_cmp_full.read());
}

void Ethernet_demux::thread_sync_data_out_V_user_V_1_sel() {
    sync_data_out_V_user_V_1_sel = sync_data_out_V_user_V_1_sel_rd.read();
}

void Ethernet_demux::thread_sync_data_out_V_user_V_1_state_cmp_full() {
    sync_data_out_V_user_V_1_state_cmp_full =  (sc_logic) ((!sync_data_out_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(sync_data_out_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void Ethernet_demux::thread_sync_data_out_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_6, state_V_load_reg_319.read()) && 
         !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
        sync_data_out_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        sync_data_out_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void Ethernet_demux::thread_sync_data_out_V_user_V_1_vld_out() {
    sync_data_out_V_user_V_1_vld_out = sync_data_out_V_user_V_1_state.read()[0];
}

void Ethernet_demux::thread_trunc_ln209_fu_220_p1() {
    trunc_ln209_fu_220_p1 = state_V.read().range(3-1, 0);
}

void Ethernet_demux::thread_trunc_ln647_fu_290_p1() {
    trunc_ln647_fu_290_p1 = eth_data_rx_V_data_V_0_data_out.read().range(96-1, 0);
}

void Ethernet_demux::thread_ap_NS_iter0_fsm() {
    switch (ap_CS_iter0_fsm.read().to_uint64()) {
        case 0 : 
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
break;
        default : 
            ap_NS_iter0_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void Ethernet_demux::thread_ap_NS_iter1_fsm() {
    switch (ap_CS_iter1_fsm.read().to_uint64()) {
        case 0 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read()))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else if ((!(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) && (!esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) || 
  (esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && 
   ((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
     esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || 
    (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
     esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || 
    (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
     esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || 
    (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
     esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || 
    (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
     esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read()))))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter0_fsm_state1, ap_CS_iter0_fsm.read()) && !((esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_7) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_6) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_5) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(state_V.read(), ap_const_lv4_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,4,4>(ap_const_lv4_0, state_V.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, eth_data_rx_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter1_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void Ethernet_demux::thread_ap_NS_iter2_fsm() {
    switch (ap_CS_iter2_fsm.read().to_uint64()) {
        case 0 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && esl_seteq<1,1,1>(ap_block_state2_io.read(), ap_const_boolean_0) && !(esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else if ((((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) || 
  !esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read())) && !(esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            }
            break;
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_ST_iter1_fsm_state2, ap_CS_iter1_fsm.read()) && !(esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()) || (esl_seteq<1,1,1>(ap_ST_iter2_fsm_state3, ap_CS_iter2_fsm.read()) && 
  (esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, cu_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, sync_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_data_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_user_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_keep_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, mgmt_data_out_V_last_V_1_state.read()) || 
   esl_seteq<1,2,2>(ap_const_lv2_1, rx_tstamp_out_V_V_1_state.read()) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, cu_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, cu_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, sync_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, sync_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_data_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_user_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_keep_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, mgmt_data_out_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, mgmt_data_out_V_last_V_1_state.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, rx_tstamp_out_V_V_TREADY.read()) && 
    esl_seteq<1,2,2>(ap_const_lv2_3, rx_tstamp_out_V_V_1_state.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())))))) {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            } else {
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter2_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void Ethernet_demux::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eth_data_rx_TDATA\" :  \"" << eth_data_rx_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eth_data_rx_TVALID\" :  \"" << eth_data_rx_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"eth_data_rx_TREADY\" :  \"" << eth_data_rx_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eth_data_rx_TUSER\" :  \"" << eth_data_rx_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eth_data_rx_TKEEP\" :  \"" << eth_data_rx_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"eth_data_rx_TLAST\" :  \"" << eth_data_rx_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cu_data_out_TDATA\" :  \"" << cu_data_out_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cu_data_out_TVALID\" :  \"" << cu_data_out_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"cu_data_out_TREADY\" :  \"" << cu_data_out_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cu_data_out_TUSER\" :  \"" << cu_data_out_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cu_data_out_TKEEP\" :  \"" << cu_data_out_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cu_data_out_TLAST\" :  \"" << cu_data_out_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sync_data_out_TDATA\" :  \"" << sync_data_out_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sync_data_out_TVALID\" :  \"" << sync_data_out_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sync_data_out_TREADY\" :  \"" << sync_data_out_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sync_data_out_TUSER\" :  \"" << sync_data_out_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sync_data_out_TKEEP\" :  \"" << sync_data_out_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sync_data_out_TLAST\" :  \"" << sync_data_out_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mgmt_data_out_TDATA\" :  \"" << mgmt_data_out_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mgmt_data_out_TVALID\" :  \"" << mgmt_data_out_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mgmt_data_out_TREADY\" :  \"" << mgmt_data_out_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mgmt_data_out_TUSER\" :  \"" << mgmt_data_out_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mgmt_data_out_TKEEP\" :  \"" << mgmt_data_out_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mgmt_data_out_TLAST\" :  \"" << mgmt_data_out_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"rx_tstamp_in_V\" :  \"" << rx_tstamp_in_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"rx_tstamp_out_V_V_TDATA\" :  \"" << rx_tstamp_out_V_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"rx_tstamp_out_V_V_TVALID\" :  \"" << rx_tstamp_out_V_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"rx_tstamp_out_V_V_TREADY\" :  \"" << rx_tstamp_out_V_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ethernet_demux_state_out_V\" :  \"" << ethernet_demux_state_out_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

