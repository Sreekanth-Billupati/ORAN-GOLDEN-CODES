// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ethernet_mux_HH_
#define _ethernet_mux_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct ethernet_mux : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<128> > ether_mux_data_in_TDATA;
    sc_in< sc_logic > ether_mux_data_in_TVALID;
    sc_out< sc_logic > ether_mux_data_in_TREADY;
    sc_in< sc_lv<1> > ether_mux_data_in_TUSER;
    sc_in< sc_lv<16> > ether_mux_data_in_TKEEP;
    sc_in< sc_lv<1> > ether_mux_data_in_TLAST;
    sc_in< sc_lv<128> > sync_data_in_TDATA;
    sc_in< sc_logic > sync_data_in_TVALID;
    sc_out< sc_logic > sync_data_in_TREADY;
    sc_in< sc_lv<1> > sync_data_in_TUSER;
    sc_in< sc_lv<16> > sync_data_in_TKEEP;
    sc_in< sc_lv<1> > sync_data_in_TLAST;
    sc_in< sc_lv<128> > mgmt_data_in_TDATA;
    sc_in< sc_logic > mgmt_data_in_TVALID;
    sc_out< sc_logic > mgmt_data_in_TREADY;
    sc_in< sc_lv<1> > mgmt_data_in_TUSER;
    sc_in< sc_lv<16> > mgmt_data_in_TKEEP;
    sc_in< sc_lv<1> > mgmt_data_in_TLAST;
    sc_out< sc_lv<128> > eth_data_out_TDATA;
    sc_out< sc_logic > eth_data_out_TVALID;
    sc_in< sc_logic > eth_data_out_TREADY;
    sc_out< sc_lv<1> > eth_data_out_TUSER;
    sc_out< sc_lv<16> > eth_data_out_TKEEP;
    sc_out< sc_lv<1> > eth_data_out_TLAST;
    sc_out< sc_lv<16> > ptp_tag_filed_out_V;
    sc_out< sc_logic > ptp_tag_filed_out_V_ap_vld;


    // Module declarations
    ethernet_mux(sc_module_name name);
    SC_HAS_PROCESS(ethernet_mux);

    ~ethernet_mux();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ether_mux_data_in_TDATA_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_68_p6;
    sc_signal< sc_lv<1> > tmp_1_nbreadreq_fu_82_p6;
    sc_signal< sc_logic > sync_data_in_TDATA_blk_n;
    sc_signal< sc_logic > mgmt_data_in_TDATA_blk_n;
    sc_signal< sc_lv<1> > tmp_2_nbreadreq_fu_96_p6;
    sc_signal< sc_logic > eth_data_out_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > tmp_reg_219;
    sc_signal< sc_lv<1> > tmp_1_reg_223;
    sc_signal< sc_lv<1> > tmp_2_reg_227;
    sc_signal< bool > ap_predicate_op9_read_state1;
    sc_signal< bool > ap_predicate_op14_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_predicate_op48_write_state2;
    sc_signal< bool > ap_predicate_op52_write_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<128> > tmp_data_V_2_reg_231;
    sc_signal< sc_lv<1> > tmp_user_V_2_reg_236;
    sc_signal< sc_lv<16> > tmp_keep_V_2_reg_241;
    sc_signal< sc_lv<1> > tmp_last_V_2_reg_246;
    sc_signal< sc_lv<128> > tmp_data_V_1_reg_251;
    sc_signal< sc_lv<1> > tmp_user_V_1_reg_256;
    sc_signal< sc_lv<16> > tmp_keep_V_1_reg_261;
    sc_signal< sc_lv<1> > tmp_last_V_1_reg_266;
    sc_signal< sc_lv<128> > tmp_data_V_reg_271;
    sc_signal< sc_lv<1> > tmp_user_V_reg_276;
    sc_signal< sc_lv<16> > tmp_keep_V_reg_281;
    sc_signal< sc_lv<1> > tmp_last_V_reg_286;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_181;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_5;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_io();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_condition_181();
    void thread_ap_enable_pp0();
    void thread_ap_idle_pp0();
    void thread_ap_predicate_op14_read_state1();
    void thread_ap_predicate_op48_write_state2();
    void thread_ap_predicate_op52_write_state2();
    void thread_ap_predicate_op9_read_state1();
    void thread_ap_reset_idle_pp0();
    void thread_ap_rst_n_inv();
    void thread_eth_data_out_TDATA();
    void thread_eth_data_out_TDATA_blk_n();
    void thread_eth_data_out_TKEEP();
    void thread_eth_data_out_TLAST();
    void thread_eth_data_out_TUSER();
    void thread_eth_data_out_TVALID();
    void thread_ether_mux_data_in_TDATA_blk_n();
    void thread_ether_mux_data_in_TREADY();
    void thread_mgmt_data_in_TDATA_blk_n();
    void thread_mgmt_data_in_TREADY();
    void thread_ptp_tag_filed_out_V();
    void thread_ptp_tag_filed_out_V_ap_vld();
    void thread_sync_data_in_TDATA_blk_n();
    void thread_sync_data_in_TREADY();
    void thread_tmp_1_nbreadreq_fu_82_p6();
    void thread_tmp_2_nbreadreq_fu_96_p6();
    void thread_tmp_nbreadreq_fu_68_p6();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
