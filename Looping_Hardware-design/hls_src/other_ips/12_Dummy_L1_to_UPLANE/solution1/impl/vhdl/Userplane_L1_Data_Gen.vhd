-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Userplane_L1_Data_Gen is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    L1_data_out_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    L1_data_out_V_TVALID : OUT STD_LOGIC;
    L1_data_out_V_TREADY : IN STD_LOGIC;
    st_out_V : OUT STD_LOGIC_VECTOR (3 downto 0);
    symbol_number_V : OUT STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of Userplane_L1_Data_Gen is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Userplane_L1_Data_Gen,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.075750,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=165,HLS_SYN_LUT=230,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv9_124 : STD_LOGIC_VECTOR (8 downto 0) := "100100100";
    constant ap_const_lv9_123 : STD_LOGIC_VECTOR (8 downto 0) := "100100011";
    constant ap_const_lv9_125 : STD_LOGIC_VECTOR (8 downto 0) := "100100101";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv7_18 : STD_LOGIC_VECTOR (6 downto 0) := "0011000";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv7_56 : STD_LOGIC_VECTOR (6 downto 0) := "1010110";
    constant ap_const_lv12_45 : STD_LOGIC_VECTOR (11 downto 0) := "000001000101";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv38_1124015C1 : STD_LOGIC_VECTOR (37 downto 0) := "00000100010010010000000001010111000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal L1_data_out_V_1_data_in : STD_LOGIC_VECTOR (63 downto 0);
    signal L1_data_out_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal L1_data_out_V_1_vld_in : STD_LOGIC;
    signal L1_data_out_V_1_vld_out : STD_LOGIC;
    signal L1_data_out_V_1_ack_in : STD_LOGIC;
    signal L1_data_out_V_1_ack_out : STD_LOGIC;
    signal L1_data_out_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal L1_data_out_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal L1_data_out_V_1_sel_rd : STD_LOGIC := '0';
    signal L1_data_out_V_1_sel_wr : STD_LOGIC := '0';
    signal L1_data_out_V_1_sel : STD_LOGIC;
    signal L1_data_out_V_1_load_A : STD_LOGIC;
    signal L1_data_out_V_1_load_B : STD_LOGIC;
    signal L1_data_out_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal L1_data_out_V_1_state_cmp_full : STD_LOGIC;
    signal data_src_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal sym_count_V : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal section_count_V : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal L1_data_out_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal data_src_state_load_reg_311 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal data_src_state_load_reg_311_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal data_src_state_load_load_fu_119_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal t_V_reg_316 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_V_reg_316_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln215_fu_137_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln215_reg_322 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_280_p7 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_297_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_storemerge1_phi_fu_112_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln68_fu_183_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge1_reg_109 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_fu_141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_fu_165_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln700_1_fu_147_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln879_1_fu_177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln10_1_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln10_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln215_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_fu_214_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln215_1_fu_228_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln215_2_fu_240_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln215_3_fu_248_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln215_4_fu_260_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln215_5_fu_268_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln215_fu_236_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_1_fu_256_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln215_fu_276_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_192 : BOOLEAN;
    signal ap_condition_187 : BOOLEAN;
    signal ap_condition_165 : BOOLEAN;
    signal ap_condition_178 : BOOLEAN;


begin




    L1_data_out_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                L1_data_out_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = L1_data_out_V_1_ack_out) and (ap_const_logic_1 = L1_data_out_V_1_vld_out))) then 
                                        L1_data_out_V_1_sel_rd <= not(L1_data_out_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    L1_data_out_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                L1_data_out_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = L1_data_out_V_1_ack_in) and (ap_const_logic_1 = L1_data_out_V_1_vld_in))) then 
                                        L1_data_out_V_1_sel_wr <= not(L1_data_out_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    L1_data_out_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                L1_data_out_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = L1_data_out_V_1_vld_in) and (ap_const_lv2_2 = L1_data_out_V_1_state)) or ((ap_const_logic_0 = L1_data_out_V_1_vld_in) and (ap_const_lv2_3 = L1_data_out_V_1_state) and (ap_const_logic_1 = L1_data_out_V_1_ack_out)))) then 
                    L1_data_out_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_1 = L1_data_out_V_1_state)) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state) and (ap_const_logic_1 = L1_data_out_V_1_vld_in)))) then 
                    L1_data_out_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = L1_data_out_V_1_vld_in) and (ap_const_logic_1 = L1_data_out_V_1_ack_out))) and not(((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_logic_1 = L1_data_out_V_1_vld_in))) and (ap_const_lv2_3 = L1_data_out_V_1_state)) or ((ap_const_lv2_1 = L1_data_out_V_1_state) and (ap_const_logic_1 = L1_data_out_V_1_ack_out)) or ((ap_const_lv2_2 = L1_data_out_V_1_state) and (ap_const_logic_1 = L1_data_out_V_1_vld_in)))) then 
                    L1_data_out_V_1_state <= ap_const_lv2_3;
                else 
                    L1_data_out_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    data_src_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_src_state <= ap_const_lv2_0;
            else
                if ((ap_const_boolean_1 = ap_condition_165)) then
                    if ((data_src_state_load_load_fu_119_p1 = ap_const_lv2_0)) then 
                        data_src_state <= ap_const_lv2_1;
                    elsif ((data_src_state_load_load_fu_119_p1 = ap_const_lv2_1)) then 
                        data_src_state <= ap_phi_mux_storemerge1_phi_fu_112_p4;
                    elsif ((data_src_state_load_load_fu_119_p1 = ap_const_lv2_2)) then 
                        data_src_state <= ap_const_lv2_0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    section_count_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_178)) then
                if ((icmp_ln879_fu_141_p2 = ap_const_lv1_1)) then 
                    section_count_V <= ap_const_lv4_0;
                elsif ((icmp_ln879_fu_141_p2 = ap_const_lv1_0)) then 
                    section_count_V <= add_ln700_1_fu_147_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = L1_data_out_V_1_load_A)) then
                L1_data_out_V_1_payload_A <= L1_data_out_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = L1_data_out_V_1_load_B)) then
                L1_data_out_V_1_payload_B <= L1_data_out_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                data_src_state_load_reg_311 <= data_src_state;
                data_src_state_load_reg_311_pp0_iter1_reg <= data_src_state_load_reg_311;
                t_V_reg_316 <= sym_count_V;
                t_V_reg_316_pp0_iter1_reg <= t_V_reg_316;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_src_state_load_load_fu_119_p1 = ap_const_lv2_1) and (icmp_ln879_fu_141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sym_count_V <= add_ln700_fu_165_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_src_state_load_load_fu_119_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln215_reg_322 <= trunc_ln215_fu_137_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    L1_data_out_V_1_ack_in <= L1_data_out_V_1_state(1);
    L1_data_out_V_1_ack_out <= L1_data_out_V_TREADY;

    L1_data_out_V_1_data_in_assign_proc : process(data_src_state_load_reg_311, tmp_1_fu_280_p7, tmp_fu_297_p4, ap_condition_192)
    begin
        if ((ap_const_boolean_1 = ap_condition_192)) then
            if ((data_src_state_load_reg_311 = ap_const_lv2_0)) then 
                L1_data_out_V_1_data_in <= tmp_fu_297_p4;
            elsif ((data_src_state_load_reg_311 = ap_const_lv2_1)) then 
                L1_data_out_V_1_data_in <= tmp_1_fu_280_p7;
            else 
                L1_data_out_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            L1_data_out_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    L1_data_out_V_1_data_out_assign_proc : process(L1_data_out_V_1_payload_A, L1_data_out_V_1_payload_B, L1_data_out_V_1_sel)
    begin
        if ((ap_const_logic_1 = L1_data_out_V_1_sel)) then 
            L1_data_out_V_1_data_out <= L1_data_out_V_1_payload_B;
        else 
            L1_data_out_V_1_data_out <= L1_data_out_V_1_payload_A;
        end if; 
    end process;

    L1_data_out_V_1_load_A <= (not(L1_data_out_V_1_sel_wr) and L1_data_out_V_1_state_cmp_full);
    L1_data_out_V_1_load_B <= (L1_data_out_V_1_state_cmp_full and L1_data_out_V_1_sel_wr);
    L1_data_out_V_1_sel <= L1_data_out_V_1_sel_rd;
    L1_data_out_V_1_state_cmp_full <= '0' when (L1_data_out_V_1_state = ap_const_lv2_1) else '1';

    L1_data_out_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, data_src_state_load_reg_311, ap_block_pp0_stage0_11001)
    begin
        if ((((data_src_state_load_reg_311 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((data_src_state_load_reg_311 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            L1_data_out_V_1_vld_in <= ap_const_logic_1;
        else 
            L1_data_out_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    L1_data_out_V_1_vld_out <= L1_data_out_V_1_state(0);
    L1_data_out_V_TDATA <= L1_data_out_V_1_data_out;

    L1_data_out_V_TDATA_blk_n_assign_proc : process(L1_data_out_V_1_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, data_src_state_load_reg_311, ap_enable_reg_pp0_iter2, data_src_state_load_reg_311_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (data_src_state_load_reg_311_pp0_iter1_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (data_src_state_load_reg_311_pp0_iter1_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (data_src_state_load_reg_311 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (data_src_state_load_reg_311 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            L1_data_out_V_TDATA_blk_n <= L1_data_out_V_1_state(1);
        else 
            L1_data_out_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    L1_data_out_V_TVALID <= L1_data_out_V_1_state(0);
    add_ln700_1_fu_147_p2 <= std_logic_vector(unsigned(section_count_V) + unsigned(ap_const_lv4_1));
    add_ln700_fu_165_p2 <= std_logic_vector(unsigned(sym_count_V) + unsigned(ap_const_lv6_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(L1_data_out_V_TREADY, L1_data_out_V_1_state, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(L1_data_out_V_TREADY, L1_data_out_V_1_state, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_io, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state2_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(L1_data_out_V_TREADY, L1_data_out_V_1_state, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_io, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state2_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(L1_data_out_V_1_ack_in, data_src_state_load_reg_311)
    begin
                ap_block_state2_io <= (((data_src_state_load_reg_311 = ap_const_lv2_0) and (ap_const_logic_0 = L1_data_out_V_1_ack_in)) or ((data_src_state_load_reg_311 = ap_const_lv2_1) and (ap_const_logic_0 = L1_data_out_V_1_ack_in)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(L1_data_out_V_1_ack_in, data_src_state_load_reg_311_pp0_iter1_reg)
    begin
                ap_block_state3_io <= (((data_src_state_load_reg_311_pp0_iter1_reg = ap_const_lv2_1) and (ap_const_logic_0 = L1_data_out_V_1_ack_in)) or ((data_src_state_load_reg_311_pp0_iter1_reg = ap_const_lv2_0) and (ap_const_logic_0 = L1_data_out_V_1_ack_in)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(L1_data_out_V_TREADY, L1_data_out_V_1_state)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_const_lv2_1 = L1_data_out_V_1_state) or ((ap_const_logic_0 = L1_data_out_V_TREADY) and (ap_const_lv2_3 = L1_data_out_V_1_state)));
    end process;


    ap_condition_165_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_165 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_178_assign_proc : process(ap_CS_fsm_pp0_stage0, data_src_state_load_load_fu_119_p1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_178 <= ((data_src_state_load_load_fu_119_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_187_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_src_state_load_load_fu_119_p1)
    begin
                ap_condition_187 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (data_src_state_load_load_fu_119_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1));
    end process;


    ap_condition_192_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_192 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge1_phi_fu_112_p4_assign_proc : process(select_ln68_fu_183_p3, ap_phi_reg_pp0_iter0_storemerge1_reg_109, icmp_ln879_fu_141_p2, ap_condition_187)
    begin
        if ((ap_const_boolean_1 = ap_condition_187)) then
            if ((icmp_ln879_fu_141_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge1_phi_fu_112_p4 <= ap_const_lv2_1;
            elsif ((icmp_ln879_fu_141_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge1_phi_fu_112_p4 <= select_ln68_fu_183_p3;
            else 
                ap_phi_mux_storemerge1_phi_fu_112_p4 <= ap_phi_reg_pp0_iter0_storemerge1_reg_109;
            end if;
        else 
            ap_phi_mux_storemerge1_phi_fu_112_p4 <= ap_phi_reg_pp0_iter0_storemerge1_reg_109;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge1_reg_109 <= "XX";
    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    data_src_state_load_load_fu_119_p1 <= data_src_state;
    icmp_ln10_1_fu_209_p2 <= "1" when (trunc_ln215_reg_322 = ap_const_lv2_1) else "0";
    icmp_ln10_fu_204_p2 <= "1" when (trunc_ln215_reg_322 = ap_const_lv2_0) else "0";
    icmp_ln879_1_fu_177_p2 <= "1" when (add_ln700_fu_165_p2 = ap_const_lv6_D) else "0";
    icmp_ln879_fu_141_p2 <= "1" when (section_count_V = ap_const_lv4_2) else "0";
    or_ln215_fu_222_p2 <= (icmp_ln10_fu_204_p2 or icmp_ln10_1_fu_209_p2);
    select_ln215_1_fu_228_p3 <= 
        select_ln215_fu_214_p3 when (or_ln215_fu_222_p2(0) = '1') else 
        ap_const_lv9_125;
    select_ln215_2_fu_240_p3 <= 
        ap_const_lv6_21 when (icmp_ln10_1_fu_209_p2(0) = '1') else 
        ap_const_lv6_0;
    select_ln215_3_fu_248_p3 <= 
        select_ln215_2_fu_240_p3 when (or_ln215_fu_222_p2(0) = '1') else 
        ap_const_lv6_39;
    select_ln215_4_fu_260_p3 <= 
        ap_const_lv7_18 when (icmp_ln10_1_fu_209_p2(0) = '1') else 
        ap_const_lv7_23;
    select_ln215_5_fu_268_p3 <= 
        select_ln215_4_fu_260_p3 when (or_ln215_fu_222_p2(0) = '1') else 
        ap_const_lv7_56;
    select_ln215_fu_214_p3 <= 
        ap_const_lv9_124 when (icmp_ln10_1_fu_209_p2(0) = '1') else 
        ap_const_lv9_123;
    select_ln68_fu_183_p3 <= 
        ap_const_lv2_2 when (icmp_ln879_1_fu_177_p2(0) = '1') else 
        ap_const_lv2_0;
        sext_ln215_fu_276_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln215_5_fu_268_p3),8));

    st_out_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(data_src_state_load_reg_311_pp0_iter1_reg),4));
    symbol_number_V <= t_V_reg_316_pp0_iter1_reg;
    tmp_1_fu_280_p7 <= (((((ap_const_lv12_45 & zext_ln215_fu_236_p1) & ap_const_lv2_0) & zext_ln215_1_fu_256_p1) & sext_ln215_fu_276_p1) & ap_const_lv20_0);
    tmp_fu_297_p4 <= ((ap_const_lv38_1124015C1 & t_V_reg_316) & ap_const_lv20_0);
    trunc_ln215_fu_137_p1 <= section_count_V(2 - 1 downto 0);
    zext_ln215_1_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_3_fu_248_p3),10));
    zext_ln215_fu_236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_1_fu_228_p3),12));
end behav;
