#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("extension_header_V_TVALID", 1, hls_in, 5, "axis", "in_vld", 1),
	Port_Property("beam_data_TVALID", 1, hls_in, 6, "axis", "in_vld", 1),
	Port_Property("numMatrix_V_V_TVALID", 1, hls_in, 14, "axis", "in_vld", 1),
	Port_Property("rtcid_V_V_TVALID", 1, hls_in, 15, "axis", "in_vld", 1),
	Port_Property("application_header_V_TVALID", 1, hls_in, 3, "axis", "in_vld", 1),
	Port_Property("section_header_V_TVALID", 1, hls_in, 4, "axis", "in_vld", 1),
	Port_Property("ethernet_header_V_TVALID", 1, hls_in, 1, "axis", "in_vld", 1),
	Port_Property("eCPRI_header_V_TVALID", 1, hls_in, 2, "axis", "in_vld", 1),
	Port_Property("eth_data_TREADY", 1, hls_in, 8, "axis", "out_acc", 1),
	Port_Property("mdata_numCoeff_V", 12, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("ethernet_header_V_TDATA", 112, hls_in, 1, "axis", "in_data", 1),
	Port_Property("ethernet_header_V_TREADY", 1, hls_out, 1, "axis", "in_acc", 1),
	Port_Property("eCPRI_header_V_TDATA", 64, hls_in, 2, "axis", "in_data", 1),
	Port_Property("eCPRI_header_V_TREADY", 1, hls_out, 2, "axis", "in_acc", 1),
	Port_Property("application_header_V_TDATA", 64, hls_in, 3, "axis", "in_data", 1),
	Port_Property("application_header_V_TREADY", 1, hls_out, 3, "axis", "in_acc", 1),
	Port_Property("section_header_V_TDATA", 64, hls_in, 4, "axis", "in_data", 1),
	Port_Property("section_header_V_TREADY", 1, hls_out, 4, "axis", "in_acc", 1),
	Port_Property("extension_header_V_TDATA", 72, hls_in, 5, "axis", "in_data", 1),
	Port_Property("extension_header_V_TREADY", 1, hls_out, 5, "axis", "in_acc", 1),
	Port_Property("beam_data_TDATA", 128, hls_in, 6, "axis", "in_data", 1),
	Port_Property("beam_data_TREADY", 1, hls_out, 7, "axis", "in_acc", 1),
	Port_Property("beam_data_TLAST", 1, hls_in, 7, "axis", "in_data", 1),
	Port_Property("eth_data_TDATA", 128, hls_out, 8, "axis", "out_data", 1),
	Port_Property("eth_data_TVALID", 1, hls_out, 11, "axis", "out_vld", 1),
	Port_Property("eth_data_TUSER", 1, hls_out, 9, "axis", "out_data", 1),
	Port_Property("eth_data_TKEEP", 16, hls_out, 10, "axis", "out_data", 1),
	Port_Property("eth_data_TLAST", 1, hls_out, 11, "axis", "out_data", 1),
	Port_Property("numCoeff_V", 5, hls_in, 12, "ap_none", "in_data", 1),
	Port_Property("cstate_out_V", 8, hls_out, 13, "ap_none", "out_data", 1),
	Port_Property("numMatrix_V_V_TDATA", 8, hls_in, 14, "axis", "in_data", 1),
	Port_Property("numMatrix_V_V_TREADY", 1, hls_out, 14, "axis", "in_acc", 1),
	Port_Property("rtcid_V_V_TDATA", 16, hls_in, 15, "axis", "in_data", 1),
	Port_Property("rtcid_V_V_TREADY", 1, hls_out, 15, "axis", "in_acc", 1),
};
const char* HLS_Design_Meta::dut_name = "cplane_packetizer";
